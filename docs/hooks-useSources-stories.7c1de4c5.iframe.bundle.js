"use strict";(self.webpackChunk_mapcomponents_react_maplibre=self.webpackChunk_mapcomponents_react_maplibre||[]).push([[6903],{"./src/components/MlGeojsonLayerWithSource/MlGeojsonLayerWithSource.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_hooks_useMap__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/useMap.ts"),_hooks_useLayer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/useLayer.ts"),_hooks_useSource__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/hooks/useSource.ts"),MlGeojsonLayerWithSource=function MlGeojsonLayerWithSource(props){var mapHook=(0,_hooks_useMap__WEBPACK_IMPORTED_MODULE_1__.A)({mapId:props.mapId,waitForLayer:props.insertBeforeLayer}),initializedRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),sourceId="geojson-source-island";return(0,_hooks_useSource__WEBPACK_IMPORTED_MODULE_3__.A)({mapId:props.mapId,sourceId,source:{type:"geojson",data:{type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[[[7.678070068359375,53.77276133960687],[7.665367126464845,53.76190478322587],[7.66794204711914,53.75439486837337],[7.682018280029297,53.75104541932613],[7.683563232421874,53.752567929273795],[7.6895713806152335,53.75784553654847],[7.694721221923828,53.765253366367],[7.697296142578124,53.76555776977467],[7.696952819824219,53.76190478322587],[7.702102661132812,53.7634268995759],[7.74038314819336,53.760179651329416],[7.7458763122558585,53.7626151110553],[7.76956558227539,53.76413720165758],[7.796001434326172,53.77002209954434],[7.801666259765624,53.77113810781356],[7.801666259765624,53.77235553754314],[7.806129455566406,53.77306568858016],[7.815742492675781,53.775703287246394],[7.819690704345703,53.77752921999979],[7.81951904296875,53.77955794100295],[7.8172874450683585,53.78026797018521],[7.785530090332031,53.780166538180396],[7.756175994873047,53.78067369575275],[7.754802703857421,53.7819922767562],[7.7398681640625,53.78189084891923],[7.725791931152345,53.78168799250984],[7.71686553955078,53.77986224069494],[7.709827423095702,53.78087655706549],[7.695751190185547,53.78036940194483],[7.687854766845703,53.778340720169446],[7.678070068359375,53.77276133960687]]]}}}}),(0,_hooks_useLayer__WEBPACK_IMPORTED_MODULE_2__.A)({mapId:props.mapId,layerId:"Spiekeroog-area",options:{id:"layer1",source:sourceId,type:"fill",paint:{"fill-color":"green","fill-opacity":.5}}}),(0,_hooks_useLayer__WEBPACK_IMPORTED_MODULE_2__.A)({mapId:props.mapId,layerId:"Spiekeroog-points",options:{id:"Spiekeroog-points",source:sourceId,type:"circle",paint:{"circle-radius":4,"circle-color":"green"}}}),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){mapHook.map&&!initializedRef.current&&(initializedRef.current=!0,mapHook.map.map.setCenter([7.7388381958,53.7732685866]),mapHook.map.map.setZoom(11))}),[mapHook.map,props.mapId]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null)};MlGeojsonLayerWithSource.defaultProps={mapId:"map_1"};const __WEBPACK_DEFAULT_EXPORT__=MlGeojsonLayerWithSource;try{MlGeojsonLayerWithSource.displayName="MlGeojsonLayerWithSource",MlGeojsonLayerWithSource.__docgenInfo={description:"MlGeojsonLayerWithSource",displayName:"MlGeojsonLayerWithSource",props:{mapId:{defaultValue:{value:"map_1"},description:"Id of the target MapLibre instance in mapContext",name:"mapId",required:!1,type:{name:"string | undefined"}},insertBeforeLayer:{defaultValue:null,description:'Id of an existing layer in the mapLibre instance to help specify the layer order\nThis layer will be visually beneath the layer with the "insertBeforeLayer" id.',name:"insertBeforeLayer",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MlGeojsonLayerWithSource/MlGeojsonLayerWithSource.tsx#MlGeojsonLayerWithSource"]={docgenInfo:MlGeojsonLayerWithSource.__docgenInfo,name:"MlGeojsonLayerWithSource",path:"src/components/MlGeojsonLayerWithSource/MlGeojsonLayerWithSource.tsx#MlGeojsonLayerWithSource"})}catch(__react_docgen_typescript_loader_error){}},"./src/decorators/MapContextDecoratorHooks.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_index__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/index.ts"),_components_MapLibreMap_MapLibreMap__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/MapLibreMap/MapLibreMap.tsx"),_components_MlNavigationTools_MlNavigationTools__WEBPACK_IMPORTED_MODULE_4__=(__webpack_require__("./src/decorators/style.css"),__webpack_require__("./src/components/MlNavigationTools/MlNavigationTools.tsx")),_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/esm/styles/ThemeProvider.js"),_ui_components_MapcomponentsTheme__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/ui_components/MapcomponentsTheme.tsx");const __WEBPACK_DEFAULT_EXPORT__=[function(Story,context){var _context$globals2,theme=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((function(){var _context$globals;return(0,_ui_components_MapcomponentsTheme__WEBPACK_IMPORTED_MODULE_5__.A)(null==context||null===(_context$globals=context.globals)||void 0===_context$globals?void 0:_context$globals.theme)}),[null==context||null===(_context$globals2=context.globals)||void 0===_context$globals2?void 0:_context$globals2.theme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"fullscreen_map"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index__WEBPACK_IMPORTED_MODULE_1__.mO,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.A,{theme},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_MapLibreMap_MapLibreMap__WEBPACK_IMPORTED_MODULE_2__.A,{options:{zoom:14.5,style:"https://wms.wheregroup.com/tileserver/style/osm-bright.json",center:[7.0851268,50.73884]},mapId:"map_1"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_MlNavigationTools_MlNavigationTools__WEBPACK_IMPORTED_MODULE_4__.A,{showZoomButtons:!1,mapId:"map_1"}))))}]},"./src/hooks/useSources.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{RemoveSourceExample:()=>RemoveSourceExample,UseGeojsonSourceExample:()=>UseGeojsonSourceExample,UseRasterSourceExample:()=>UseRasterSourceExample,UseVectorSourceExample:()=>UseVectorSourceExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useSources_stories});var useSource=__webpack_require__("./src/hooks/useSource.ts"),react=__webpack_require__("./node_modules/react/index.js"),useMap=__webpack_require__("./src/hooks/useMap.ts"),useMapState=__webpack_require__("./src/hooks/useMapState.ts"),useLayer=__webpack_require__("./src/hooks/useLayer.ts"),TopToolbar=__webpack_require__("./src/ui_components/TopToolbar.tsx"),Button=__webpack_require__("./node_modules/@mui/material/esm/Button/Button.js"),MlGeojsonLayerWithSource=__webpack_require__("./src/components/MlGeojsonLayerWithSource/MlGeojsonLayerWithSource.tsx"),MapContextDecoratorHooks=__webpack_require__("./src/decorators/MapContextDecoratorHooks.tsx");const pointWG_namespaceObject=JSON.parse('{"type":"Feature","geometry":{"type":"Point","coordinates":[7.0851268,50.73884],"properties":{"title":"Bonn"}}}');function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const useSources_stories={title:"Hooks/useSource",component:useSource.A,argTypes:{},decorators:MapContextDecoratorHooks.A};var UseGeojsonSourceExample=function GeojsonExample(args){var source=(0,useSource.A)(_objectSpread({},args)).source;return(0,useLayer.A)({mapId:args.mapId,layerId:"layer1",options:{source:null!=source&&source.id?source.id:"",type:"circle",paint:{"circle-radius":6,"circle-color":"red"}}}),(0,useLayer.A)({mapId:args.mapId,layerId:"layer2",options:{source:null!=source&&source.id?source.id:"",type:"circle",paint:{"circle-radius":4,"circle-color":"green"}}}),react.createElement(react.Fragment,null)}.bind({});UseGeojsonSourceExample.args={mapId:"map_1",sourceId:"geojson-source",source:{type:"geojson",data:pointWG_namespaceObject}};var UseVectorSourceExample=function VectorExample(args){(0,useSource.A)(_objectSpread({},args));var mapHook=(0,useMap.A)({mapId:args.mapId});return(0,react.useEffect)((function(){mapHook.map&&(mapHook.map.addLayer({id:"vector-lineLayer",type:"line",source:args.sourceId,minzoom:0,maxzoom:22,"source-layer":"landuse",layout:{"line-cap":"round","line-join":"round"},paint:{"line-width":2,"line-color":"#ff0000"}}),mapHook.map.addLayer({id:"vector-FillLayer",type:"fill",source:args.sourceId,minzoom:0,maxzoom:22,"source-layer":"landuse",paint:{"fill-color":"#32a850","fill-opacity":.4}}))}),[mapHook.map]),react.createElement(react.Fragment,null)}.bind({});UseVectorSourceExample.args={mapId:"map_1",sourceId:"vector-source",source:{type:"vector",tiles:["https://wms.wheregroup.com/tileserver/tile/tileserver.php?/europe-0-14/index.json?/europe-0-14/{z}/{x}/{y}.pbf"],tilesize:512,attribution:""}};var UseRasterSourceExample=function RasterExample(args){(0,useSource.A)(_objectSpread({},args));var mapHook=(0,useMap.A)({mapId:args.mapId});return(0,react.useEffect)((function(){mapHook.map&&mapHook.map.addLayer({id:"raster-wms",type:"raster",source:args.sourceId,minzoom:0,maxzoom:22})}),[mapHook.map]),react.createElement(react.Fragment,null)}.bind({});UseRasterSourceExample.args={mapId:"map_1",sourceId:"raster-source",source:{type:"raster",tiles:["https://www.wms.nrw.de/geobasis/wms_nw_uraufnahme?bbox={bbox-epsg-3857}&format=image/png&service=WMS&version=1.1.1&request=GetMap&srs=EPSG:3857&width=256&height=256&styles=&layers=nw_uraufnahme_rw"],tilesize:256,attribution:""}};var RemoveSourceExample=function removeExample(args){var _useState2=_slicedToArray((0,react.useState)(!0),2),sourceStatus=_useState2[0],setSourceStatus=_useState2[1],_useState4=_slicedToArray((0,react.useState)([]),2),activeSources=_useState4[0],setActiveSources=_useState4[1],mapHook=(0,useMap.A)({mapId:args.mapId}),mapState=(0,useMapState.A)({mapId:args.mapId,watch:{viewport:!1,layers:!0,sources:!0},filter:{includeBaseLayers:!1}});return(0,react.useEffect)((function(){mapHook.map&&mapHook.map.map.on("sourcedata",(function(){var _mapHook$map,_mapHook$map2;null!=mapHook&&null!==(_mapHook$map=mapHook.map)&&void 0!==_mapHook$map&&null!==(_mapHook$map=_mapHook$map.map)&&void 0!==_mapHook$map&&_mapHook$map.style.sourceCaches&&setActiveSources(Object.keys(null==mapHook||null===(_mapHook$map2=mapHook.map)||void 0===_mapHook$map2||null===(_mapHook$map2=_mapHook$map2.map)||void 0===_mapHook$map2?void 0:_mapHook$map2.style.sourceCaches))}))}),[mapHook.map]),react.createElement(react.Fragment,null,react.createElement(TopToolbar.A,{buttons:react.createElement(Button.A,{color:"primary",variant:sourceStatus?"contained":"outlined",onClick:function onClick(){return setSourceStatus(!sourceStatus)}},"Ml GeoJsonLayer With Source JSX Active?")}),sourceStatus&&react.createElement(MlGeojsonLayerWithSource.A,null),react.createElement("div",{style:{position:"fixed",zIndex:1290,display:"flex",flexWrap:"wrap",top:"62px",left:0,right:0,bottom:0,maxHeight:"100VH",backgroundColor:"rgba(80,80,80,.8)",padding:"50px",fontSize:"20px",color:"#51ff09",overflow:"hidden",pointerEvents:"none"}},(null==activeSources?void 0:activeSources.length)>0&&react.createElement("div",null,"Active sources: ",react.createElement("br",null)," ",JSON.stringify(activeSources,null,"  "),react.createElement("br",null)," ",react.createElement("br",null)," Active layers : ",react.createElement("pre",null,JSON.stringify(mapState,null,"  ")))))}.bind({});RemoveSourceExample.args={mapId:"map_1"};const __namedExportsOrder=["UseGeojsonSourceExample","UseVectorSourceExample","UseRasterSourceExample","RemoveSourceExample"]}}]);