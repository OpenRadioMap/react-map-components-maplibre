import{j as d}from"./index-nGUg9nSI.js";import{b as Ar,g as qr,r as I,R as Mr}from"./iframe-O9DyGZK0.js";import{aY as Ir,aZ as zt,p as Mt,Z as X,l as K,aR as Hr,a_ as tt,a$ as ue,_ as zo,aO as Br,b0 as Ee,b1 as Ao,b2 as qo,b as Rr,B as Eo,q as Nr,s as Cr,S as Dr,b3 as Fr,b4 as $r,o as Ur,b5 as Mo,b6 as Io}from"./style-DnMtoM4T.js";import{d as Wr}from"./EmptyMapDecorator-Dm5vxDqK.js";import"./index-CYTFyfAa.js";import"./preload-helper-D9Z9MdNV.js";var At={exports:{}};const Vr={},Qr=Object.freeze(Object.defineProperty({__proto__:null,default:Vr},Symbol.toStringTag,{value:"Module"})),Po=Ar(Qr);var To;function Xr(){return To||(To=1,(function(u,E){var q=void 0,O=function(A){return q||(q=new Promise(function(V,F){var T=typeof A<"u"?A:{},ee=T.onAbort;T.onAbort=function(e){F(new Error(e)),ee&&ee(e)},T.postRun=T.postRun||[],T.postRun.push(function(){V(T)}),u=void 0;var a;a||=typeof T<"u"?T:{};var ot=typeof window=="object",N=typeof WorkerGlobalScope<"u",me=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string"&&process.type!="renderer";a.onRuntimeInitialized=function(){function e(i,p){switch(typeof p){case"boolean":Or(i,p?1:0);break;case"number":Er(i,p);break;case"string":Pr(i,p,-1,-1);break;case"object":if(p===null)ko(i);else if(p.length!=null){var m=Ze(p,Je);Tr(i,m,p.length,-1),Ke(m)}else et(i,"Wrong API use : tried to return a value of an unknown type ("+p+").",-1);break;default:ko(i)}}function t(i,p){for(var m=[],h=0;h<i;h+=1){var b=Y(p+4*h,"i32"),_=_r(b);if(_===1||_===2)b=Lr(b);else if(_===3)b=Sr(b);else if(_===4){_=b,b=kr(_),_=jr(_);for(var U=new Uint8Array(b),D=0;D<b;D+=1)U[D]=z[_+D];b=U}else b=null;m.push(b)}return m}function o(i,p){this.Qa=i,this.db=p,this.Oa=1,this.lb=[]}function r(i,p){if(this.db=p,p=ze(i)+1,this.eb=Pt(p),this.eb===null)throw Error("Unable to allocate memory for the SQL string");J(i,v,this.eb,p),this.kb=this.eb,this.Za=this.pb=null}function n(i){if(this.filename="dbfile_"+(4294967295*Math.random()>>>0),i!=null){var p=this.filename,m="/",h=p;if(m&&(m=typeof m=="string"?m:ht(m),h=p?dt(m+"/"+p):m),p=Gt(!0,!0),h=Zo(h,p),i){if(typeof i=="string"){m=Array(i.length);for(var b=0,_=i.length;b<_;++b)m[b]=i.charCodeAt(b);i=m}Qe(h,p|146),m=be(h,577),mo(m,i,0,i.length,0),_t(m),Qe(h,p)}}this.handleError(y(this.filename,l)),this.db=Y(l,"i32"),jo(this.db),this.fb={},this.Sa={}}var l=ne(4),s=a.cwrap,y=s("sqlite3_open","number",["string","number"]),w=s("sqlite3_close_v2","number",["number"]),x=s("sqlite3_exec","number",["number","string","number","number","number"]),L=s("sqlite3_changes","number",["number"]),B=s("sqlite3_prepare_v2","number",["number","string","number","number","number"]),go=s("sqlite3_sql","string",["number"]),ar=s("sqlite3_normalized_sql","string",["number"]),xo=s("sqlite3_prepare_v2","number",["number","number","number","number","number"]),ir=s("sqlite3_bind_text","number",["number","number","number","number","number"]),wo=s("sqlite3_bind_blob","number",["number","number","number","number","number"]),lr=s("sqlite3_bind_double","number",["number","number","number"]),sr=s("sqlite3_bind_int","number",["number","number","number"]),pr=s("sqlite3_bind_parameter_index","number",["number","string"]),cr=s("sqlite3_step","number",["number"]),ur=s("sqlite3_errmsg","string",["number"]),mr=s("sqlite3_column_count","number",["number"]),dr=s("sqlite3_data_count","number",["number"]),fr=s("sqlite3_column_double","number",["number","number"]),vo=s("sqlite3_column_text","string",["number","number"]),yr=s("sqlite3_column_blob","number",["number","number"]),hr=s("sqlite3_column_bytes","number",["number","number"]),br=s("sqlite3_column_type","number",["number","number"]),gr=s("sqlite3_column_name","string",["number","number"]),xr=s("sqlite3_reset","number",["number"]),wr=s("sqlite3_clear_bindings","number",["number"]),vr=s("sqlite3_finalize","number",["number"]),_o=s("sqlite3_create_function_v2","number","number string number number number number number number number".split(" ")),_r=s("sqlite3_value_type","number",["number"]),kr=s("sqlite3_value_bytes","number",["number"]),Sr=s("sqlite3_value_text","string",["number"]),jr=s("sqlite3_value_blob","number",["number"]),Lr=s("sqlite3_value_double","number",["number"]),Er=s("sqlite3_result_double","",["number","number"]),ko=s("sqlite3_result_null","",["number"]),Pr=s("sqlite3_result_text","",["number","string","number","number"]),Tr=s("sqlite3_result_blob","",["number","number","number","number"]),Or=s("sqlite3_result_int","",["number","number"]),et=s("sqlite3_result_error","",["number","string","number"]),So=s("sqlite3_aggregate_context","number",["number","number"]),jo=s("RegisterExtensionFunctions","number",["number"]),Lo=s("sqlite3_update_hook","number",["number","number","number"]);o.prototype.bind=function(i){if(!this.Qa)throw"Statement closed";return this.reset(),Array.isArray(i)?this.Cb(i):i!=null&&typeof i=="object"?this.Db(i):!0},o.prototype.step=function(){if(!this.Qa)throw"Statement closed";this.Oa=1;var i=cr(this.Qa);switch(i){case 100:return!0;case 101:return!1;default:throw this.db.handleError(i)}},o.prototype.wb=function(i){return i==null&&(i=this.Oa,this.Oa+=1),fr(this.Qa,i)},o.prototype.Gb=function(i){if(i==null&&(i=this.Oa,this.Oa+=1),i=vo(this.Qa,i),typeof BigInt!="function")throw Error("BigInt is not supported");return BigInt(i)},o.prototype.Hb=function(i){return i==null&&(i=this.Oa,this.Oa+=1),vo(this.Qa,i)},o.prototype.getBlob=function(i){i==null&&(i=this.Oa,this.Oa+=1);var p=hr(this.Qa,i);i=yr(this.Qa,i);for(var m=new Uint8Array(p),h=0;h<p;h+=1)m[h]=z[i+h];return m},o.prototype.get=function(i,p){p=p||{},i!=null&&this.bind(i)&&this.step(),i=[];for(var m=dr(this.Qa),h=0;h<m;h+=1)switch(br(this.Qa,h)){case 1:var b=p.useBigInt?this.Gb(h):this.wb(h);i.push(b);break;case 2:i.push(this.wb(h));break;case 3:i.push(this.Hb(h));break;case 4:i.push(this.getBlob(h));break;default:i.push(null)}return i},o.prototype.getColumnNames=function(){for(var i=[],p=mr(this.Qa),m=0;m<p;m+=1)i.push(gr(this.Qa,m));return i},o.prototype.getAsObject=function(i,p){i=this.get(i,p),p=this.getColumnNames();for(var m={},h=0;h<p.length;h+=1)m[p[h]]=i[h];return m},o.prototype.getSQL=function(){return go(this.Qa)},o.prototype.getNormalizedSQL=function(){return ar(this.Qa)},o.prototype.run=function(i){return i!=null&&this.bind(i),this.step(),this.reset()},o.prototype.sb=function(i,p){p==null&&(p=this.Oa,this.Oa+=1),i=Vt(i);var m=Ze(i,Je);this.lb.push(m),this.db.handleError(ir(this.Qa,p,m,i.length-1,0))},o.prototype.Bb=function(i,p){p==null&&(p=this.Oa,this.Oa+=1);var m=Ze(i,Je);this.lb.push(m),this.db.handleError(wo(this.Qa,p,m,i.length,0))},o.prototype.rb=function(i,p){p==null&&(p=this.Oa,this.Oa+=1),this.db.handleError((i===(i|0)?sr:lr)(this.Qa,p,i))},o.prototype.Eb=function(i){i==null&&(i=this.Oa,this.Oa+=1),wo(this.Qa,i,0,0,0)},o.prototype.tb=function(i,p){switch(p==null&&(p=this.Oa,this.Oa+=1),typeof i){case"string":this.sb(i,p);return;case"number":this.rb(i,p);return;case"bigint":this.sb(i.toString(),p);return;case"boolean":this.rb(i+0,p);return;case"object":if(i===null){this.Eb(p);return}if(i.length!=null){this.Bb(i,p);return}}throw"Wrong API use : tried to bind a value of an unknown type ("+i+")."},o.prototype.Db=function(i){var p=this;return Object.keys(i).forEach(function(m){var h=pr(p.Qa,m);h!==0&&p.tb(i[m],h)}),!0},o.prototype.Cb=function(i){for(var p=0;p<i.length;p+=1)this.tb(i[p],p+1);return!0},o.prototype.reset=function(){return this.freemem(),wr(this.Qa)===0&&xr(this.Qa)===0},o.prototype.freemem=function(){for(var i;(i=this.lb.pop())!==void 0;)Ke(i)},o.prototype.free=function(){this.freemem();var i=vr(this.Qa)===0;return delete this.db.fb[this.Qa],this.Qa=0,i},r.prototype.next=function(){if(this.eb===null)return{done:!0};if(this.Za!==null&&(this.Za.free(),this.Za=null),!this.db.db)throw this.mb(),Error("Database closed");var i=He(),p=ne(4);Oe(l),Oe(p);try{this.db.handleError(xo(this.db.db,this.kb,-1,l,p)),this.kb=Y(p,"i32");var m=Y(l,"i32");return m===0?(this.mb(),{done:!0}):(this.Za=new o(m,this.db),this.db.fb[m]=this.Za,{value:this.Za,done:!1})}catch(h){throw this.pb=mt(this.kb),this.mb(),h}finally{Ie(i)}},r.prototype.mb=function(){Ke(this.eb),this.eb=null},r.prototype.getRemainingSQL=function(){return this.pb!==null?this.pb:mt(this.kb)},typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"&&(r.prototype[Symbol.iterator]=function(){return this}),n.prototype.run=function(i,p){if(!this.db)throw"Database closed";if(p){i=this.prepare(i,p);try{i.step()}finally{i.free()}}else this.handleError(x(this.db,i,0,0,l));return this},n.prototype.exec=function(i,p,m){if(!this.db)throw"Database closed";var h=He(),b=null;try{var _=Lt(i),U=ne(4);for(i=[];Y(_,"i8")!==0;){Oe(l),Oe(U),this.handleError(xo(this.db,_,-1,l,U));var D=Y(l,"i32");if(_=Y(U,"i32"),D!==0){var R=null;for(b=new o(D,this),p!=null&&b.bind(p);b.step();)R===null&&(R={columns:b.getColumnNames(),values:[]},i.push(R)),R.values.push(b.get(null,m));b.free()}}return i}catch(W){throw b&&b.free(),W}finally{Ie(h)}},n.prototype.each=function(i,p,m,h,b){typeof p=="function"&&(h=m,m=p,p=void 0),i=this.prepare(i,p);try{for(;i.step();)m(i.getAsObject(null,b))}finally{i.free()}if(typeof h=="function")return h()},n.prototype.prepare=function(i,p){if(Oe(l),this.handleError(B(this.db,i,-1,l,0)),i=Y(l,"i32"),i===0)throw"Nothing to prepare";var m=new o(i,this);return p!=null&&m.bind(p),this.fb[i]=m},n.prototype.iterateStatements=function(i){return new r(i,this)},n.prototype.export=function(){Object.values(this.fb).forEach(function(p){p.free()}),Object.values(this.Sa).forEach(re),this.Sa={},this.handleError(w(this.db));var i=Ko(this.filename);return this.handleError(y(this.filename,l)),this.db=Y(l,"i32"),jo(this.db),i},n.prototype.close=function(){this.db!==null&&(Object.values(this.fb).forEach(function(i){i.free()}),Object.values(this.Sa).forEach(re),this.Sa={},this.Ya&&(re(this.Ya),this.Ya=void 0),this.handleError(w(this.db)),lo("/"+this.filename),this.db=null)},n.prototype.handleError=function(i){if(i===0)return null;throw i=ur(this.db),Error(i)},n.prototype.getRowsModified=function(){return L(this.db)},n.prototype.create_function=function(i,p){Object.prototype.hasOwnProperty.call(this.Sa,i)&&(re(this.Sa[i]),delete this.Sa[i]);var m=Me(function(h,b,_){b=t(b,_);try{var U=p.apply(null,b)}catch(D){et(h,D,-1);return}e(h,U)},"viii");return this.Sa[i]=m,this.handleError(_o(this.db,i,p.length,1,0,m,0,0,0)),this},n.prototype.create_aggregate=function(i,p){var m=p.init||function(){return null},h=p.finalize||function(R){return R},b=p.step;if(!b)throw"An aggregate function must have a step function in "+i;var _={};Object.hasOwnProperty.call(this.Sa,i)&&(re(this.Sa[i]),delete this.Sa[i]),p=i+"__finalize",Object.hasOwnProperty.call(this.Sa,p)&&(re(this.Sa[p]),delete this.Sa[p]);var U=Me(function(R,W,Ot){var ce=So(R,1);Object.hasOwnProperty.call(_,ce)||(_[ce]=m()),W=t(W,Ot),W=[_[ce]].concat(W);try{_[ce]=b.apply(null,W)}catch(zr){delete _[ce],et(R,zr,-1)}},"viii"),D=Me(function(R){var W=So(R,1);try{var Ot=h(_[W])}catch(ce){delete _[W],et(R,ce,-1);return}e(R,Ot),delete _[W]},"vi");return this.Sa[i]=U,this.Sa[p]=D,this.handleError(_o(this.db,i,b.length-1,1,0,0,U,D,0)),this},n.prototype.updateHook=function(i){this.Ya&&(Lo(this.db,0,0),re(this.Ya),this.Ya=void 0),i&&(this.Ya=Me(function(p,m,h,b,_){switch(m){case 18:p="insert";break;case 23:p="update";break;case 9:p="delete";break;default:throw"unknown operationCode in updateHook callback: "+m}if(h=h?j(v,h):"",b=b?j(v,b):"",_>Number.MAX_SAFE_INTEGER)throw"rowId too big to fit inside a Number";i(p,h,b,Number(_))},"viiiij"),Lo(this.db,this.Ya,0))},a.Database=n};var Ht={...a},rt="./this.program",Be=(e,t)=>{throw t},G="",nt,Re;if(me){var at=Po;G=__dirname+"/",Re=e=>(e=Fe(e)?new URL(e):e,at.readFileSync(e)),nt=async e=>(e=Fe(e)?new URL(e):e,at.readFileSync(e,void 0)),!a.thisProgram&&1<process.argv.length&&(rt=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),u.exports=a,Be=(e,t)=>{throw process.exitCode=e,t}}else(ot||N)&&(N?G=self.location.href:typeof document<"u"&&document.currentScript&&(G=document.currentScript.src),G=G.startsWith("blob:")?"":G.slice(0,G.replace(/[?#].*/,"").lastIndexOf("/")+1),N&&(Re=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),nt=async e=>{if(Fe(e))return new Promise((o,r)=>{var n=new XMLHttpRequest;n.open("GET",e,!0),n.responseType="arraybuffer",n.onload=()=>{n.status==200||n.status==0&&n.response?o(n.response):r(n.status)},n.onerror=r,n.send(null)});var t=await fetch(e,{credentials:"same-origin"});if(t.ok)return t.arrayBuffer();throw Error(t.status+" : "+t.url)});var Bt=a.print||console.log.bind(console),de=a.printErr||console.error.bind(console);Object.assign(a,Ht),Ht=null,a.thisProgram&&(rt=a.thisProgram);var Ne=a.wasmBinary,Ce,De=!1,it,z,v,Pe,k,P,lt,$,st,Fe=e=>e.startsWith("file://");function Rt(){var e=Ce.buffer;a.HEAP8=z=new Int8Array(e),a.HEAP16=Pe=new Int16Array(e),a.HEAPU8=v=new Uint8Array(e),a.HEAPU16=new Uint16Array(e),a.HEAP32=k=new Int32Array(e),a.HEAPU32=P=new Uint32Array(e),a.HEAPF32=lt=new Float32Array(e),a.HEAPF64=st=new Float64Array(e),a.HEAP64=$=new BigInt64Array(e),a.HEAPU64=new BigUint64Array(e)}var ie=0,Te=null;function fe(e){throw a.onAbort?.(e),e="Aborted("+e+")",de(e),De=!0,new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info.")}var pt;async function Ro(e){if(!Ne)try{var t=await nt(e);return new Uint8Array(t)}catch{}if(e==pt&&Ne)e=new Uint8Array(Ne);else if(Re)e=Re(e);else throw"both async and sync fetching of the wasm failed";return e}async function No(e,t){try{var o=await Ro(e);return await WebAssembly.instantiate(o,t)}catch(r){de(`failed to asynchronously prepare wasm: ${r}`),fe(r)}}async function Co(e){var t=pt;if(!Ne&&typeof WebAssembly.instantiateStreaming=="function"&&!Fe(t)&&!me)try{var o=fetch(t,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(o,e)}catch(r){de(`wasm streaming compile failed: ${r}`),de("falling back to ArrayBuffer instantiation")}return No(t,e)}class ct{name="ExitStatus";constructor(t){this.message=`Program terminated with exit(${t})`,this.status=t}}var Nt=e=>{for(;0<e.length;)e.shift()(a)},Ct=[],Dt=[],Do=()=>{var e=a.preRun.shift();Dt.unshift(e)};function Y(e,t="i8"){switch(t.endsWith("*")&&(t="*"),t){case"i1":return z[e];case"i8":return z[e];case"i16":return Pe[e>>1];case"i32":return k[e>>2];case"i64":return $[e>>3];case"float":return lt[e>>2];case"double":return st[e>>3];case"*":return P[e>>2];default:fe(`invalid type for getValue: ${t}`)}}var ut=a.noExitRuntime||!0;function Oe(e){var t="i32";switch(t.endsWith("*")&&(t="*"),t){case"i1":z[e]=0;break;case"i8":z[e]=0;break;case"i16":Pe[e>>1]=0;break;case"i32":k[e>>2]=0;break;case"i64":$[e>>3]=BigInt(0);break;case"float":lt[e>>2]=0;break;case"double":st[e>>3]=0;break;case"*":P[e>>2]=0;break;default:fe(`invalid type for setValue: ${t}`)}}var Ft=typeof TextDecoder<"u"?new TextDecoder:void 0,j=(e,t=0,o=NaN)=>{var r=t+o;for(o=t;e[o]&&!(o>=r);)++o;if(16<o-t&&e.buffer&&Ft)return Ft.decode(e.subarray(t,o));for(r="";t<o;){var n=e[t++];if(n&128){var l=e[t++]&63;if((n&224)==192)r+=String.fromCharCode((n&31)<<6|l);else{var s=e[t++]&63;n=(n&240)==224?(n&15)<<12|l<<6|s:(n&7)<<18|l<<12|s<<6|e[t++]&63,65536>n?r+=String.fromCharCode(n):(n-=65536,r+=String.fromCharCode(55296|n>>10,56320|n&1023))}}else r+=String.fromCharCode(n)}return r},mt=(e,t)=>e?j(v,e,t):"",$t=(e,t)=>{for(var o=0,r=e.length-1;0<=r;r--){var n=e[r];n==="."?e.splice(r,1):n===".."?(e.splice(r,1),o++):o&&(e.splice(r,1),o--)}if(t)for(;o;o--)e.unshift("..");return e},dt=e=>{var t=e.charAt(0)==="/",o=e.slice(-1)==="/";return(e=$t(e.split("/").filter(r=>!!r),!t).join("/"))||t||(e="."),e&&o&&(e+="/"),(t?"/":"")+e},Ut=e=>{var t=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(e).slice(1);return e=t[0],t=t[1],!e&&!t?".":(t&&=t.slice(0,-1),e+t)},$e=e=>e&&e.match(/([^\/]+|\/)\/*$/)[1],Fo=()=>{if(me){var e=Po;return t=>e.randomFillSync(t)}return t=>crypto.getRandomValues(t)},Wt=e=>{(Wt=Fo())(e)},$o=(...e)=>{for(var t="",o=!1,r=e.length-1;-1<=r&&!o;r--){if(o=0<=r?e[r]:"/",typeof o!="string")throw new TypeError("Arguments to path.resolve must be strings");if(!o)return"";t=o+"/"+t,o=o.charAt(0)==="/"}return t=$t(t.split("/").filter(n=>!!n),!o).join("/"),(o?"/":"")+t||"."},ft=[],ze=e=>{for(var t=0,o=0;o<e.length;++o){var r=e.charCodeAt(o);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++o):t+=3}return t},J=(e,t,o,r)=>{if(!(0<r))return 0;var n=o;r=o+r-1;for(var l=0;l<e.length;++l){var s=e.charCodeAt(l);if(55296<=s&&57343>=s){var y=e.charCodeAt(++l);s=65536+((s&1023)<<10)|y&1023}if(127>=s){if(o>=r)break;t[o++]=s}else{if(2047>=s){if(o+1>=r)break;t[o++]=192|s>>6}else{if(65535>=s){if(o+2>=r)break;t[o++]=224|s>>12}else{if(o+3>=r)break;t[o++]=240|s>>18,t[o++]=128|s>>12&63}t[o++]=128|s>>6&63}t[o++]=128|s&63}}return t[o]=0,o-n},Vt=(e,t)=>{var o=Array(ze(e)+1);return e=J(e,o,0,o.length),t&&(o.length=e),o},Qt=[];function Xt(e,t){Qt[e]={input:[],output:[],cb:t},wt(e,Uo)}var Uo={open(e){var t=Qt[e.node.rdev];if(!t)throw new c(43);e.tty=t,e.seekable=!1},close(e){e.tty.cb.fsync(e.tty)},fsync(e){e.tty.cb.fsync(e.tty)},read(e,t,o,r){if(!e.tty||!e.tty.cb.xb)throw new c(60);for(var n=0,l=0;l<r;l++){try{var s=e.tty.cb.xb(e.tty)}catch{throw new c(29)}if(s===void 0&&n===0)throw new c(6);if(s==null)break;n++,t[o+l]=s}return n&&(e.node.atime=Date.now()),n},write(e,t,o,r){if(!e.tty||!e.tty.cb.qb)throw new c(60);try{for(var n=0;n<r;n++)e.tty.cb.qb(e.tty,t[o+n])}catch{throw new c(29)}return r&&(e.node.mtime=e.node.ctime=Date.now()),n}},Wo={xb(){e:{if(!ft.length){var e=null;if(me){var t=Buffer.alloc(256),o=0,r=process.stdin.fd;try{o=at.readSync(r,t,0,256)}catch(n){if(n.toString().includes("EOF"))o=0;else throw n}0<o&&(e=t.slice(0,o).toString("utf-8"))}else typeof window<"u"&&typeof window.prompt=="function"&&(e=window.prompt("Input: "),e!==null&&(e+=`
`));if(!e){e=null;break e}ft=Vt(e,!0)}e=ft.shift()}return e},qb(e,t){t===null||t===10?(Bt(j(e.output)),e.output=[]):t!=0&&e.output.push(t)},fsync(e){0<e.output?.length&&(Bt(j(e.output)),e.output=[])},Tb(){return{Ob:25856,Qb:5,Nb:191,Pb:35387,Mb:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},Ub(){return 0},Vb(){return[24,80]}},Vo={qb(e,t){t===null||t===10?(de(j(e.output)),e.output=[]):t!=0&&e.output.push(t)},fsync(e){0<e.output?.length&&(de(j(e.output)),e.output=[])}},g={Wa:null,Xa(){return g.createNode(null,"/",16895,0)},createNode(e,t,o,r){if((o&61440)===24576||(o&61440)===4096)throw new c(63);return g.Wa||(g.Wa={dir:{node:{Ta:g.La.Ta,Ua:g.La.Ua,lookup:g.La.lookup,hb:g.La.hb,rename:g.La.rename,unlink:g.La.unlink,rmdir:g.La.rmdir,readdir:g.La.readdir,symlink:g.La.symlink},stream:{Va:g.Ma.Va}},file:{node:{Ta:g.La.Ta,Ua:g.La.Ua},stream:{Va:g.Ma.Va,read:g.Ma.read,write:g.Ma.write,ib:g.Ma.ib,jb:g.Ma.jb}},link:{node:{Ta:g.La.Ta,Ua:g.La.Ua,readlink:g.La.readlink},stream:{}},ub:{node:{Ta:g.La.Ta,Ua:g.La.Ua},stream:Jo}}),o=eo(e,t,o,r),H(o.mode)?(o.La=g.Wa.dir.node,o.Ma=g.Wa.dir.stream,o.Na={}):(o.mode&61440)===32768?(o.La=g.Wa.file.node,o.Ma=g.Wa.file.stream,o.Ra=0,o.Na=null):(o.mode&61440)===40960?(o.La=g.Wa.link.node,o.Ma=g.Wa.link.stream):(o.mode&61440)===8192&&(o.La=g.Wa.ub.node,o.Ma=g.Wa.ub.stream),o.atime=o.mtime=o.ctime=Date.now(),e&&(e.Na[t]=o,e.atime=e.mtime=e.ctime=o.atime),o},Sb(e){return e.Na?e.Na.subarray?e.Na.subarray(0,e.Ra):new Uint8Array(e.Na):new Uint8Array(0)},La:{Ta(e){var t={};return t.dev=(e.mode&61440)===8192?e.id:1,t.ino=e.id,t.mode=e.mode,t.nlink=1,t.uid=0,t.gid=0,t.rdev=e.rdev,H(e.mode)?t.size=4096:(e.mode&61440)===32768?t.size=e.Ra:(e.mode&61440)===40960?t.size=e.link.length:t.size=0,t.atime=new Date(e.atime),t.mtime=new Date(e.mtime),t.ctime=new Date(e.ctime),t.blksize=4096,t.blocks=Math.ceil(t.size/t.blksize),t},Ua(e,t){for(var o of["mode","atime","mtime","ctime"])t[o]!=null&&(e[o]=t[o]);t.size!==void 0&&(t=t.size,e.Ra!=t&&(t==0?(e.Na=null,e.Ra=0):(o=e.Na,e.Na=new Uint8Array(t),o&&e.Na.set(o.subarray(0,Math.min(t,e.Ra))),e.Ra=t)))},lookup(){throw g.vb},hb(e,t,o,r){return g.createNode(e,t,o,r)},rename(e,t,o){try{var r=le(t,o)}catch{}if(r){if(H(e.mode))for(var n in r.Na)throw new c(55);gt(r)}delete e.parent.Na[e.name],t.Na[o]=e,e.name=o,t.ctime=t.mtime=e.parent.ctime=e.parent.mtime=Date.now()},unlink(e,t){delete e.Na[t],e.ctime=e.mtime=Date.now()},rmdir(e,t){var o=le(e,t),r;for(r in o.Na)throw new c(55);delete e.Na[t],e.ctime=e.mtime=Date.now()},readdir(e){return[".","..",...Object.keys(e.Na)]},symlink(e,t,o){return e=g.createNode(e,t,41471,0),e.link=o,e},readlink(e){if((e.mode&61440)!==40960)throw new c(28);return e.link}},Ma:{read(e,t,o,r,n){var l=e.node.Na;if(n>=e.node.Ra)return 0;if(e=Math.min(e.node.Ra-n,r),8<e&&l.subarray)t.set(l.subarray(n,n+e),o);else for(r=0;r<e;r++)t[o+r]=l[n+r];return e},write(e,t,o,r,n,l){if(t.buffer===z.buffer&&(l=!1),!r)return 0;if(e=e.node,e.mtime=e.ctime=Date.now(),t.subarray&&(!e.Na||e.Na.subarray)){if(l)return e.Na=t.subarray(o,o+r),e.Ra=r;if(e.Ra===0&&n===0)return e.Na=t.slice(o,o+r),e.Ra=r;if(n+r<=e.Ra)return e.Na.set(t.subarray(o,o+r),n),r}l=n+r;var s=e.Na?e.Na.length:0;if(s>=l||(l=Math.max(l,s*(1048576>s?2:1.125)>>>0),s!=0&&(l=Math.max(l,256)),s=e.Na,e.Na=new Uint8Array(l),0<e.Ra&&e.Na.set(s.subarray(0,e.Ra),0)),e.Na.subarray&&t.subarray)e.Na.set(t.subarray(o,o+r),n);else for(l=0;l<r;l++)e.Na[n+l]=t[o+l];return e.Ra=Math.max(e.Ra,n+r),r},Va(e,t,o){if(o===1?t+=e.position:o===2&&(e.node.mode&61440)===32768&&(t+=e.node.Ra),0>t)throw new c(28);return t},ib(e,t,o,r,n){if((e.node.mode&61440)!==32768)throw new c(43);if(e=e.node.Na,n&2||!e||e.buffer!==z.buffer){n=!0,r=65536*Math.ceil(t/65536);var l=ho(65536,r);if(l&&v.fill(0,l,l+r),r=l,!r)throw new c(48);e&&((0<o||o+t<e.length)&&(e.subarray?e=e.subarray(o,o+t):e=Array.prototype.slice.call(e,o,o+t)),z.set(e,r))}else n=!1,r=e.byteOffset;return{Kb:r,Ab:n}},jb(e,t,o,r){return g.Ma.write(e,t,0,r,o,!1),0}}},Gt=(e,t)=>{var o=0;return e&&(o|=365),t&&(o|=146),o},yt=null,Yt={},ye=[],Qo=1,te=null,Jt=!1,Zt=!0,Kt={},c=class{name="ErrnoError";constructor(e){this.Pa=e}},Xo=class{gb={};node=null;get flags(){return this.gb.flags}set flags(e){this.gb.flags=e}get position(){return this.gb.position}set position(e){this.gb.position=e}},Go=class{La={};Ma={};ab=null;constructor(e,t,o,r){e||=this,this.parent=e,this.Xa=e.Xa,this.id=Qo++,this.name=t,this.mode=o,this.rdev=r,this.atime=this.mtime=this.ctime=Date.now()}get read(){return(this.mode&365)===365}set read(e){e?this.mode|=365:this.mode&=-366}get write(){return(this.mode&146)===146}set write(e){e?this.mode|=146:this.mode&=-147}};function C(e,t={}){if(!e)throw new c(44);t.nb??(t.nb=!0),e.charAt(0)==="/"||(e="//"+e);var o=0;e:for(;40>o;o++){e=e.split("/").filter(y=>!!y);for(var r=yt,n="/",l=0;l<e.length;l++){var s=l===e.length-1;if(s&&t.parent)break;if(e[l]!==".")if(e[l]==="..")n=Ut(n),r=r.parent;else{n=dt(n+"/"+e[l]);try{r=le(r,e[l])}catch(y){if(y?.Pa===44&&s&&t.Jb)return{path:n};throw y}if(!r.ab||s&&!t.nb||(r=r.ab.root),(r.mode&61440)===40960&&(!s||t.$a)){if(!r.La.readlink)throw new c(52);r=r.La.readlink(r),r.charAt(0)==="/"||(r=Ut(n)+"/"+r),e=r+"/"+e.slice(l+1).join("/");continue e}}}return{path:n,node:r}}throw new c(32)}function ht(e){for(var t;;){if(e===e.parent)return e=e.Xa.zb,t?e[e.length-1]!=="/"?`${e}/${t}`:e+t:e;t=t?`${e.name}/${t}`:e.name,e=e.parent}}function bt(e,t){for(var o=0,r=0;r<t.length;r++)o=(o<<5)-o+t.charCodeAt(r)|0;return(e+o>>>0)%te.length}function gt(e){var t=bt(e.parent.id,e.name);if(te[t]===e)te[t]=e.bb;else for(t=te[t];t;){if(t.bb===e){t.bb=e.bb;break}t=t.bb}}function le(e,t){var o=H(e.mode)?(o=he(e,"x"))?o:e.La.lookup?0:2:54;if(o)throw new c(o);for(o=te[bt(e.id,t)];o;o=o.bb){var r=o.name;if(o.parent.id===e.id&&r===t)return o}return e.La.lookup(e,t)}function eo(e,t,o,r){return e=new Go(e,t,o,r),t=bt(e.parent.id,e.name),e.bb=te[t],te[t]=e}function H(e){return(e&61440)===16384}function to(e){var t=["r","w","rw"][e&3];return e&512&&(t+="w"),t}function he(e,t){if(Zt)return 0;if(!t.includes("r")||e.mode&292){if(t.includes("w")&&!(e.mode&146)||t.includes("x")&&!(e.mode&73))return 2}else return 2;return 0}function oo(e,t){if(!H(e.mode))return 54;try{return le(e,t),20}catch{}return he(e,"wx")}function ro(e,t,o){try{var r=le(e,t)}catch(n){return n.Pa}if(e=he(e,"wx"))return e;if(o){if(!H(r.mode))return 54;if(r===r.parent||ht(r)==="/")return 10}else if(H(r.mode))return 31;return 0}function Ue(e){if(!e)throw new c(63);return e}function M(e){if(e=ye[e],!e)throw new c(8);return e}function no(e,t=-1){if(e=Object.assign(new Xo,e),t==-1)e:{for(t=0;4096>=t;t++)if(!ye[t])break e;throw new c(33)}return e.fd=t,ye[t]=e}function Yo(e,t=-1){return e=no(e,t),e.Ma?.Rb?.(e),e}function xt(e,t,o){var r=e?.Ma.Ua;e=r?e:t,r??=t.La.Ua,Ue(r),r(e,o)}var Jo={open(e){e.Ma=Yt[e.node.rdev].Ma,e.Ma.open?.(e)},Va(){throw new c(70)}};function wt(e,t){Yt[e]={Ma:t}}function ao(e,t){var o=t==="/";if(o&&yt)throw new c(10);if(!o&&t){var r=C(t,{nb:!1});if(t=r.path,r=r.node,r.ab)throw new c(10);if(!H(r.mode))throw new c(54)}t={type:e,Wb:{},zb:t,Ib:[]},e=e.Xa(t),e.Xa=t,t.root=e,o?yt=e:r&&(r.ab=t,r.Xa&&r.Xa.Ib.push(t))}function We(e,t,o){var r=C(e,{parent:!0}).node;if(e=$e(e),!e)throw new c(28);if(e==="."||e==="..")throw new c(20);var n=oo(r,e);if(n)throw new c(n);if(!r.La.hb)throw new c(63);return r.La.hb(r,e,t,o)}function Zo(e,t=438){return We(e,t&4095|32768,0)}function Q(e,t=511){return We(e,t&1023|16384,0)}function Ve(e,t,o){typeof o>"u"&&(o=t,t=438),We(e,t|8192,o)}function vt(e,t){if(!$o(e))throw new c(44);var o=C(t,{parent:!0}).node;if(!o)throw new c(44);t=$e(t);var r=oo(o,t);if(r)throw new c(r);if(!o.La.symlink)throw new c(63);o.La.symlink(o,t,e)}function io(e){var t=C(e,{parent:!0}).node;e=$e(e);var o=le(t,e),r=ro(t,e,!0);if(r)throw new c(r);if(!t.La.rmdir)throw new c(63);if(o.ab)throw new c(10);t.La.rmdir(t,e),gt(o)}function lo(e){var t=C(e,{parent:!0}).node;if(!t)throw new c(44);e=$e(e);var o=le(t,e),r=ro(t,e,!1);if(r)throw new c(r);if(!t.La.unlink)throw new c(63);if(o.ab)throw new c(10);t.La.unlink(t,e),gt(o)}function Ae(e,t){return e=C(e,{$a:!t}).node,Ue(e.La.Ta)(e)}function so(e,t,o,r){xt(e,t,{mode:o&4095|t.mode&-4096,ctime:Date.now(),Fb:r})}function Qe(e,t){e=typeof e=="string"?C(e,{$a:!0}).node:e,so(null,e,t)}function po(e,t,o){if(H(t.mode))throw new c(31);if((t.mode&61440)!==32768)throw new c(28);var r=he(t,"w");if(r)throw new c(r);xt(e,t,{size:o,timestamp:Date.now()})}function be(e,t,o=438){if(e==="")throw new c(44);if(typeof t=="string"){var r={r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090}[t];if(typeof r>"u")throw Error(`Unknown file open mode: ${t}`);t=r}if(o=t&64?o&4095|32768:0,typeof e=="object")r=e;else{var n=e.endsWith("/");e=C(e,{$a:!(t&131072),Jb:!0}),r=e.node,e=e.path}var l=!1;if(t&64)if(r){if(t&128)throw new c(20)}else{if(n)throw new c(31);r=We(e,o|511,0),l=!0}if(!r)throw new c(44);if((r.mode&61440)===8192&&(t&=-513),t&65536&&!H(r.mode))throw new c(54);if(!l&&(n=r?(r.mode&61440)===40960?32:H(r.mode)&&(to(t)!=="r"||t&576)?31:he(r,to(t)):44))throw new c(n);return t&512&&!l&&(n=r,n=typeof n=="string"?C(n,{$a:!0}).node:n,po(null,n,0)),t&=-131713,n=no({node:r,path:ht(r),flags:t,seekable:!0,position:0,Ma:r.Ma,Lb:[],error:!1}),n.Ma.open&&n.Ma.open(n),l&&Qe(r,o&511),!a.logReadFiles||t&1||e in Kt||(Kt[e]=1),n}function _t(e){if(e.fd===null)throw new c(8);e.ob&&(e.ob=null);try{e.Ma.close&&e.Ma.close(e)}catch(t){throw t}finally{ye[e.fd]=null}e.fd=null}function co(e,t,o){if(e.fd===null)throw new c(8);if(!e.seekable||!e.Ma.Va)throw new c(70);if(o!=0&&o!=1&&o!=2)throw new c(28);e.position=e.Ma.Va(e,t,o),e.Lb=[]}function uo(e,t,o,r,n){if(0>r||0>n)throw new c(28);if(e.fd===null)throw new c(8);if((e.flags&2097155)===1)throw new c(8);if(H(e.node.mode))throw new c(31);if(!e.Ma.read)throw new c(28);var l=typeof n<"u";if(!l)n=e.position;else if(!e.seekable)throw new c(70);return t=e.Ma.read(e,t,o,r,n),l||(e.position+=t),t}function mo(e,t,o,r,n){if(0>r||0>n)throw new c(28);if(e.fd===null)throw new c(8);if((e.flags&2097155)===0)throw new c(8);if(H(e.node.mode))throw new c(31);if(!e.Ma.write)throw new c(28);e.seekable&&e.flags&1024&&co(e,0,2);var l=typeof n<"u";if(!l)n=e.position;else if(!e.seekable)throw new c(70);return t=e.Ma.write(e,t,o,r,n,void 0),l||(e.position+=t),t}function Ko(e){var t,o=be(e,o||0);e=Ae(e).size;var r=new Uint8Array(e);return uo(o,r,0,e,0),t=r,_t(o),t}function oe(e,t,o){e=dt("/dev/"+e);var r=Gt(!!t,!!o);oe.yb??(oe.yb=64);var n=oe.yb++<<8|0;wt(n,{open(l){l.seekable=!1},close(){o?.buffer?.length&&o(10)},read(l,s,y,w){for(var x=0,L=0;L<w;L++){try{var B=t()}catch{throw new c(29)}if(B===void 0&&x===0)throw new c(6);if(B==null)break;x++,s[y+L]=B}return x&&(l.node.atime=Date.now()),x},write(l,s,y,w){for(var x=0;x<w;x++)try{o(s[y+x])}catch{throw new c(29)}return w&&(l.node.mtime=l.node.ctime=Date.now()),x}}),Ve(e,r,n)}var S={};function se(e,t,o){if(t.charAt(0)==="/")return t;if(e=e===-100?"/":M(e).path,t.length==0){if(!o)throw new c(44);return e}return e+"/"+t}function Xe(e,t){k[e>>2]=t.dev,k[e+4>>2]=t.mode,P[e+8>>2]=t.nlink,k[e+12>>2]=t.uid,k[e+16>>2]=t.gid,k[e+20>>2]=t.rdev,$[e+24>>3]=BigInt(t.size),k[e+32>>2]=4096,k[e+36>>2]=t.blocks;var o=t.atime.getTime(),r=t.mtime.getTime(),n=t.ctime.getTime();return $[e+40>>3]=BigInt(Math.floor(o/1e3)),P[e+48>>2]=o%1e3*1e6,$[e+56>>3]=BigInt(Math.floor(r/1e3)),P[e+64>>2]=r%1e3*1e6,$[e+72>>3]=BigInt(Math.floor(n/1e3)),P[e+80>>2]=n%1e3*1e6,$[e+88>>3]=BigInt(t.ino),0}var Ge=void 0,Ye=()=>{var e=k[+Ge>>2];return Ge+=4,e},kt=0,er=[0,31,60,91,121,152,182,213,244,274,305,335],tr=[0,31,59,90,120,151,181,212,243,273,304,334],qe={},fo=e=>{it=e,ut||0<kt||(a.onExit?.(e),De=!0),Be(e,new ct(e))},or=e=>{if(!De)try{if(e(),!(ut||0<kt))try{it=e=it,fo(e)}catch(t){t instanceof ct||t=="unwind"||Be(1,t)}}catch(t){t instanceof ct||t=="unwind"||Be(1,t)}},St={},yo=()=>{if(!jt){var e={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:rt||"./this.program"},t;for(t in St)St[t]===void 0?delete e[t]:e[t]=St[t];var o=[];for(t in e)o.push(`${t}=${e[t]}`);jt=o}return jt},jt,Lt=e=>{var t=ze(e)+1,o=ne(t);return J(e,v,o,t),o},rr=(e,t,o,r)=>{var n={string:x=>{var L=0;return x!=null&&x!==0&&(L=Lt(x)),L},array:x=>{var L=ne(x.length);return z.set(x,L),L}};e=a["_"+e];var l=[],s=0;if(r)for(var y=0;y<r.length;y++){var w=n[o[y]];w?(s===0&&(s=He()),l[y]=w(r[y])):l[y]=r[y]}return o=e(...l),o=(function(x){return s!==0&&Ie(s),t==="string"?x?j(v,x):"":t==="boolean"?!!x:x})(o)},Je=0,Ze=(e,t)=>(t=t==1?ne(e.length):Pt(e.length),e.subarray||e.slice||(e=new Uint8Array(e)),v.set(e,t),t),pe,Et=[],Z,re=e=>{pe.delete(Z.get(e)),Z.set(e,null),Et.push(e)},Me=(e,t)=>{if(!pe){pe=new WeakMap;var o=Z.length;if(pe)for(var r=0;r<0+o;r++){var n=Z.get(r);n&&pe.set(n,r)}}if(o=pe.get(e)||0)return o;if(Et.length)o=Et.pop();else{try{Z.grow(1)}catch(w){throw w instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":w}o=Z.length-1}try{Z.set(o,e)}catch(w){if(!(w instanceof TypeError))throw w;if(typeof WebAssembly.Function=="function"){var l=WebAssembly.Function;r={i:"i32",j:"i64",f:"f32",d:"f64",e:"externref",p:"i32"},n={parameters:[],results:t[0]=="v"?[]:[r[t[0]]]};for(var s=1;s<t.length;++s)n.parameters.push(r[t[s]]);t=new l(n,e)}else{r=[1],n=t.slice(0,1),t=t.slice(1),s={i:127,p:127,j:126,f:125,d:124,e:111},r.push(96);var y=t.length;128>y?r.push(y):r.push(y%128|128,y>>7);for(l of t)r.push(s[l]);n=="v"?r.push(0):r.push(1,s[n]),t=[0,97,115,109,1,0,0,0,1],l=r.length,128>l?t.push(l):t.push(l%128|128,l>>7),t.push(...r),t.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0),t=new WebAssembly.Module(new Uint8Array(t)),t=new WebAssembly.Instance(t,{e:{f:e}}).exports.f}Z.set(o,t)}return pe.set(e,o),o};te=Array(4096),ao(g,"/"),Q("/tmp"),Q("/home"),Q("/home/web_user"),(function(){Q("/dev"),wt(259,{read:()=>0,write:(r,n,l,s)=>s,Va:()=>0}),Ve("/dev/null",259),Xt(1280,Wo),Xt(1536,Vo),Ve("/dev/tty",1280),Ve("/dev/tty1",1536);var e=new Uint8Array(1024),t=0,o=()=>(t===0&&(Wt(e),t=e.byteLength),e[--t]);oe("random",o),oe("urandom",o),Q("/dev/shm"),Q("/dev/shm/tmp")})(),(function(){Q("/proc");var e=Q("/proc/self");Q("/proc/self/fd"),ao({Xa(){var t=eo(e,"fd",16895,73);return t.Ma={Va:g.Ma.Va},t.La={lookup(o,r){o=+r;var n=M(o);return o={parent:null,Xa:{zb:"fake"},La:{readlink:()=>n.path},id:o+1},o.parent=o},readdir(){return Array.from(ye.entries()).filter(([,o])=>o).map(([o])=>o.toString())}},t}},"/proc/self/fd")})(),g.vb=new c(44),g.vb.stack="<generic error, no stack>";var nr={a:(e,t,o,r)=>fe(`Assertion failed: ${e?j(v,e):""}, at: `+[t?t?j(v,t):"":"unknown filename",o,r?r?j(v,r):"":"unknown function"]),i:function(e,t){try{return e=e?j(v,e):"",Qe(e,t),0}catch(o){if(typeof S>"u"||o.name!=="ErrnoError")throw o;return-o.Pa}},L:function(e,t,o){try{if(t=t?j(v,t):"",t=se(e,t),o&-8)return-28;var r=C(t,{$a:!0}).node;return r?(e="",o&4&&(e+="r"),o&2&&(e+="w"),o&1&&(e+="x"),e&&he(r,e)?-2:0):-44}catch(n){if(typeof S>"u"||n.name!=="ErrnoError")throw n;return-n.Pa}},j:function(e,t){try{var o=M(e);return so(o,o.node,t,!1),0}catch(r){if(typeof S>"u"||r.name!=="ErrnoError")throw r;return-r.Pa}},h:function(e){try{var t=M(e);return xt(t,t.node,{timestamp:Date.now(),Fb:!1}),0}catch(o){if(typeof S>"u"||o.name!=="ErrnoError")throw o;return-o.Pa}},b:function(e,t,o){Ge=o;try{var r=M(e);switch(t){case 0:var n=Ye();if(0>n)break;for(;ye[n];)n++;return Yo(r,n).fd;case 1:case 2:return 0;case 3:return r.flags;case 4:return n=Ye(),r.flags|=n,0;case 12:return n=Ye(),Pe[n+0>>1]=2,0;case 13:case 14:return 0}return-28}catch(l){if(typeof S>"u"||l.name!=="ErrnoError")throw l;return-l.Pa}},g:function(e,t){try{var o=M(e),r=o.node,n=o.Ma.Ta;e=n?o:r,n??=r.La.Ta,Ue(n);var l=n(e);return Xe(t,l)}catch(s){if(typeof S>"u"||s.name!=="ErrnoError")throw s;return-s.Pa}},H:function(e,t){t=-9007199254740992>t||9007199254740992<t?NaN:Number(t);try{if(isNaN(t))return 61;var o=M(e);if(0>t||(o.flags&2097155)===0)throw new c(28);return po(o,o.node,t),0}catch(r){if(typeof S>"u"||r.name!=="ErrnoError")throw r;return-r.Pa}},G:function(e,t){try{if(t===0)return-28;var o=ze("/")+1;return t<o?-68:(J("/",v,e,t),o)}catch(r){if(typeof S>"u"||r.name!=="ErrnoError")throw r;return-r.Pa}},K:function(e,t){try{return e=e?j(v,e):"",Xe(t,Ae(e,!0))}catch(o){if(typeof S>"u"||o.name!=="ErrnoError")throw o;return-o.Pa}},C:function(e,t,o){try{return t=t?j(v,t):"",t=se(e,t),Q(t,o),0}catch(r){if(typeof S>"u"||r.name!=="ErrnoError")throw r;return-r.Pa}},J:function(e,t,o,r){try{t=t?j(v,t):"";var n=r&256;return t=se(e,t,r&4096),Xe(o,n?Ae(t,!0):Ae(t))}catch(l){if(typeof S>"u"||l.name!=="ErrnoError")throw l;return-l.Pa}},x:function(e,t,o,r){Ge=r;try{t=t?j(v,t):"",t=se(e,t);var n=r?Ye():0;return be(t,o,n).fd}catch(l){if(typeof S>"u"||l.name!=="ErrnoError")throw l;return-l.Pa}},v:function(e,t,o,r){try{if(t=t?j(v,t):"",t=se(e,t),0>=r)return-28;var n=C(t).node;if(!n)throw new c(44);if(!n.La.readlink)throw new c(28);var l=n.La.readlink(n),s=Math.min(r,ze(l)),y=z[o+s];return J(l,v,o,r+1),z[o+s]=y,s}catch(w){if(typeof S>"u"||w.name!=="ErrnoError")throw w;return-w.Pa}},u:function(e){try{return e=e?j(v,e):"",io(e),0}catch(t){if(typeof S>"u"||t.name!=="ErrnoError")throw t;return-t.Pa}},f:function(e,t){try{return e=e?j(v,e):"",Xe(t,Ae(e))}catch(o){if(typeof S>"u"||o.name!=="ErrnoError")throw o;return-o.Pa}},r:function(e,t,o){try{return t=t?j(v,t):"",t=se(e,t),o===0?lo(t):o===512?io(t):fe("Invalid flags passed to unlinkat"),0}catch(r){if(typeof S>"u"||r.name!=="ErrnoError")throw r;return-r.Pa}},q:function(e,t,o){try{t=t?j(v,t):"",t=se(e,t,!0);var r=Date.now(),n,l;if(o){var s=P[o>>2]+4294967296*k[o+4>>2],y=k[o+8>>2];y==1073741823?n=r:y==1073741822?n=null:n=1e3*s+y/1e6,o+=16,s=P[o>>2]+4294967296*k[o+4>>2],y=k[o+8>>2],y==1073741823?l=r:y==1073741822?l=null:l=1e3*s+y/1e6}else l=n=r;if((l??n)!==null){e=n;var w=C(t,{$a:!0}).node;Ue(w.La.Ua)(w,{atime:e,mtime:l})}return 0}catch(x){if(typeof S>"u"||x.name!=="ErrnoError")throw x;return-x.Pa}},m:()=>fe(""),l:()=>{ut=!1,kt=0},A:function(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),e=new Date(1e3*e),k[t>>2]=e.getSeconds(),k[t+4>>2]=e.getMinutes(),k[t+8>>2]=e.getHours(),k[t+12>>2]=e.getDate(),k[t+16>>2]=e.getMonth(),k[t+20>>2]=e.getFullYear()-1900,k[t+24>>2]=e.getDay();var o=e.getFullYear();k[t+28>>2]=(o%4!==0||o%100===0&&o%400!==0?tr:er)[e.getMonth()]+e.getDate()-1|0,k[t+36>>2]=-(60*e.getTimezoneOffset()),o=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();k[t+32>>2]=(o!=r&&e.getTimezoneOffset()==Math.min(r,o))|0},y:function(e,t,o,r,n,l,s){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n);try{if(isNaN(n))return 61;var y=M(r);if((t&2)!==0&&(o&2)===0&&(y.flags&2097155)!==2)throw new c(2);if((y.flags&2097155)===1)throw new c(2);if(!y.Ma.ib)throw new c(43);if(!e)throw new c(28);var w=y.Ma.ib(y,e,n,t,o),x=w.Kb;return k[l>>2]=w.Ab,P[s>>2]=x,0}catch(L){if(typeof S>"u"||L.name!=="ErrnoError")throw L;return-L.Pa}},z:function(e,t,o,r,n,l){l=-9007199254740992>l||9007199254740992<l?NaN:Number(l);try{var s=M(n);if(o&2){if(o=l,(s.node.mode&61440)!==32768)throw new c(43);if(!(r&2)){var y=v.slice(e,e+t);s.Ma.jb&&s.Ma.jb(s,y,o,t,r)}}}catch(w){if(typeof S>"u"||w.name!=="ErrnoError")throw w;return-w.Pa}},n:(e,t)=>{if(qe[e]&&(clearTimeout(qe[e].id),delete qe[e]),!t)return 0;var o=setTimeout(()=>{delete qe[e],or(()=>bo(e,performance.now()))},t);return qe[e]={id:o,Xb:t},0},B:(e,t,o,r)=>{var n=new Date().getFullYear(),l=new Date(n,0,1).getTimezoneOffset();n=new Date(n,6,1).getTimezoneOffset(),P[e>>2]=60*Math.max(l,n),k[t>>2]=+(l!=n),t=s=>{var y=Math.abs(s);return`UTC${0<=s?"-":"+"}${String(Math.floor(y/60)).padStart(2,"0")}${String(y%60).padStart(2,"0")}`},e=t(l),t=t(n),n<l?(J(e,v,o,17),J(t,v,r,17)):(J(e,v,r,17),J(t,v,o,17))},d:()=>Date.now(),s:()=>2147483648,c:()=>performance.now(),o:e=>{var t=v.length;if(e>>>=0,2147483648<e)return!1;for(var o=1;4>=o;o*=2){var r=t*(1+.2/o);r=Math.min(r,e+100663296);e:{r=(Math.min(2147483648,65536*Math.ceil(Math.max(e,r)/65536))-Ce.buffer.byteLength+65535)/65536|0;try{Ce.grow(r),Rt();var n=1;break e}catch{}n=void 0}if(n)return!0}return!1},E:(e,t)=>{var o=0;return yo().forEach((r,n)=>{var l=t+o;for(n=P[e+4*n>>2]=l,l=0;l<r.length;++l)z[n++]=r.charCodeAt(l);z[n]=0,o+=r.length+1}),0},F:(e,t)=>{var o=yo();P[e>>2]=o.length;var r=0;return o.forEach(n=>r+=n.length+1),P[t>>2]=r,0},e:function(e){try{var t=M(e);return _t(t),0}catch(o){if(typeof S>"u"||o.name!=="ErrnoError")throw o;return o.Pa}},p:function(e,t){try{var o=M(e);return z[t]=o.tty?2:H(o.mode)?3:(o.mode&61440)===40960?7:4,Pe[t+2>>1]=0,$[t+8>>3]=BigInt(0),$[t+16>>3]=BigInt(0),0}catch(r){if(typeof S>"u"||r.name!=="ErrnoError")throw r;return r.Pa}},w:function(e,t,o,r){try{e:{var n=M(e);e=t;for(var l,s=t=0;s<o;s++){var y=P[e>>2],w=P[e+4>>2];e+=8;var x=uo(n,z,y,w,l);if(0>x){var L=-1;break e}if(t+=x,x<w)break;typeof l<"u"&&(l+=x)}L=t}return P[r>>2]=L,0}catch(B){if(typeof S>"u"||B.name!=="ErrnoError")throw B;return B.Pa}},D:function(e,t,o,r){t=-9007199254740992>t||9007199254740992<t?NaN:Number(t);try{if(isNaN(t))return 61;var n=M(e);return co(n,t,o),$[r>>3]=BigInt(n.position),n.ob&&t===0&&o===0&&(n.ob=null),0}catch(l){if(typeof S>"u"||l.name!=="ErrnoError")throw l;return l.Pa}},I:function(e){try{var t=M(e);return t.Ma?.fsync?t.Ma.fsync(t):0}catch(o){if(typeof S>"u"||o.name!=="ErrnoError")throw o;return o.Pa}},t:function(e,t,o,r){try{e:{var n=M(e);e=t;for(var l,s=t=0;s<o;s++){var y=P[e>>2],w=P[e+4>>2];e+=8;var x=mo(n,z,y,w,l);if(0>x){var L=-1;break e}if(t+=x,x<w)break;typeof l<"u"&&(l+=x)}L=t}return P[r>>2]=L,0}catch(B){if(typeof S>"u"||B.name!=="ErrnoError")throw B;return B.Pa}},k:fo},f;(async function(){function e(o){return f=o.exports,Ce=f.M,Rt(),Z=f.O,ie--,a.monitorRunDependencies?.(ie),ie==0&&Te&&(o=Te,Te=null,o()),f}ie++,a.monitorRunDependencies?.(ie);var t={a:nr};return a.instantiateWasm?new Promise(o=>{a.instantiateWasm(t,(r,n)=>{e(r),o(r.exports)})}):(pt??=a.locateFile?a.locateFile("sql-wasm.wasm",G):G+"sql-wasm.wasm",e((await Co(t)).instance))})(),a._sqlite3_free=e=>(a._sqlite3_free=f.P)(e),a._sqlite3_value_text=e=>(a._sqlite3_value_text=f.Q)(e),a._sqlite3_prepare_v2=(e,t,o,r,n)=>(a._sqlite3_prepare_v2=f.R)(e,t,o,r,n),a._sqlite3_step=e=>(a._sqlite3_step=f.S)(e),a._sqlite3_reset=e=>(a._sqlite3_reset=f.T)(e),a._sqlite3_exec=(e,t,o,r,n)=>(a._sqlite3_exec=f.U)(e,t,o,r,n),a._sqlite3_finalize=e=>(a._sqlite3_finalize=f.V)(e),a._sqlite3_column_name=(e,t)=>(a._sqlite3_column_name=f.W)(e,t),a._sqlite3_column_text=(e,t)=>(a._sqlite3_column_text=f.X)(e,t),a._sqlite3_column_type=(e,t)=>(a._sqlite3_column_type=f.Y)(e,t),a._sqlite3_errmsg=e=>(a._sqlite3_errmsg=f.Z)(e),a._sqlite3_clear_bindings=e=>(a._sqlite3_clear_bindings=f._)(e),a._sqlite3_value_blob=e=>(a._sqlite3_value_blob=f.$)(e),a._sqlite3_value_bytes=e=>(a._sqlite3_value_bytes=f.aa)(e),a._sqlite3_value_double=e=>(a._sqlite3_value_double=f.ba)(e),a._sqlite3_value_int=e=>(a._sqlite3_value_int=f.ca)(e),a._sqlite3_value_type=e=>(a._sqlite3_value_type=f.da)(e),a._sqlite3_result_blob=(e,t,o,r)=>(a._sqlite3_result_blob=f.ea)(e,t,o,r),a._sqlite3_result_double=(e,t)=>(a._sqlite3_result_double=f.fa)(e,t),a._sqlite3_result_error=(e,t,o)=>(a._sqlite3_result_error=f.ga)(e,t,o),a._sqlite3_result_int=(e,t)=>(a._sqlite3_result_int=f.ha)(e,t),a._sqlite3_result_int64=(e,t)=>(a._sqlite3_result_int64=f.ia)(e,t),a._sqlite3_result_null=e=>(a._sqlite3_result_null=f.ja)(e),a._sqlite3_result_text=(e,t,o,r)=>(a._sqlite3_result_text=f.ka)(e,t,o,r),a._sqlite3_aggregate_context=(e,t)=>(a._sqlite3_aggregate_context=f.la)(e,t),a._sqlite3_column_count=e=>(a._sqlite3_column_count=f.ma)(e),a._sqlite3_data_count=e=>(a._sqlite3_data_count=f.na)(e),a._sqlite3_column_blob=(e,t)=>(a._sqlite3_column_blob=f.oa)(e,t),a._sqlite3_column_bytes=(e,t)=>(a._sqlite3_column_bytes=f.pa)(e,t),a._sqlite3_column_double=(e,t)=>(a._sqlite3_column_double=f.qa)(e,t),a._sqlite3_bind_blob=(e,t,o,r,n)=>(a._sqlite3_bind_blob=f.ra)(e,t,o,r,n),a._sqlite3_bind_double=(e,t,o)=>(a._sqlite3_bind_double=f.sa)(e,t,o),a._sqlite3_bind_int=(e,t,o)=>(a._sqlite3_bind_int=f.ta)(e,t,o),a._sqlite3_bind_text=(e,t,o,r,n)=>(a._sqlite3_bind_text=f.ua)(e,t,o,r,n),a._sqlite3_bind_parameter_index=(e,t)=>(a._sqlite3_bind_parameter_index=f.va)(e,t),a._sqlite3_sql=e=>(a._sqlite3_sql=f.wa)(e),a._sqlite3_normalized_sql=e=>(a._sqlite3_normalized_sql=f.xa)(e),a._sqlite3_changes=e=>(a._sqlite3_changes=f.ya)(e),a._sqlite3_close_v2=e=>(a._sqlite3_close_v2=f.za)(e),a._sqlite3_create_function_v2=(e,t,o,r,n,l,s,y,w)=>(a._sqlite3_create_function_v2=f.Aa)(e,t,o,r,n,l,s,y,w),a._sqlite3_update_hook=(e,t,o)=>(a._sqlite3_update_hook=f.Ba)(e,t,o),a._sqlite3_open=(e,t)=>(a._sqlite3_open=f.Ca)(e,t);var Pt=a._malloc=e=>(Pt=a._malloc=f.Da)(e),Ke=a._free=e=>(Ke=a._free=f.Ea)(e);a._RegisterExtensionFunctions=e=>(a._RegisterExtensionFunctions=f.Fa)(e);var ho=(e,t)=>(ho=f.Ga)(e,t),bo=(e,t)=>(bo=f.Ha)(e,t),Ie=e=>(Ie=f.Ia)(e),ne=e=>(ne=f.Ja)(e),He=()=>(He=f.Ka)();a.stackSave=()=>He(),a.stackRestore=e=>Ie(e),a.stackAlloc=e=>ne(e),a.cwrap=(e,t,o,r)=>{var n=!o||o.every(l=>l==="number"||l==="boolean");return t!=="string"&&n&&!r?a["_"+e]:(...l)=>rr(e,t,o,l)},a.addFunction=Me,a.removeFunction=re,a.UTF8ToString=mt,a.ALLOC_NORMAL=Je,a.allocate=Ze,a.allocateUTF8OnStack=Lt;function Tt(){function e(){if(a.calledRun=!0,!De){if(!a.noFSInit&&!Jt){var t,o;Jt=!0,r??=a.stdin,t??=a.stdout,o??=a.stderr,r?oe("stdin",r):vt("/dev/tty","/dev/stdin"),t?oe("stdout",null,t):vt("/dev/tty","/dev/stdout"),o?oe("stderr",null,o):vt("/dev/tty1","/dev/stderr"),be("/dev/stdin",0),be("/dev/stdout",1),be("/dev/stderr",1)}if(f.N(),Zt=!1,a.onRuntimeInitialized?.(),a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;){var r=a.postRun.shift();Ct.unshift(r)}Nt(Ct)}}if(0<ie)Te=Tt;else{if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)Do();Nt(Dt),0<ie?Te=Tt:a.setStatus?(a.setStatus("Running..."),setTimeout(()=>{setTimeout(()=>a.setStatus(""),1),e()},1)):e()}}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();return Tt(),T}),q)};u.exports=O,u.exports.default=O})(At)),At.exports}var Gr=Xr();const Yr=qr(Gr),qt={},Jr=u=>{const E=u.split("://"),O=(E.length>2?E[1]+"://"+E[2]:E[1]).split("/"),A=O.length,V=O.splice(A-1,1)[0],F=O.splice(A-2,1)[0],T=O.splice(A-3,1)[0];return{filename:O.join("/"),z:T,x:F,y:V}},Zr=async({filename:u})=>{if(!qt[u]){const E=await Yr(),O=await(await fetch(u)).arrayBuffer(),A=new E.Database(new Uint8Array(O));qt[u]=A}return qt[u]};async function Kr(u){const E=await Zr(u),q="SELECT tile_data FROM tiles WHERE zoom_level = "+u.z+" AND tile_column = "+u.x+" AND tile_row = "+(Math.pow(2,parseInt(u.z))-parseInt(u.y)-1);return new Promise((O,A)=>{try{const V=E.exec(q);if(V.length!==1){A(new Error("Tile not found."));return}const F=V[0].values[0][0];let T;if(F[0]===31&&F[1]===139?T=Ir(F):T=F,T?.buffer)O(T.buffer);else{A(new Error("Tile not found."));return}}catch(V){A(V)}})}const Ho=async u=>{const E=Jr(u.url),q=await Kr(E);if(q)return{data:q};throw new Error("Tile not found"+E.filename)},Bo={version:8,name:"OSM Bright",metadata:{"mapbox:type":"template","mapbox:groups":{"1444849364238.8171":{collapsed:!1,name:"Buildings"},"1444849354174.1904":{collapsed:!0,name:"Tunnels"},"1444849388993.3071":{collapsed:!1,name:"Land"},"1444849242106.713":{collapsed:!1,name:"Places"},"1444849382550.77":{collapsed:!1,name:"Water"},"1444849345966.4436":{collapsed:!1,name:"Roads"},"1444849334699.1902":{collapsed:!0,name:"Bridges"}},"mapbox:autocomposite":!1,"openmaptiles:version":"3.x","openmaptiles:mapbox:owner":"openmaptiles","openmaptiles:mapbox:source:url":"mapbox://openmaptiles.4qljc88t"},center:[8.542,47.372],zoom:11.6,bearing:0,pitch:0,sources:{openmaptiles:{type:"vector",url:zt.sourceOptions_tiles}},sprite:zt.sprite,glyphs:zt.glyphs,layers:[{id:"background",type:"background",paint:{"background-color":"#f8f4f0"}},{id:"landcover-glacier",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landcover",filter:["==","subclass","glacier"],layout:{visibility:"visible"},paint:{"fill-color":"#fff","fill-opacity":{base:1,stops:[[0,.9],[10,.3]]}}},{id:"landuse-residential",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landuse",filter:["==","class","residential"],paint:{"fill-color":{base:1,stops:[[12,"hsla(30, 19%, 90%, 0.4)"],[16,"hsla(30, 19%, 90%, 0.2)"]]}}},{id:"landuse-commercial",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landuse",filter:["all",["==","$type","Polygon"],["==","class","commercial"]],paint:{"fill-color":"hsla(0, 60%, 87%, 0.23)"}},{id:"landuse-industrial",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landuse",filter:["all",["==","$type","Polygon"],["==","class","industrial"]],paint:{"fill-color":"hsla(49, 100%, 88%, 0.34)"}},{id:"park",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"park",filter:["==","$type","Polygon"],paint:{"fill-color":"#d8e8c8","fill-opacity":{base:1.8,stops:[[9,.5],[12,.2]]}}},{id:"park-outline",type:"line",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"park",filter:["==","$type","Polygon"],layout:{},paint:{"line-color":{base:1,stops:[[6,"hsla(96, 40%, 49%, 0.36)"],[8,"hsla(96, 40%, 49%, 0.66)"]]},"line-dasharray":[3,3]}},{id:"landuse-cemetery",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landuse",filter:["==","class","cemetery"],paint:{"fill-color":"#e0e4dd"}},{id:"landuse-hospital",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landuse",filter:["==","class","hospital"],paint:{"fill-color":"#fde"}},{id:"landuse-school",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landuse",filter:["==","class","school"],paint:{"fill-color":"#f0e8f8"}},{id:"landuse-railway",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landuse",filter:["==","class","railway"],paint:{"fill-color":"hsla(30, 19%, 90%, 0.4)"}},{id:"landcover-wood",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landcover",filter:["==","class","wood"],paint:{"fill-color":"#6a4","fill-opacity":.1,"fill-outline-color":"hsla(0, 0%, 0%, 0.03)","fill-antialias":{base:1,stops:[[0,!1],[9,!0]]}}},{id:"landcover-grass",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landcover",filter:["==","class","grass"],paint:{"fill-color":"#d8e8c8","fill-opacity":1}},{id:"landcover-grass-park",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"park",filter:["==","class","public_park"],paint:{"fill-color":"#d8e8c8","fill-opacity":.8}},{id:"waterway-other",type:"line",metadata:{"mapbox:group":"1444849382550.77"},source:"openmaptiles","source-layer":"waterway",filter:["!in","class","canal","river","stream"],layout:{"line-cap":"round"},paint:{"line-color":"#a0c8f0","line-width":{base:1.3,stops:[[13,.5],[20,2]]}}},{id:"waterway-stream-canal",type:"line",metadata:{"mapbox:group":"1444849382550.77"},source:"openmaptiles","source-layer":"waterway",filter:["in","class","canal","stream"],layout:{"line-cap":"round"},paint:{"line-color":"#a0c8f0","line-width":{base:1.3,stops:[[13,.5],[20,6]]}}},{id:"waterway-river",type:"line",metadata:{"mapbox:group":"1444849382550.77"},source:"openmaptiles","source-layer":"waterway",filter:["==","class","river"],layout:{"line-cap":"round"},paint:{"line-color":"#a0c8f0","line-width":{base:1.2,stops:[[10,.8],[20,6]]}}},{id:"water-offset",type:"fill",metadata:{"mapbox:group":"1444849382550.77"},source:"openmaptiles","source-layer":"water",maxzoom:8,filter:["==","$type","Polygon"],layout:{visibility:"visible"},paint:{"fill-opacity":1,"fill-color":"#a0c8f0","fill-translate":{base:1,stops:[[6,[2,0]],[8,[0,0]]]}}},{id:"water",type:"fill",metadata:{"mapbox:group":"1444849382550.77"},source:"openmaptiles","source-layer":"water",layout:{visibility:"visible"},paint:{"fill-color":"hsl(210, 67%, 85%)"}},{id:"water-pattern",type:"fill",metadata:{"mapbox:group":"1444849382550.77"},source:"openmaptiles","source-layer":"water",layout:{visibility:"visible"},paint:{"fill-translate":[0,2.5],"fill-pattern":"wave"}},{id:"landcover-ice-shelf",type:"fill",metadata:{"mapbox:group":"1444849382550.77"},source:"openmaptiles","source-layer":"landcover",filter:["==","subclass","ice_shelf"],layout:{visibility:"visible"},paint:{"fill-color":"#fff","fill-opacity":{base:1,stops:[[0,.9],[10,.3]]}}},{id:"building",type:"fill",metadata:{"mapbox:group":"1444849364238.8171"},source:"openmaptiles","source-layer":"building",paint:{"fill-color":{base:1,stops:[[15.5,"#f2eae2"],[16,"#dfdbd7"]]},"fill-antialias":!0}},{id:"building-top",type:"fill",metadata:{"mapbox:group":"1444849364238.8171"},source:"openmaptiles","source-layer":"building",layout:{visibility:"visible"},paint:{"fill-translate":{base:1,stops:[[14,[0,0]],[16,[-2,-2]]]},"fill-outline-color":"#dfdbd7","fill-color":"#f2eae2","fill-opacity":{base:1,stops:[[13,0],[16,1]]}}},{id:"tunnel-service-track-casing",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["in","class","service","track"]],layout:{"line-join":"round"},paint:{"line-color":"#cfcdca","line-dasharray":[.5,.25],"line-width":{base:1.2,stops:[[15,1],[16,4],[20,11]]}}},{id:"tunnel-minor-casing",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["==","class","minor"]],layout:{"line-join":"round"},paint:{"line-color":"#cfcdca","line-opacity":{stops:[[12,0],[12.5,1]]},"line-width":{base:1.2,stops:[[12,.5],[13,1],[14,4],[20,15]]}}},{id:"tunnel-secondary-tertiary-casing",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["in","class","secondary","tertiary"]],layout:{"line-join":"round"},paint:{"line-color":"#e9ac77","line-opacity":1,"line-width":{base:1.2,stops:[[8,1.5],[20,17]]}}},{id:"tunnel-trunk-primary-casing",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["in","class","primary","trunk"]],layout:{"line-join":"round"},paint:{"line-color":"#e9ac77","line-width":{base:1.2,stops:[[5,.4],[6,.6],[7,1.5],[20,22]]}}},{id:"tunnel-motorway-casing",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["==","class","motorway"]],layout:{"line-join":"round",visibility:"visible"},paint:{"line-color":"#e9ac77","line-dasharray":[.5,.25],"line-width":{base:1.2,stops:[[5,.4],[6,.6],[7,1.5],[20,22]]}}},{id:"tunnel-path",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["==","brunnel","tunnel"],["==","class","path"]]],paint:{"line-color":"#cba","line-dasharray":[1.5,.75],"line-width":{base:1.2,stops:[[15,1.2],[20,4]]}}},{id:"tunnel-service-track",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["in","class","service","track"]],layout:{"line-join":"round"},paint:{"line-color":"#fff","line-width":{base:1.2,stops:[[15.5,0],[16,2],[20,7.5]]}}},{id:"tunnel-minor",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["==","class","minor_road"]],layout:{"line-join":"round"},paint:{"line-color":"#fff","line-opacity":1,"line-width":{base:1.2,stops:[[13.5,0],[14,2.5],[20,11.5]]}}},{id:"tunnel-secondary-tertiary",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["in","class","secondary","tertiary"]],layout:{"line-join":"round"},paint:{"line-color":"#fff4c6","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,10]]}}},{id:"tunnel-trunk-primary",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["in","class","primary","trunk"]],layout:{"line-join":"round"},paint:{"line-color":"#fff4c6","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,18]]}}},{id:"tunnel-motorway",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["==","class","motorway"]],layout:{"line-join":"round",visibility:"visible"},paint:{"line-color":"#ffdaa6","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,18]]}}},{id:"tunnel-railway",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["==","class","rail"]],paint:{"line-color":"#bbb","line-width":{base:1.4,stops:[[14,.4],[15,.75],[20,2]]},"line-dasharray":[2,2]}},{id:"aeroway-taxiway-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"aeroway",minzoom:12,filter:["all",["in","class","taxiway"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"rgba(153, 153, 153, 1)","line-width":{base:1.5,stops:[[11,2],[17,12]]},"line-opacity":1}},{id:"aeroway-runway-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"aeroway",minzoom:12,filter:["all",["in","class","runway"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"rgba(153, 153, 153, 1)","line-width":{base:1.5,stops:[[11,5],[17,55]]},"line-opacity":1}},{id:"aeroway-area",type:"fill",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"aeroway",minzoom:4,filter:["all",["==","$type","Polygon"],["in","class","runway","taxiway"]],layout:{visibility:"visible"},paint:{"fill-opacity":{base:1,stops:[[13,0],[14,1]]},"fill-color":"rgba(255, 255, 255, 1)"}},{id:"aeroway-taxiway",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"aeroway",minzoom:4,filter:["all",["in","class","taxiway"],["==","$type","LineString"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"rgba(255, 255, 255, 1)","line-width":{base:1.5,stops:[[11,1],[17,10]]},"line-opacity":{base:1,stops:[[11,0],[12,1]]}}},{id:"aeroway-runway",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"aeroway",minzoom:4,filter:["all",["in","class","runway"],["==","$type","LineString"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"rgba(255, 255, 255, 1)","line-width":{base:1.5,stops:[[11,4],[17,50]]},"line-opacity":{base:1,stops:[[11,0],[12,1]]}}},{id:"highway-area",type:"fill",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["==","$type","Polygon"],layout:{visibility:"visible"},paint:{"fill-color":"hsla(0, 0%, 89%, 0.56)","fill-outline-color":"#cfcdca","fill-opacity":.9,"fill-antialias":!1}},{id:"highway-motorway-link-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:12,filter:["all",["!in","brunnel","bridge","tunnel"],["==","class","motorway_link"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#e9ac77","line-opacity":1,"line-width":{base:1.2,stops:[[12,1],[13,3],[14,4],[20,15]]}}},{id:"highway-link-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:13,filter:["all",["!in","brunnel","bridge","tunnel"],["in","class","primary_link","secondary_link","tertiary_link","trunk_link"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#e9ac77","line-opacity":1,"line-width":{base:1.2,stops:[[12,1],[13,3],[14,4],[20,15]]}}},{id:"highway-minor-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["!=","brunnel","tunnel"],["in","class","minor","service","track"]]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#cfcdca","line-opacity":{stops:[[12,0],[12.5,1]]},"line-width":{base:1.2,stops:[[12,.5],[13,1],[14,4],[20,15]]}}},{id:"highway-secondary-tertiary-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["!in","brunnel","bridge","tunnel"],["in","class","secondary","tertiary"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#e9ac77","line-opacity":1,"line-width":{base:1.2,stops:[[8,1.5],[20,17]]}}},{id:"highway-primary-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:5,filter:["all",["!in","brunnel","bridge","tunnel"],["in","class","primary"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#e9ac77","line-opacity":{stops:[[7,0],[8,1]]},"line-width":{base:1.2,stops:[[7,0],[8,.6],[9,1.5],[20,22]]}}},{id:"highway-trunk-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:5,filter:["all",["!in","brunnel","bridge","tunnel"],["in","class","trunk"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#e9ac77","line-opacity":{stops:[[5,0],[6,1]]},"line-width":{base:1.2,stops:[[5,0],[6,.6],[7,1.5],[20,22]]}}},{id:"highway-motorway-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:4,filter:["all",["!in","brunnel","bridge","tunnel"],["==","class","motorway"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#e9ac77","line-width":{base:1.2,stops:[[4,0],[5,.4],[6,.6],[7,1.5],[20,22]]},"line-opacity":{stops:[[4,0],[5,1]]}}},{id:"highway-path",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["!in","brunnel","bridge","tunnel"],["==","class","path"]]],paint:{"line-color":"#cba","line-dasharray":[1.5,.75],"line-width":{base:1.2,stops:[[15,1.2],[20,4]]}}},{id:"highway-motorway-link",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:12,filter:["all",["!in","brunnel","bridge","tunnel"],["==","class","motorway_link"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fc8","line-width":{base:1.2,stops:[[12.5,0],[13,1.5],[14,2.5],[20,11.5]]}}},{id:"highway-link",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:13,filter:["all",["!in","brunnel","bridge","tunnel"],["in","class","primary_link","secondary_link","tertiary_link","trunk_link"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#fea","line-width":{base:1.2,stops:[[12.5,0],[13,1.5],[14,2.5],[20,11.5]]}}},{id:"highway-minor",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["!=","brunnel","tunnel"],["in","class","minor","service","track"]]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fff","line-opacity":1,"line-width":{base:1.2,stops:[[13.5,0],[14,2.5],[20,11.5]]}}},{id:"highway-secondary-tertiary",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["!in","brunnel","bridge","tunnel"],["in","class","secondary","tertiary"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#fea","line-width":{base:1.2,stops:[[6.5,0],[8,.5],[20,13]]}}},{id:"highway-primary",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["!in","brunnel","bridge","tunnel"],["in","class","primary"]]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#fea","line-width":{base:1.2,stops:[[8.5,0],[9,.5],[20,18]]}}},{id:"highway-trunk",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["!in","brunnel","bridge","tunnel"],["in","class","trunk"]]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#fea","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,18]]}}},{id:"highway-motorway",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:5,filter:["all",["==","$type","LineString"],["all",["!in","brunnel","bridge","tunnel"],["==","class","motorway"]]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#fc8","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,18]]}}},{id:"railway-service",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["==","class","rail"],["has","service"]]],paint:{"line-color":"hsla(0, 0%, 73%, 0.77)","line-width":{base:1.4,stops:[[14,.4],[20,1]]}}},{id:"railway-service-hatching",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["==","class","rail"],["has","service"]]],layout:{visibility:"visible"},paint:{"line-color":"hsla(0, 0%, 73%, 0.68)","line-dasharray":[.2,8],"line-width":{base:1.4,stops:[[14.5,0],[15,2],[20,6]]}}},{id:"railway",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["!has","service"],["!in","brunnel","bridge","tunnel"],["==","class","rail"]]],paint:{"line-color":"#bbb","line-width":{base:1.4,stops:[[14,.4],[15,.75],[20,2]]}}},{id:"railway-hatching",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["!has","service"],["!in","brunnel","bridge","tunnel"],["==","class","rail"]]],paint:{"line-color":"#bbb","line-dasharray":[.2,8],"line-width":{base:1.4,stops:[[14.5,0],[15,3],[20,8]]}}},{id:"bridge-motorway-link-casing",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["==","class","motorway_link"]],layout:{"line-join":"round"},paint:{"line-color":"#e9ac77","line-opacity":1,"line-width":{base:1.2,stops:[[12,1],[13,3],[14,4],[20,15]]}}},{id:"bridge-link-casing",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["in","class","primary_link","secondary_link","tertiary_link","trunk_link"]],layout:{"line-join":"round"},paint:{"line-color":"#e9ac77","line-opacity":1,"line-width":{base:1.2,stops:[[12,1],[13,3],[14,4],[20,15]]}}},{id:"bridge-secondary-tertiary-casing",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["in","class","secondary","tertiary"]],layout:{"line-join":"round"},paint:{"line-color":"#e9ac77","line-opacity":1,"line-width":{base:1.2,stops:[[8,1.5],[20,28]]}}},{id:"bridge-trunk-primary-casing",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["in","class","primary","trunk"]],layout:{"line-join":"round"},paint:{"line-color":"hsl(28, 76%, 67%)","line-width":{base:1.2,stops:[[5,.4],[6,.6],[7,1.5],[20,26]]}}},{id:"bridge-motorway-casing",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["==","class","motorway"]],layout:{"line-join":"round"},paint:{"line-color":"#e9ac77","line-width":{base:1.2,stops:[[5,.4],[6,.6],[7,1.5],[20,22]]}}},{id:"bridge-path-casing",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["==","brunnel","bridge"],["==","class","path"]]],paint:{"line-color":"#f8f4f0","line-width":{base:1.2,stops:[[15,1.2],[20,18]]}}},{id:"bridge-path",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["==","brunnel","bridge"],["==","class","path"]]],paint:{"line-color":"#cba","line-width":{base:1.2,stops:[[15,1.2],[20,4]]},"line-dasharray":[1.5,.75]}},{id:"bridge-motorway-link",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["==","class","motorway_link"]],layout:{"line-join":"round"},paint:{"line-color":"#fc8","line-width":{base:1.2,stops:[[12.5,0],[13,1.5],[14,2.5],[20,11.5]]}}},{id:"bridge-link",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["in","class","primary_link","secondary_link","tertiary_link","trunk_link"]],layout:{"line-join":"round"},paint:{"line-color":"#fea","line-width":{base:1.2,stops:[[12.5,0],[13,1.5],[14,2.5],[20,11.5]]}}},{id:"bridge-secondary-tertiary",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["in","class","secondary","tertiary"]],layout:{"line-join":"round"},paint:{"line-color":"#fea","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,20]]}}},{id:"bridge-trunk-primary",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["in","class","primary","trunk"]],layout:{"line-join":"round"},paint:{"line-color":"#fea","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,18]]}}},{id:"bridge-motorway",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["==","class","motorway"]],layout:{"line-join":"round"},paint:{"line-color":"#fc8","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,18]]}}},{id:"bridge-railway",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["==","class","rail"]],paint:{"line-color":"#bbb","line-width":{base:1.4,stops:[[14,.4],[15,.75],[20,2]]}}},{id:"bridge-railway-hatching",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["==","class","rail"]],paint:{"line-color":"#bbb","line-dasharray":[.2,8],"line-width":{base:1.4,stops:[[14.5,0],[15,3],[20,8]]}}},{id:"boundary-land-level-4",type:"line",source:"openmaptiles","source-layer":"boundary",filter:["all",["in","admin_level",4,6,8],["!=","maritime",1]],layout:{"line-join":"round"},paint:{"line-color":"#9e9cab","line-dasharray":[3,1,1,1],"line-width":{base:1.4,stops:[[4,.4],[5,1],[12,3]]}}},{id:"boundary-land-level-2",type:"line",source:"openmaptiles","source-layer":"boundary",filter:["all",["==","admin_level",2],["!=","maritime",1]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"hsl(248, 7%, 66%)","line-width":{base:1,stops:[[0,.6],[4,1.4],[5,2],[12,8]]}}},{id:"boundary-water",type:"line",source:"openmaptiles","source-layer":"boundary",filter:["all",["in","admin_level",2,4],["==","maritime",1]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"rgba(154, 189, 214, 1)","line-width":{base:1,stops:[[0,.6],[4,1.4],[5,2],[12,8]]},"line-opacity":{stops:[[6,.6],[10,1]]}}},{id:"waterway-name",type:"symbol",source:"openmaptiles","source-layer":"waterway",minzoom:13,filter:["all",["==","$type","LineString"],["has","name"],["!has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":14,"text-field":"{name:latin} {name:nonlatin}","text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"line","text-letter-spacing":.2,"symbol-spacing":350},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"waterway-name-en",type:"symbol",source:"openmaptiles","source-layer":"waterway",minzoom:13,filter:["all",["==","$type","LineString"],["has","name"],["has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":14,"text-field":"{name:de} {name:nonlatin}","text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"line","text-letter-spacing":.2,"symbol-spacing":350},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"water-name-lakeline",type:"symbol",source:"openmaptiles","source-layer":"water_name",filter:["all",["==","$type","LineString"],["!has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":14,"text-field":"{name:latin} {name:nonlatin}","text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"line","symbol-spacing":350,"text-letter-spacing":.2},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"water-name-lakeline-en",type:"symbol",source:"openmaptiles","source-layer":"water_name",filter:["all",["==","$type","LineString"],["has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":14,"text-field":"{name:de} {name:nonlatin}","text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"line","symbol-spacing":350,"text-letter-spacing":.2},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"water-name-ocean",type:"symbol",source:"openmaptiles","source-layer":"water_name",filter:["all",["==","$type","Point"],["==","class","ocean"],["!has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":14,"text-field":`{name:latin}
{name:nonlatin}`,"text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"point","symbol-spacing":350,"text-letter-spacing":.2},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"water-name-ocean-en",type:"symbol",source:"openmaptiles","source-layer":"water_name",filter:["all",["==","$type","Point"],["==","class","ocean"],["has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":14,"text-field":`{name:de}
{name:nonlatin}`,"text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"point","symbol-spacing":350,"text-letter-spacing":.2},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"water-name-other",type:"symbol",source:"openmaptiles","source-layer":"water_name",filter:["all",["==","$type","Point"],["!in","class","ocean"],["!has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":{stops:[[0,10],[6,14]]},"text-field":`{name:latin}
{name:nonlatin}`,"text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"point","symbol-spacing":350,"text-letter-spacing":.2,visibility:"visible"},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"water-name-other-en",type:"symbol",source:"openmaptiles","source-layer":"water_name",filter:["all",["==","$type","Point"],["!in","class","ocean"],["has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":{stops:[[0,10],[6,14]]},"text-field":`{name:de}
{name:nonlatin}`,"text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"point","symbol-spacing":350,"text-letter-spacing":.2,visibility:"visible"},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"poi-level-3",type:"symbol",source:"openmaptiles","source-layer":"poi",minzoom:16,filter:["all",["==","$type","Point"],[">=","rank",25],["!has","name:de"]],layout:{"text-padding":2,"text-font":["Open Sans Semibold"],"text-anchor":"top","icon-image":"{class}_11","text-field":`{name:latin}
{name:nonlatin}`,"text-offset":[0,.6],"text-size":12,"text-max-width":9},paint:{"text-halo-blur":.5,"text-color":"#666","text-halo-width":1,"text-halo-color":"#ffffff"}},{id:"poi-level-3-en",type:"symbol",source:"openmaptiles","source-layer":"poi",minzoom:16,filter:["all",["==","$type","Point"],[">=","rank",25],["has","name:de"]],layout:{"text-padding":2,"text-font":["Open Sans Semibold"],"text-anchor":"top","icon-image":"{class}_11","text-field":`{name:de}
{name:nonlatin}`,"text-offset":[0,.6],"text-size":12,"text-max-width":9},paint:{"text-halo-blur":.5,"text-color":"#666","text-halo-width":1,"text-halo-color":"#ffffff"}},{id:"poi-level-2",type:"symbol",source:"openmaptiles","source-layer":"poi",minzoom:15,filter:["all",["==","$type","Point"],["all",["<=","rank",24],[">=","rank",15]],["!has","name:de"]],layout:{"text-padding":2,"text-font":["Open Sans Semibold"],"text-anchor":"top","icon-image":"{class}_11","text-field":`{name:latin}
{name:nonlatin}`,"text-offset":[0,.6],"text-size":12,"text-max-width":9},paint:{"text-halo-blur":.5,"text-color":"#666","text-halo-width":1,"text-halo-color":"#ffffff"}},{id:"poi-level-2-en",type:"symbol",source:"openmaptiles","source-layer":"poi",minzoom:15,filter:["all",["==","$type","Point"],["all",["<=","rank",24],[">=","rank",15]],["has","name:de"]],layout:{"text-padding":2,"text-font":["Open Sans Semibold"],"text-anchor":"top","icon-image":"{class}_11","text-field":`{name:de}
{name:nonlatin}`,"text-offset":[0,.6],"text-size":12,"text-max-width":9},paint:{"text-halo-blur":.5,"text-color":"#666","text-halo-width":1,"text-halo-color":"#ffffff"}},{id:"poi-level-1",type:"symbol",source:"openmaptiles","source-layer":"poi",minzoom:14,filter:["all",["==","$type","Point"],["all",["<=","rank",14],["has","name"]],["!has","name:de"]],layout:{"text-padding":2,"text-font":["Open Sans Semibold"],"text-anchor":"top","icon-image":"{class}_11","text-field":`{name:latin}
{name:nonlatin}`,"text-offset":[0,.6],"text-size":12,"text-max-width":9},paint:{"text-halo-blur":.5,"text-color":"#666","text-halo-width":1,"text-halo-color":"#ffffff"}},{id:"poi-level-1-en",type:"symbol",source:"openmaptiles","source-layer":"poi",minzoom:14,filter:["all",["==","$type","Point"],["all",["<=","rank",14],["has","name"]],["has","name:de"]],layout:{"text-padding":2,"text-font":["Open Sans Semibold"],"text-anchor":"top","icon-image":"{class}_11","text-field":`{name:de}
{name:nonlatin}`,"text-offset":[0,.6],"text-size":12,"text-max-width":9},paint:{"text-halo-blur":.5,"text-color":"#666","text-halo-width":1,"text-halo-color":"#ffffff"}},{id:"highway-name-path",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:15.5,filter:["all",["==","class","path"],["!has","name:de"]],layout:{"text-size":{base:1,stops:[[13,12],[14,13]]},"text-font":["Open Sans Regular"],"text-field":"{name:latin} {name:nonlatin}","symbol-placement":"line","text-rotation-alignment":"map"},paint:{"text-halo-color":"#f8f4f0","text-color":"hsl(30, 23%, 62%)","text-halo-width":.5}},{id:"highway-name-path-en",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:15.5,filter:["all",["==","class","path"],["has","name:de"]],layout:{"text-size":{base:1,stops:[[13,12],[14,13]]},"text-font":["Open Sans Regular"],"text-field":"{name:de} {name:nonlatin}","symbol-placement":"line","text-rotation-alignment":"map"},paint:{"text-halo-color":"#f8f4f0","text-color":"hsl(30, 23%, 62%)","text-halo-width":.5}},{id:"highway-name-minor",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:15,filter:["all",["==","$type","LineString"],["in","class","minor","service","track"],["!has","name:de"]],layout:{"text-size":{base:1,stops:[[13,12],[14,13]]},"text-font":["Open Sans Regular"],"text-field":"{name:latin} {name:nonlatin}","symbol-placement":"line","text-rotation-alignment":"map"},paint:{"text-halo-blur":.5,"text-color":"#765","text-halo-width":1}},{id:"highway-name-minor-en",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:15,filter:["all",["==","$type","LineString"],["in","class","minor","service","track"],["has","name:de"]],layout:{"text-size":{base:1,stops:[[13,12],[14,13]]},"text-font":["Open Sans Regular"],"text-field":"{name:de} {name:nonlatin}","symbol-placement":"line","text-rotation-alignment":"map"},paint:{"text-halo-blur":.5,"text-color":"#765","text-halo-width":1}},{id:"highway-name-major",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:12.2,filter:["all",["in","class","primary","secondary","tertiary","trunk"],["!has","name:de"]],layout:{"text-size":{base:1,stops:[[13,12],[14,13]]},"text-font":["Open Sans Regular"],"text-field":"{name:latin} {name:nonlatin}","symbol-placement":"line","text-rotation-alignment":"map"},paint:{"text-halo-blur":.5,"text-color":"#765","text-halo-width":1}},{id:"highway-name-major-en",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:12.2,filter:["all",["in","class","primary","secondary","tertiary","trunk"],["has","name:de"]],layout:{"text-size":{base:1,stops:[[13,12],[14,13]]},"text-font":["Open Sans Regular"],"text-field":"{name:de} {name:nonlatin}","symbol-placement":"line","text-rotation-alignment":"map"},paint:{"text-halo-blur":.5,"text-color":"#765","text-halo-width":1}},{id:"highway-shield",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:8,filter:["all",["<=","ref_length",6],["==","$type","LineString"],["!in","network","us-interstate","us-highway","us-state"]],layout:{"text-size":10,"icon-image":"road_{ref_length}","icon-rotation-alignment":"viewport","symbol-spacing":200,"text-font":["Open Sans Semibold"],"symbol-placement":{base:1,stops:[[10,"point"],[11,"line"]]},"text-rotation-alignment":"viewport","icon-size":1,"text-field":"{ref}"},paint:{}},{id:"highway-shield-us-interstate",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:7,filter:["all",["<=","ref_length",6],["==","$type","LineString"],["in","network","us-interstate"]],layout:{"text-size":10,"icon-image":"{network}_{ref_length}","icon-rotation-alignment":"viewport","symbol-spacing":200,"text-font":["Open Sans Semibold"],"symbol-placement":{base:1,stops:[[7,"point"],[7,"line"],[8,"line"]]},"text-rotation-alignment":"viewport","icon-size":1,"text-field":"{ref}"},paint:{"text-color":"rgba(0, 0, 0, 1)"}},{id:"highway-shield-us-other",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:9,filter:["all",["<=","ref_length",6],["==","$type","LineString"],["in","network","us-highway","us-state"]],layout:{"text-size":10,"icon-image":"{network}_{ref_length}","icon-rotation-alignment":"viewport","symbol-spacing":200,"text-font":["Open Sans Semibold"],"symbol-placement":{base:1,stops:[[10,"point"],[11,"line"]]},"text-rotation-alignment":"viewport","icon-size":1,"text-field":"{ref}"},paint:{"text-color":"rgba(0, 0, 0, 1)"}},{id:"place-other",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["!in","class","city","town","village"],["!has","name:de"]],layout:{"text-letter-spacing":.1,"text-size":{base:1.2,stops:[[12,10],[15,14]]},"text-font":["Open Sans Bold"],"text-field":`{name:latin}
{name:nonlatin}`,"text-transform":"uppercase","text-max-width":9},paint:{"text-color":"#633","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-other-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["!in","class","city","town","village"],["has","name:de"]],layout:{"text-letter-spacing":.1,"text-size":{base:1.2,stops:[[12,10],[15,14]]},"text-font":["Open Sans Bold"],"text-field":`{name:de}
{name:nonlatin}`,"text-transform":"uppercase","text-max-width":9},paint:{"text-color":"#633","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-village",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","village"],["!has","name:de"]],layout:{"text-font":["Open Sans Regular"],"text-size":{base:1.2,stops:[[10,12],[15,22]]},"text-field":`{name:latin}
{name:nonlatin}`,"text-max-width":8},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-village-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","village"],["has","name:de"]],layout:{"text-font":["Open Sans Regular"],"text-size":{base:1.2,stops:[[10,12],[15,22]]},"text-field":`{name:de}
{name:nonlatin}`,"text-max-width":8},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-town",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","town"],["!has","name:de"]],layout:{"text-font":["Open Sans Regular"],"text-size":{base:1.2,stops:[[10,14],[15,24]]},"text-field":`{name:latin}
{name:nonlatin}`,"text-max-width":8},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-town-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","town"],["has","name:de"]],layout:{"text-font":["Open Sans Regular"],"text-size":{base:1.2,stops:[[10,14],[15,24]]},"text-field":`{name:de}
{name:nonlatin}`,"text-max-width":8},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-city",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["!=","capital",2],["==","class","city"],["!has","name:de"]],layout:{"text-font":["Open Sans Semibold"],"text-size":{base:1.2,stops:[[7,14],[11,24]]},"text-field":`{name:latin}
{name:nonlatin}`,"text-max-width":8},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-city-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["!=","capital",2],["==","class","city"],["has","name:de"]],layout:{"text-font":["Open Sans Semibold"],"text-size":{base:1.2,stops:[[7,14],[11,24]]},"text-field":`{name:de}
{name:nonlatin}`,"text-max-width":8},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-city-capital",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","capital",2],["==","class","city"],["!has","name:de"]],layout:{"text-font":["Open Sans Semibold"],"text-size":{base:1.2,stops:[[7,14],[11,24]]},"text-field":`{name:latin}
{name:nonlatin}`,"text-max-width":8,"icon-image":"star_11","text-offset":[.4,0],"icon-size":.8,"text-anchor":"left"},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-city-capital-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","capital",2],["==","class","city"],["has","name:de"]],layout:{"text-font":["Open Sans Semibold"],"text-size":{base:1.2,stops:[[7,14],[11,24]]},"text-field":`{name:de}
{name:nonlatin}`,"text-max-width":8,"icon-image":"star_11","text-offset":[.4,0],"icon-size":.8,"text-anchor":"left"},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-country-3",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","country"],[">=","rank",3],["!has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":`{name:latin}
{name:nonlatin}`,"text-size":{stops:[[3,11],[7,17]]},"text-transform":"uppercase","text-max-width":6.25},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-country-3-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","country"],[">=","rank",3],["has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":`{name:de}
{name:nonlatin}`,"text-size":{stops:[[3,11],[7,17]]},"text-transform":"uppercase","text-max-width":6.25},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-country-2",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","country"],["==","rank",2],["!has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":`{name:latin}
{name:nonlatin}`,"text-size":{stops:[[2,11],[5,17]]},"text-transform":"uppercase","text-max-width":6.25},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-country-2-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","country"],["==","rank",2],["has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":`{name:de}
{name:nonlatin}`,"text-size":{stops:[[2,11],[5,17]]},"text-transform":"uppercase","text-max-width":6.25},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-country-1",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","country"],["==","rank",1],["!has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":`{name:latin}
{name:nonlatin}`,"text-size":{stops:[[1,11],[4,17]]},"text-transform":"uppercase","text-max-width":6.25},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-country-1-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","country"],["==","rank",1],["has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":`{name:de}
{name:nonlatin}`,"text-size":{stops:[[1,11],[4,17]]},"text-transform":"uppercase","text-max-width":6.25},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-continent",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",maxzoom:1,filter:["all",["==","class","continent"],["!has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":`{name:latin}
{name:nonlatin}`,"text-size":14,"text-max-width":6.25,"text-transform":"uppercase"},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-continent-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",maxzoom:1,filter:["all",["==","class","continent"],["has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":`{name:de}
{name:nonlatin}`,"text-size":14,"text-max-width":6.25,"text-transform":"uppercase"},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}}]};function It(u){const E=()=>u.json.filter(q=>q.item===u.section);return E()[0].description?d.jsxs(d.Fragment,{children:[d.jsx(Mt,{variant:"h6",marginBottom:3,children:u.title}),d.jsx(Mt,{variant:"body1",dangerouslySetInnerHTML:{__html:E()[0].description}})]}):d.jsx(d.Fragment,{})}try{It.displayName="DemoDescriptions",It.__docgenInfo={description:"",displayName:"DemoDescriptions",props:{section:{defaultValue:null,description:"",name:"section",required:!0,type:{name:"string"}},json:{defaultValue:null,description:"",name:"json",required:!0,type:{name:"DemoDescriptionItem[]"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}}}}}catch{}const en=[{item:"mbtiles",description:"In this example, an MBtile file containing the countries of the world is loaded to the map through the useAddProtocol hook. The protocol manager registers the contents of the file as a source. We then add in the layer list a Vector tile layer that uses that source. <br> See source file: <a href='https://github.com/mapcomponents/react-map-components-maplibre/blob/main/public/mbtiles/countries.mbtiles' target=”_blank”> countries.mbtiles </a>"},{item:"csv",description:"<p>The CSVProtocolHandler enables us to load a layer from a table containing the coordinates of one or more points. The table must have a 'latitude' and a 'longitude' column. Column names like 'lat' or 'long' are automatically recognized by the hook. Other names, as well as a delimiter other than the comma, can be specified in the options.This encoded options object can be added after a '?' sign at the end of the url. <br> The url is expected to have the following Format: <br> See source file: <a href='https://github.com/mapcomponents/react-map-components-maplibre/blob/main/public/csv/restaurants.csv' target=”_blank”> restaurants.csv </a></p> <center> <h4>[protocol]://[filePath]?[encodedOptions]</h6> </center> Example: <i> csv://csv/restaurants.csv </i><br> Example of an options object: <i> csv://csv/gemany_100_postcodes.csv?latfield=Axe-y&lonfield=Axe-x&delimiter=%3A </i><br>  Where the enconded parameters represents the following options object:<br> {<br>latfield: 'Axe-y', <br>lonfield: 'Axe-x', <br>delimiter: ':'<br>} "},{item:"osm",description:"<p> The OSMProtocolHandler will transform OSM type files into a geojson object and register it as a source. The handler accepts an encoded options object in the source url. <br> See source file: <a href='https://github.com/mapcomponents/react-map-components-maplibre/blob/main/public/osm/palma.osm' target=”_blank”> palma.osm </a> <br> The url is expected to have the following Format: <br> </p> <center> <h4>[protocol]://[filePath]?[encodedOptions</h6> </center> Example: <i> osm://osm/palma.osm?completeFeature=true&allFeatures=false&renderTagged=false&excludeWay=false&suppressWay=false </i> <br> Where the enconded parameters represents the following options object: <br> { <br> completeFeature: true, <br> allFeatures: false,<br> renderTagged: false, <br> excludeWay: false, <br> suppressWay: false <br> }"},{item:"gpx",description:"<p> GPX files can be processed with the XMLProtocolHandler. This will transform the files into a geojson object and register it as a source. <br> See source file: <a href='https://github.com/mapcomponents/react-map-components-maplibre/blob/main/public/gpx/santiago.gpx' target=”_blank”> santiago.gpx </a> <br> The url is expected to have the following Format: <br> </p> <center> <h4>[protocol]://[filePath]</h6> </center> Example: <i> xml://gpx/santiago.gpx </i>"},{item:"kml",description:"<p> KML files can be processed with the XMLProtocolHandler. This will transform the files into a geojson object and register it as a source. <br> See source file: <a href='https://github.com/mapcomponents/react-map-components-maplibre/blob/main/public/kml/cape_may.kml' target=”_blank”> cape_may.kml </a> <br> The url is expected to have the following Format: <br> </p> <center> <h4>[protocol]://[filePath]</h6> </center> Example: <i> xml://kml/cape_may.gpx </i>"},{item:"tcx",description:"<p> TCX files can be processed with the XMLProtocolHandler. This will transform the files into a geojson object and register it as a source. <br> See source file: <a href='https://github.com/mapcomponents/react-map-components-maplibre/blob/main/public/tcx/example.tcx' target=”_blank”> example.tcx </a> <br> The url is expected to have the following Format: <br> </p> <center> <h4>[protocol]://[filePath]</h6> </center> Example: <i> xml://tcx/example.tcx </i>"},{item:"topojson",description:"<p> In this example, a topojson file is loaded with help of The TopojsonProtocolHandler. The handler transforms the topojson into a geojson object and keep register of the origin topojson object in the features properties of the new geojson. <br> See source file: <a href='https://github.com/mapcomponents/react-map-components-maplibre/blob/main/public/topojson/usa.topojson' target=”_blank”> usa.topojson </a></p> <br> The url is expected to have the following Format: <br>  </p> <center> <h4>[protocol]://[filePath]</h6> </center>  "}],bn={title:"hooks/useAddProtocol",component:X,argTypes:{},decorators:Wr},ae=()=>{const u=I.useContext(qo);return I.useEffect(()=>{u.updateStyle(Bo)},[]),d.jsx("div",{style:{display:"none"},children:d.jsx(Mo,{children:d.jsx(Io,{layers:u.layers,setLayers:u.setLayers,insertBeforeLayer:"useAddProtocolLayer",fitBoundsOptions:{padding:{top:50,bottom:50,left:25,right:25}}})})})},tn=()=>{const u=K({mapId:void 0});return X({protocol:"mbtiles",handler:Ho}),I.useEffect(()=>{u.map&&u.map?.setZoom(0)},[u.map]),d.jsxs(d.Fragment,{children:[d.jsx(Hr,{mapId:"map_1",url:"mbtiles://mbtiles/countries.mbtiles/{z}/{x}/{y}",layers:[{id:"countries",type:"fill","source-layer":"countries",layout:{},paint:{"fill-color":"#f9a5f5","fill-opacity":.5}}],insertBeforeLayer:"waterway-name",sourceOptions:{type:"vector",minzoom:0,maxzoom:1}}),d.jsx(ae,{})]})},ge=tn.bind({});ge.args={};ge.parameters={name:"MBTiles"};const on=()=>{const u=K({mapId:void 0});return X({protocol:"csv",handler:tt}),I.useEffect(()=>{u.map?.getSource("csv-source")||u.map?.addSource("csv-source",{type:"geojson",data:"csv://csv/restaurants.csv"}),u.map?.jumpTo({center:[-74.914516,38.935759],zoom:13})},[u.map]),d.jsxs(d.Fragment,{children:[d.jsx(ue,{layerId:"UseAddProtocolLayer",options:{type:"circle",source:"csv-source",paint:{"circle-color":"#009EE0","circle-stroke-color":"#F0f0f0","circle-stroke-width":2,"circle-radius":18}},insertBeforeLayer:"waterway-name"}),d.jsx(ae,{})]})},xe=on.bind({});xe.args={};xe.parameters={};const rn=()=>{const u=K({mapId:void 0});return X({protocol:"csv",handler:tt}),I.useEffect(()=>{u.map?.getSource("csv-source")||u.map?.addSource("csv-source",{type:"geojson",data:"csv://csv/gemany_100_postcodes.csv?latfield=Axe-y&lonfield=Axe-x&delimiter=:"}),u.map?.jumpTo({center:[10.147049,50.871231],zoom:6,speed:2})},[u.map]),d.jsxs(d.Fragment,{children:[d.jsx(ue,{layerId:"UseAddProtocolLayer",options:{type:"circle",source:"csv-source",paint:{"circle-color":"#009EE0","circle-stroke-color":"#F0f0f0","circle-stroke-width":2,"circle-radius":18}},insertBeforeLayer:"waterway-name"}),d.jsx(ae,{})]})},we=rn.bind({});we.args={};we.parameters={};const nn=()=>{const u=K({mapId:void 0});return X({protocol:"osm",handler:zo}),Br({sourceId:"osm-source",source:{type:"geojson",data:"osm://osm/palma.osm?completeFeature=true&allFeatures=false&renderTagged=false&excludeWay=false&suppressWay=false"}}),I.useEffect(()=>{u.map?.getSource("osm-source"),u.map?.jumpTo({center:[2.651811,39.571309],zoom:16.5})},[u.map]),d.jsxs(d.Fragment,{children:[d.jsx(ue,{layerId:"UseAddProtocolLayer",options:{type:"line",source:"osm-source",paint:{"line-color":"#9a00ff"}},insertBeforeLayer:"waterway-name"}),d.jsx(ae,{})]})},ve=nn.bind({});ve.args={};ve.parameters={};const an=()=>{const u=K({mapId:void 0});return X({protocol:"gpx",handler:Ee}),I.useEffect(()=>{u.map?.getSource("gpx-source")||u.map?.addSource("gpx-source",{type:"geojson",data:"gpx://gpx/santiago.gpx"}),u.map?.jumpTo({center:[-5.100251,42.887371],zoom:7})},[u.map]),d.jsxs(d.Fragment,{children:[d.jsx(ue,{layerId:"UseAddProtocolLayer",options:{type:"circle",source:"gpx-source",paint:{"circle-color":"#45ff33","circle-stroke-color":"#259913","circle-stroke-width":1,"circle-radius":2}},insertBeforeLayer:"waterway-name"}),d.jsx(ae,{})]})},_e=an.bind({});_e.args={};_e.parameters={};const ln=()=>{const u=K({mapId:void 0});return X({protocol:"kml",handler:Ee}),I.useEffect(()=>{u.map?.getSource("kml-source")||u.map?.addSource("kml-source",{type:"geojson",data:"kml://kml/cape_may.kml"}),u.map?.jumpTo({center:[-74.82832,39.093526],zoom:9})},[u.map]),d.jsxs(d.Fragment,{children:[d.jsx(ue,{layerId:"UseAddProtocolLayer",options:{type:"fill",source:"kml-source",paint:{"fill-color":"#ff4533"}},insertBeforeLayer:"waterway-name"}),d.jsx(ae,{})]})},ke=ln.bind({});ke.args={};ke.parameters={};const sn=()=>{const u=K({mapId:void 0});return X({protocol:"tcx",handler:Ee}),I.useEffect(()=>{u.map?.getSource("tcx-source")||u.map?.addSource("tcx-source",{type:"geojson",data:"tcx://tcx/example.tcx"}),u.map?.jumpTo({center:[32.711545,34.844962],zoom:9})},[u.map]),d.jsxs(d.Fragment,{children:[d.jsx(ue,{layerId:"UseAddProtocolLayer",options:{type:"circle",source:"tcx-source",paint:{"circle-color":"#ff45fa","circle-stroke-color":"#992578","circle-stroke-width":1,"circle-radius":2}},insertBeforeLayer:"waterway-name"}),d.jsx(ae,{})]})},Se=sn.bind({});Se.args={};Se.parameters={};const pn=()=>{const u=K({mapId:void 0});return X({protocol:"topojson",handler:Ao}),I.useEffect(()=>{u.map?.getSource("topojson-source")||u.map?.addSource("topojson-source",{type:"geojson",data:"topojson://topojson/usa.topojson"}),u.map?.jumpTo({center:[-99.110122,39.827183],zoom:4})},[u.map]),d.jsxs(d.Fragment,{children:[d.jsx(ue,{layerId:"UseAddProtocolLayer",options:{type:"line",source:"topojson-source",paint:{"line-color":["match",["get","fromObject"],"land","#111111","states","#009EE0","counties","#747577","white"],"line-width":["match",["get","fromObject"],"land",3,"states",2,"counties",1,1]}},insertBeforeLayer:"waterway-name"}),d.jsx(ae,{})]})},je=pn.bind({});je.args={};je.parameters={};const Oo={mbtiles:{protocol:"mbtiles",handler:Ho,sourceID:"fromMBTile-source",filePath:"mbtiles/countries.mbtiles",type:"fill",layers:[{id:"countries",type:"fill","source-layer":"countries",layout:{},paint:{"fill-color":"#f9a5f5","fill-opacity":.5}}],insertBeforeLayer:"waterway-name",sourceOptions:{type:"vector",minzoom:0,maxzoom:1},flyTo:{center:[10.147049,50.871231],zoom:2,speed:2}},csv:{protocol:"csv",handler:tt,sourceId:"fromCSV-Source",filePath:"csv/restaurants.csv",type:"circle",paint:{"circle-color":"#009EE0","circle-stroke-color":"#F0f0f0","circle-stroke-width":2,"circle-radius":18},flyTo:{center:[-74.914516,38.935759],zoom:13,speed:2}},csvWithOptions:{protocol:"csv",handler:tt,sourceId:"fromCSV-options-Source",filePath:"csv/gemany_100_postcodes.csv",options:{latfield:"Axe-y",lonfield:"Axe-x",delimiter:":"},type:"circle",paint:{"circle-color":"#009EE0","circle-radius":10},flyTo:{center:[10.147049,50.871231],zoom:6,speed:2}},osm:{protocol:"osm",handler:zo,sourceId:"fromOSM-Source",filePath:"osm/palma.osm",options:{completeFeature:!0,allFeatures:!1,renderTagged:!1,excludeWay:!1,suppressWay:!1},flyTo:{center:[2.651811,39.571309],zoom:15.5,speed:4}},gpx:{protocol:"gpx",handler:Ee,sourceId:"fromGPX-Source",filePath:"gpx/santiago.gpx",flyTo:{center:[-5.100251,42.887371],zoom:7,speed:3}},kml:{protocol:"kml",handler:Ee,sourceId:"fromKML-Source",filePath:"kml/cape_may.kml",flyTo:{center:[-74.82832,39.093526],zoom:9,speed:2}},tcx:{protocol:"tcx",handler:Ee,sourceId:"fromTCX-Source",filePath:"tcx/example.tcx",flyTo:{center:[32.711545,34.844962],zoom:9,speed:3}},topojson:{protocol:"topojson",handler:Ao,sourceId:"fromTopoJson-Source",filePath:"topojson/usa.topojson",paint:{"line-color":["match",["get","fromObject"],"land","#111111","states","#009EE0","counties","#747577","white"],"line-width":["match",["get","fromObject"],"land",3,"states",2,"counties",1,1]},flyTo:{center:[-99.110122,39.827183],zoom:4,speed:2}}},cn=()=>{const u=K({mapId:void 0}),[E,q]=I.useState(!0),O=I.useContext(qo),[A,V]=I.useState("csv"),[F,T]=Mr.useState(null),ee=!!F,a=Oo[A],ot="?"+new URLSearchParams(a.options).toString();return X({protocol:a.protocol,handler:a.handler}),I.useEffect(()=>{O.updateStyle(Bo),O.setLayers([a.protocol==="mbtiles"?{type:"vt",name:"useAddProtocolLayer",config:{layerId:"useAddProtocolLayer",url:a.protocol+"://"+a.filePath+"/{z}/{x}/{y}",layers:a.layers,insertBeforeLayer:a.insertBeforeLayer,sourceOptions:a.sourceOptions}}:{type:"geojson",name:"useAddProtocolLayer",config:{layerId:"useAddProtocolLayer",type:a.type||"line",options:{source:a.sourceId},paint:a.paint}}])},[A]),I.useEffect(()=>{!u.map?.getSource(a.sourceId)&&a.protocol!=="mbtiles"&&u.map?.addSource(a.sourceId,{type:"geojson",data:a.protocol+"://"+a.filePath+ot}),a.flyTo&&u.map?.flyTo(a.flyTo)},[u.map,A]),d.jsxs(d.Fragment,{children:[d.jsx(Rr,{buttons:d.jsxs(d.Fragment,{children:[d.jsx(Eo,{variant:E?"contained":"outlined",onClick:()=>q(!E),sx:{marginRight:{xs:"0px",sm:"10px"}},children:"Sidebar"}),d.jsx(Eo,{id:"basic-button",variant:"contained","aria-controls":ee?"basic-menu":void 0,"aria-haspopup":"true","aria-expanded":ee?"true":void 0,onClick:N=>{T(N.currentTarget)},children:"Example Configs"}),d.jsx(Nr,{id:"basic-menu",anchorEl:F,open:ee,onClose:()=>T(null),children:Object.keys(Oo).map(N=>d.jsx(Cr,{onClick:()=>V(N),selected:N===A,children:N},N))})]})}),d.jsxs(Dr,{open:E,setOpen:q,name:a.protocol.toUpperCase()+" demo",children:[d.jsx(Fr,{title:"add a new"+a.protocol+" to the map",children:d.jsx($r,{onComplete:N=>O.setLayers(me=>[...me,N]),layerTypes:[a.protocol]})}),d.jsxs(Ur,{sx:{height:"35%"},children:[d.jsx(Mt,{variant:"h6",children:"Layers"}),d.jsx(Mo,{children:d.jsx(Io,{layers:O.layers,setLayers:O.setLayers,insertBeforeLayer:"useAddProtocolLayer",fitBoundsOptions:{padding:{top:50,bottom:50,left:25,right:25}}})})]}),d.jsx(It,{json:en,section:a.protocol,title:"About this demo: "})]})]})},Le=cn.bind({});Le.args={};Le.parameters={};ge.parameters={...ge.parameters,docs:{...ge.parameters?.docs,source:{originalSource:`() => {
  const mapHook = useMap({
    mapId: undefined
  });
  useAddProtocol({
    protocol: 'mbtiles',
    handler: mbTilesProtocolHandler
  });
  useEffect(() => {
    if (!mapHook.map) return;
    mapHook.map?.setZoom(0);
  }, [mapHook.map]);
  return <>
            <MlVectorTileLayer mapId={'map_1'} url={'mbtiles://mbtiles/countries.mbtiles/{z}/{x}/{y}'} layers={[{
      id: 'countries',
      type: 'fill',
      'source-layer': 'countries',
      layout: {},
      paint: {
        'fill-color': '#f9a5f5',
        'fill-opacity': 0.5
      }
    }] as unknown as LayerSpecification[]} insertBeforeLayer={'waterway-name'} sourceOptions={{
      type: 'vector',
      minzoom: 0,
      maxzoom: 1
    }} />

            <BackgroundLayers />
        </>;
}`,...ge.parameters?.docs?.source}}};xe.parameters={...xe.parameters,docs:{...xe.parameters?.docs,source:{originalSource:`() => {
  const mapHook = useMap({
    mapId: undefined
  });

  //  An optional encoded options object can be added after a '?' sign at the end of the url.
  //  Handlers that support options are:
  // -CSV/TSV Handler Options: https://github.com/mapbox/csv2geojson/blob/gh-pages/README.md

  useAddProtocol({
    protocol: 'csv',
    handler: CSVProtocolHandler
  });
  useEffect(() => {
    if (!mapHook.map?.getSource('csv-source')) {
      mapHook.map?.addSource('csv-source', {
        type: 'geojson',
        data: \`csv://csv/restaurants.csv\`
      });
    }
    mapHook.map?.jumpTo({
      center: [-74.914516, 38.935759],
      zoom: 13
    } as JumpToOptions);
  }, [mapHook.map]);
  return <>
            <MlLayer layerId={'UseAddProtocolLayer'} options={{
      type: 'circle',
      source: 'csv-source',
      paint: {
        'circle-color': '#009EE0',
        'circle-stroke-color': '#F0f0f0',
        'circle-stroke-width': 2,
        'circle-radius': 18
      }
    } as useLayerProps['options']} insertBeforeLayer={'waterway-name'} />

            <BackgroundLayers />
        </>;
}`,...xe.parameters?.docs?.source}}};we.parameters={...we.parameters,docs:{...we.parameters?.docs,source:{originalSource:`() => {
  const mapHook = useMap({
    mapId: undefined
  });

  //  An optional encoded options object can be added after a '?' sign at the end of the url.
  //  Handlers that support options are:
  // -CSV/TSV Handler Options: https://github.com/mapbox/csv2geojson/blob/gh-pages/README.md

  useAddProtocol({
    protocol: 'csv',
    handler: CSVProtocolHandler
  });
  useEffect(() => {
    if (!mapHook.map?.getSource('csv-source')) {
      const options = '?latfield=Axe-y&lonfield=Axe-x&delimiter=:';
      mapHook.map?.addSource('csv-source', {
        type: 'geojson',
        data: \`csv://csv/gemany_100_postcodes.csv\${options}\`
      });
    }
    mapHook.map?.jumpTo({
      center: [10.147049, 50.871231],
      zoom: 6,
      speed: 2
    } as JumpToOptions);
  }, [mapHook.map]);
  return <>
            <MlLayer layerId={'UseAddProtocolLayer'} options={{
      type: 'circle',
      source: 'csv-source',
      paint: {
        'circle-color': '#009EE0',
        'circle-stroke-color': '#F0f0f0',
        'circle-stroke-width': 2,
        'circle-radius': 18
      }
    } as useLayerProps['options']} insertBeforeLayer={'waterway-name'} />

            <BackgroundLayers />
        </>;
}`,...we.parameters?.docs?.source}}};ve.parameters={...ve.parameters,docs:{...ve.parameters?.docs,source:{originalSource:`() => {
  const mapHook = useMap({
    mapId: undefined
  });

  //  An optional encoded options object can be added after a '?' sign at the end of the url.
  //  Handlers that support options are:
  // -OSM Handler Options: https://github.com/tibetty/osm2geojson-lite#osm2geojsonosm-opts

  useAddProtocol({
    protocol: 'osm',
    handler: OSMProtocolHandler
  });
  useSource({
    sourceId: 'osm-source',
    source: {
      type: 'geojson',
      data: \`osm://osm/palma.osm?completeFeature=true&allFeatures=false&renderTagged=false&excludeWay=false&suppressWay=false\`
    }
  });
  useEffect(() => {
    if (!mapHook.map?.getSource('osm-source')) {
      //mapHook.map?.addSource('osm-source', {
      //	type: 'geojson',
      //	data: \`osm://osm/palma.osm\${options}\`,
      //});
    }
    mapHook.map?.jumpTo({
      center: [2.651811, 39.571309],
      zoom: 16.5
    } as JumpToOptions);
  }, [mapHook.map]);
  return <>
            <MlLayer layerId={'UseAddProtocolLayer'} options={{
      type: 'line',
      source: 'osm-source',
      paint: {
        'line-color': '#9a00ff'
      }
    } as useLayerProps['options']} insertBeforeLayer={'waterway-name'} />

            <BackgroundLayers />
        </>;
}`,...ve.parameters?.docs?.source}}};_e.parameters={..._e.parameters,docs:{..._e.parameters?.docs,source:{originalSource:`() => {
  const mapHook = useMap({
    mapId: undefined
  });
  useAddProtocol({
    protocol: 'gpx',
    handler: XMLProtocolHandler
  });
  useEffect(() => {
    if (!mapHook.map?.getSource('gpx-source')) {
      mapHook.map?.addSource('gpx-source', {
        type: 'geojson',
        data: \`gpx://gpx/santiago.gpx\`
      });
    }
    mapHook.map?.jumpTo({
      center: [-5.100251, 42.887371],
      zoom: 7
    } as JumpToOptions);
  }, [mapHook.map]);
  return <>
            <MlLayer layerId={'UseAddProtocolLayer'} options={{
      type: 'circle',
      source: 'gpx-source',
      paint: {
        'circle-color': '#45ff33',
        'circle-stroke-color': '#259913',
        'circle-stroke-width': 1,
        'circle-radius': 2
      }
    } as useLayerProps['options']} insertBeforeLayer={'waterway-name'} />

            <BackgroundLayers />
        </>;
}`,..._e.parameters?.docs?.source}}};ke.parameters={...ke.parameters,docs:{...ke.parameters?.docs,source:{originalSource:`() => {
  const mapHook = useMap({
    mapId: undefined
  });
  useAddProtocol({
    protocol: 'kml',
    handler: XMLProtocolHandler
  });
  useEffect(() => {
    if (!mapHook.map?.getSource('kml-source')) {
      mapHook.map?.addSource('kml-source', {
        type: 'geojson',
        data: \`kml://kml/cape_may.kml\`
      });
    }
    mapHook.map?.jumpTo({
      center: [-74.82832, 39.093526],
      zoom: 9
    } as JumpToOptions);
  }, [mapHook.map]);
  return <>
            <MlLayer layerId={'UseAddProtocolLayer'} options={{
      type: 'fill',
      source: 'kml-source',
      paint: {
        'fill-color': '#ff4533'
      }
    } as useLayerProps['options']} insertBeforeLayer={'waterway-name'} />

            <BackgroundLayers />
        </>;
}`,...ke.parameters?.docs?.source}}};Se.parameters={...Se.parameters,docs:{...Se.parameters?.docs,source:{originalSource:`() => {
  const mapHook = useMap({
    mapId: undefined
  });
  useAddProtocol({
    protocol: 'tcx',
    handler: XMLProtocolHandler
  });
  useEffect(() => {
    if (!mapHook.map?.getSource('tcx-source')) {
      mapHook.map?.addSource('tcx-source', {
        type: 'geojson',
        data: \`tcx://tcx/example.tcx\`
      });
    }
    mapHook.map?.jumpTo({
      center: [32.711545, 34.844962],
      zoom: 9
    } as JumpToOptions);
  }, [mapHook.map]);
  return <>
            <MlLayer layerId={'UseAddProtocolLayer'} options={{
      type: 'circle',
      source: 'tcx-source',
      paint: {
        'circle-color': '#ff45fa',
        'circle-stroke-color': '#992578',
        'circle-stroke-width': 1,
        'circle-radius': 2
      }
    } as useLayerProps['options']} insertBeforeLayer={'waterway-name'} />

            <BackgroundLayers />
        </>;
}`,...Se.parameters?.docs?.source}}};je.parameters={...je.parameters,docs:{...je.parameters?.docs,source:{originalSource:`() => {
  const mapHook = useMap({
    mapId: undefined
  });
  useAddProtocol({
    protocol: 'topojson',
    handler: TopojsonProtocolHandler
  });
  useEffect(() => {
    if (!mapHook.map?.getSource('topojson-source')) {
      mapHook.map?.addSource('topojson-source', {
        type: 'geojson',
        data: \`topojson://topojson/usa.topojson\`
      });
    }
    mapHook.map?.jumpTo({
      center: [-99.110122, 39.827183],
      zoom: 4
    } as JumpToOptions);
  }, [mapHook.map]);
  return <>
            <MlLayer layerId={'UseAddProtocolLayer'} options={{
      type: 'line',
      source: 'topojson-source',
      paint: {
        'line-color': ['match', ['get', 'fromObject'], 'land', '#111111', 'states', '#009EE0', 'counties', '#747577', 'white' // otherwise
        ],
        'line-width': ['match', ['get', 'fromObject'], 'land', 3, 'states', 2, 'counties', 1, 1 // otherwise
        ]
      }
    } as useLayerProps['options']} insertBeforeLayer={'waterway-name'} />

            <BackgroundLayers />
        </>;
}`,...je.parameters?.docs?.source}}};Le.parameters={...Le.parameters,docs:{...Le.parameters?.docs,source:{originalSource:`() => {
  const mapHook = useMap({
    mapId: undefined
  });
  const [openSidebar, setOpenSidebar] = useState(true);
  const layerContext = useContext(LayerContext);
  const [currentDemo, setCurrentDemo] = useState<string>('csv');
  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);
  const open = Boolean(anchorEl);
  const props: TemplateProps = (currentProps as {
    [key: string]: any;
  })[currentDemo];
  const optionsURL = '?' + new URLSearchParams(props.options as string).toString();
  useAddProtocol({
    protocol: props.protocol,
    handler: props.handler
  });
  useEffect(() => {
    layerContext.updateStyle(bright as unknown as StyleSpecification);
    layerContext.setLayers([props.protocol === 'mbtiles' ? {
      type: 'vt',
      name: 'useAddProtocolLayer',
      config: {
        layerId: 'useAddProtocolLayer',
        url: props.protocol + '://' + props.filePath + '/{z}/{x}/{y}',
        layers: props.layers,
        insertBeforeLayer: props.insertBeforeLayer,
        sourceOptions: props.sourceOptions
      } as MlVectorTileLayerProps
    } : {
      type: 'geojson',
      name: 'useAddProtocolLayer',
      config: {
        layerId: 'useAddProtocolLayer',
        type: props.type || 'line',
        options: {
          source: props.sourceId
        },
        paint: props.paint
      } as MlGeoJsonLayerProps
    }]);
  }, [currentDemo]);
  useEffect(() => {
    if (!mapHook.map?.getSource(props.sourceId) && props.protocol !== 'mbtiles') {
      mapHook.map?.addSource(props.sourceId, {
        type: 'geojson',
        data: props.protocol + '://' + props.filePath + optionsURL
      });
    }
    if (props.flyTo) {
      mapHook.map?.flyTo(props.flyTo as FlyToOptions);
    }
  }, [mapHook.map, currentDemo]);
  return <>
            <TopToolbar buttons={<>
                        <Button variant={openSidebar ? 'contained' : 'outlined'} onClick={() => setOpenSidebar(!openSidebar)} sx={{
        marginRight: {
          xs: '0px',
          sm: '10px'
        }
      }}>
                            Sidebar
                        </Button>

                        <Button id="basic-button" variant="contained" aria-controls={open ? 'basic-menu' : undefined} aria-haspopup="true" aria-expanded={open ? 'true' : undefined} onClick={(event: React.MouseEvent<HTMLButtonElement>) => {
        setAnchorEl(event.currentTarget);
      }}>
                            Example Configs
                        </Button>
                        <Menu id="basic-menu" anchorEl={anchorEl} open={open} onClose={() => setAnchorEl(null)}>
                            {Object.keys(currentProps).map(el => <MenuItem onClick={() => setCurrentDemo(el)} key={el} selected={el === currentDemo}>
                                    {el}
                                </MenuItem>)}
                        </Menu>
                    </>} />

            <Sidebar open={openSidebar} setOpen={setOpenSidebar} name={props.protocol.toUpperCase() + ' demo'}>
                <Tooltip title={'add a new' + props.protocol + ' to the map'}>
                    <AddLayerButton onComplete={config => layerContext.setLayers(current => [...current, config])} layerTypes={[props.protocol]} />
                </Tooltip>

                <Box sx={{
        height: '35%'
      }}>
                    <Typography variant="h6">{'Layers'}</Typography>
                    <LayerList>
                        <LayerListItemFactory layers={layerContext.layers} setLayers={layerContext.setLayers} insertBeforeLayer="useAddProtocolLayer" fitBoundsOptions={{
            padding: {
              top: 50,
              bottom: 50,
              left: 25,
              right: 25
            }
          }} />
                    </LayerList>
                </Box>

                <DemoDescriptions json={protocolDescriptions} section={props.protocol} title={'About this demo: '} />
            </Sidebar>
        </>;
}`,...Le.parameters?.docs?.source}}};const gn=["MbTiles","CSVOrTSV","CSVWithOptions","OSM","GPX","KML","TCX","Topojson","CatalogueDemo"];export{xe as CSVOrTSV,we as CSVWithOptions,Le as CatalogueDemo,_e as GPX,ke as KML,ge as MbTiles,ve as OSM,Se as TCX,je as Topojson,gn as __namedExportsOrder,bn as default};
