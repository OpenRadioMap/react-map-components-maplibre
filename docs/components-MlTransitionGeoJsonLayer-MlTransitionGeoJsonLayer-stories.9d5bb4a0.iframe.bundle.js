"use strict";(self.webpackChunk_mapcomponents_react_maplibre=self.webpackChunk_mapcomponents_react_maplibre||[]).push([[2696],{25836:(e,t,n)=>{n.r(t),n.d(t,{ExampleConfig:()=>j,__namedExportsOrder:()=>v,default:()=>g});var r=n(11504),o=n(96256),a=n(95316),s=n(72576),i=n(93240);const l=JSON.parse('{"type":"Feature","properties":{"name":"sample1"},"geometry":{"type":"LineString","coordinates":[[7.1074676513671875,50.74340774029213],[7.0992279052734375,50.756441089372665],[7.079315185546874,50.764693667025014],[7.045669555664062,50.77945780529241],[7.030563354492187,50.79161300845443],[7.0291900634765625,50.80940599750376],[7.0236968994140625,50.820685846099174],[7.0085906982421875,50.825891011253546],[6.9879913330078125,50.826758482363275],[6.97906494140625,50.835432306955276],[6.9824981689453125,50.84583876895451],[6.9962310791015625,50.85147463352982],[7.012023925781249,50.85710981721644],[7.021636962890625,50.86664473085768],[7.0367431640625,50.872278081520406],[7.0477294921875,50.877044231111014],[7.052536010742187,50.88397594225127]]}}'),u=JSON.parse('{"type":"Feature","properties":{"name":"sample2"},"geometry":{"type":"LineString","coordinates":[[7.0635223388671875,50.71385204707258],[7.06146240234375,50.709721458354075],[7.063865661621094,50.70298129536074],[7.064552307128906,50.69906720767511],[7.059059143066406,50.69428287906098],[7.05596923828125,50.68797551838366],[7.0580291748046875,50.680797145321655],[7.062835693359375,50.67514068397085],[7.060432434082031,50.6686131506577],[7.051849365234375,50.659255436656736],[7.044639587402344,50.6512019574539],[7.0484161376953125,50.64271166020676],[7.0566558837890625,50.63748609931014]]}}');var c=n(59476),p=n(17624);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function f(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?f(Object(n),!0).forEach((function(t){var r,o,a,s;r=e,o=t,a=n[t],s=function(e,t){if("object"!=m(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o),(o="symbol"==m(s)?s:String(s))in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):f(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,s,i=[],l=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=a.call(n)).done)&&(i.push(r.value),i.length!==t);l=!0);}catch(e){u=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(u)throw o}}return i}}(e,t)||function(e,t){if(e){if("string"==typeof e)return y(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?y(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function y(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const g={title:"MapComponents/MlTransitionGeoJsonLayer",component:o.c,argTypes:{url:{},layer:{}},decorators:a.c};var j=function(e){var t=(0,s.c)({mapId:"map_1"}),n=d((0,r.useState)(l),2),a=n[0],m=n[1],f=(0,r.useRef)(!1),y=d((0,r.useState)(!0),2),g=y[0],j=y[1];function v(){var e,t;"sample1"===(null==a||null===(e=a.properties)||void 0===e?void 0:e.name)?m(u):"sample2"===(null==a||null===(t=a.properties)||void 0===t?void 0:t.name)&&m(l)}function h(e){setTimeout((function(){j(!1)}),e)}return(0,r.useEffect)((function(){h(6e3)}),[]),(0,r.useEffect)((function(){t.map&&!f.current&&(f.current=!0,t.map.setCenter({lng:7.137609868988648,lat:50.74746799549129}),t.map.setZoom(9.5),setTimeout((function(){v()}),3e3))}),[a,t.map]),(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(i.c,{unmovableButtons:(0,p.jsx)(c.c,{variant:"outlined",onClick:function(){v(),j(!0),h(2800)},sx:{marginRight:{xs:"5px",sm:"10px"}},disabled:g,children:"Restart"})}),(0,p.jsx)(o.c,b({type:"line",geojson:a,transitionTime:2e3},e))]})}.bind({});j.parameters={},j.args={paint:{"line-color":"red","line-width":4}},j.parameters={...j.parameters,docs:{...j.parameters?.docs,source:{originalSource:"(props: MlTransitionGeoJsonLayerProps) => {\n  const mapHook = useMap({\n    mapId: 'map_1'\n  });\n  const [geojson, setGeojson] = useState<GeoJSON.Feature>((sample_geojson_1 as GeoJSON.Feature));\n  const initializedRef = useRef(false);\n  const [disabled, setDisabled] = useState(true);\n  useEffect(() => {\n    enableButton(6000);\n  }, []);\n  useEffect(() => {\n    if (!mapHook.map || initializedRef.current) return;\n    initializedRef.current = true;\n    mapHook.map.setCenter({\n      lng: 7.137609868988648,\n      lat: 50.74746799549129\n    });\n    mapHook.map.setZoom(9.5);\n    setTimeout(() => {\n      toogleSource();\n    }, 3000);\n  }, [geojson, mapHook.map]);\n  function toogleSource() {\n    if (geojson?.properties?.name === 'sample1') {\n      setGeojson((sample_geojson_2 as GeoJSON.Feature));\n    } else if (geojson?.properties?.name === 'sample2') {\n      setGeojson((sample_geojson_1 as GeoJSON.Feature));\n    }\n  }\n  function enableButton(time: number) {\n    setTimeout(() => {\n      setDisabled(false);\n    }, time);\n  }\n  return <>\n            <TopToolbar unmovableButtons={<Button variant=\"outlined\" onClick={() => {\n      toogleSource();\n      setDisabled(true);\n      enableButton(2800);\n    }} sx={{\n      marginRight: {\n        xs: '5px',\n        sm: '10px'\n      }\n    }} disabled={disabled}>\n                        Restart\n                    </Button>} />\n            <MlTransitionGeoJsonLayer type=\"line\" geojson={geojson} transitionTime={2000} {...props} />\n        </>;\n}",...j.parameters?.docs?.source}}};const v=["ExampleConfig"]},95316:(e,t,n)=>{n.d(t,{c:()=>c});var r=n(11504),o=n(77288),a=n(24732),s=(n(47634),n(21200)),i=n(54656),l=n(76508),u=n(17624);const c=[function(e,t){var n,c=(0,r.useMemo)((function(){var e;return(0,l.c)(null==t||null===(e=t.globals)||void 0===e?void 0:e.theme)}),[null==t||null===(n=t.globals)||void 0===n?void 0:n.theme]);return(0,u.jsx)("div",{className:"fullscreen_map",children:(0,u.jsx)(o.y4,{children:(0,u.jsxs)(i.c,{theme:c,children:[(0,u.jsx)(e,{}),(0,u.jsx)(a.c,{options:{zoom:14.5,style:"https://wms.wheregroup.com/tileserver/style/osm-bright.json",center:[7.0851268,50.73884]},mapId:"map_1"}),(0,u.jsx)(s.c,{showZoomButtons:!1,mapId:"map_1"})]})})})}]}}]);