"use strict";(self.webpackChunk_mapcomponents_react_maplibre=self.webpackChunk_mapcomponents_react_maplibre||[]).push([[7848],{"./src/decorators/EmptyMapDecorator.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_index__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/index.ts"),_components_MapLibreMap_MapLibreMap__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/MapLibreMap/MapLibreMap.tsx"),_components_MlNavigationTools_MlNavigationTools__WEBPACK_IMPORTED_MODULE_4__=(__webpack_require__("./src/decorators/style.css"),__webpack_require__("./src/components/MlNavigationTools/MlNavigationTools.tsx")),_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/esm/styles/ThemeProvider.js"),_ui_components_MapcomponentsTheme__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/ui_components/MapcomponentsTheme.tsx");const __WEBPACK_DEFAULT_EXPORT__=[function(Story,context){var _context$globals2,theme=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((function(){var _context$globals;return(0,_ui_components_MapcomponentsTheme__WEBPACK_IMPORTED_MODULE_5__.A)(null==context||null===(_context$globals=context.globals)||void 0===_context$globals?void 0:_context$globals.theme)}),[null==context||null===(_context$globals2=context.globals)||void 0===_context$globals2?void 0:_context$globals2.theme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"fullscreen_map"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index__WEBPACK_IMPORTED_MODULE_1__.mO,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.A,{theme},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_MapLibreMap_MapLibreMap__WEBPACK_IMPORTED_MODULE_2__.A,{mapId:"map_1",options:{zoom:12.5,center:[7.0851268,50.73884]}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_MlNavigationTools_MlNavigationTools__WEBPACK_IMPORTED_MODULE_4__.A,{showZoomButtons:!1,mapId:"map_1"}))))}]},"./src/ui_components/LayerList/LayerList.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ConfigurableExample:()=>ConfigurableExample,FolderExample:()=>FolderExample,GeoJsonLayerExample:()=>GeoJsonLayerExample,LabelExample:()=>LabelExample,VectortileExample:()=>VectortileExample,WmsLayerExample:()=>WmsLayerExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>LayerList_stories});var react=__webpack_require__("./node_modules/react/index.js"),Button=__webpack_require__("./node_modules/@mui/material/esm/Button/Button.js"),LayerList=__webpack_require__("./src/ui_components/LayerList/LayerList.tsx"),LayerListItem=__webpack_require__("./src/ui_components/LayerList/LayerListItem.tsx"),LayerListFolder=__webpack_require__("./src/ui_components/LayerList/LayerListFolder.tsx");const sample_1_namespaceObject=JSON.parse('{"type":"Feature","properties":{"name":"path path path path path path path path"},"geometry":{"type":"LineString","coordinates":[[7.1074676513671875,50.74340774029213],[7.0992279052734375,50.756441089372665],[7.079315185546874,50.764693667025014],[7.045669555664062,50.77945780529241],[7.030563354492187,50.79161300845443],[7.0291900634765625,50.80940599750376],[7.0236968994140625,50.820685846099174],[7.0085906982421875,50.825891011253546],[6.9879913330078125,50.826758482363275],[6.97906494140625,50.835432306955276],[6.9824981689453125,50.84583876895451],[6.9962310791015625,50.85147463352982],[7.012023925781249,50.85710981721644],[7.021636962890625,50.86664473085768],[7.0367431640625,50.872278081520406],[7.0477294921875,50.877044231111014],[7.052536010742187,50.88397594225127]]}}'),sample_2_namespaceObject=JSON.parse('{"type":"Feature","properties":{},"geometry":{"type":"LineString","coordinates":[[7.0635223388671875,50.71385204707258],[7.06146240234375,50.709721458354075],[7.063865661621094,50.70298129536074],[7.064552307128906,50.69906720767511],[7.059059143066406,50.69428287906098],[7.05596923828125,50.68797551838366],[7.0580291748046875,50.680797145321655],[7.062835693359375,50.67514068397085],[7.060432434082031,50.6686131506577],[7.051849365234375,50.659255436656736],[7.044639587402344,50.6512019574539],[7.0484161376953125,50.64271166020676],[7.0566558837890625,50.63748609931014]]}}');var sample_polygon_1=__webpack_require__("./src/ui_components/LayerList/assets/sample_polygon_1.json");const sample_points_1_namespaceObject=JSON.parse('{"type":"FeatureCollection","features":[{"type":"Feature","geometry":{"type":"Point","coordinates":[7.065242883489901,50.76377849881001]},"properties":{"name":"Point 1"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[7.07706112344971,50.760233423956294]},"properties":{"name":"Point 2"}}]}');var TopToolbar=__webpack_require__("./src/ui_components/TopToolbar.tsx"),Sidebar=__webpack_require__("./src/ui_components/Sidebar.tsx"),monokai=__webpack_require__("./src/omt_styles/monokai.ts"),EmptyMapDecorator=__webpack_require__("./src/decorators/EmptyMapDecorator.tsx"),MlGeoJsonLayer=__webpack_require__("./src/components/MlGeoJsonLayer/MlGeoJsonLayer.tsx"),MlWmsLayer=__webpack_require__("./src/components/MlWmsLayer/MlWmsLayer.tsx"),MlVectorTileLayer=__webpack_require__("./src/components/MlVectorTileLayer/MlVectorTileLayer.tsx");function _toConsumableArray(r){return function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}(r)||function _iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||_unsupportedIterableToArray(r)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||_unsupportedIterableToArray(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}const LayerList_stories={title:"UiComponents/LayerList",component:LayerList.A,argTypes:{},decorators:EmptyMapDecorator.A};var FolderExample=function FolderTemplate(){var _useState2=_slicedToArray((0,react.useState)(!0),2),openSidebar=_useState2[0],setOpenSidebar=_useState2[1];return react.createElement(react.Fragment,null,react.createElement(TopToolbar.A,{unmovableButtons:react.createElement(Button.A,{variant:openSidebar?"contained":"outlined",onClick:function onClick(){return setOpenSidebar(!openSidebar)}},"Sidebar")}),react.createElement(Sidebar.A,{open:openSidebar,setOpen:setOpenSidebar,name:"Layers"},react.createElement(LayerList.A,null,react.createElement(LayerListFolder.A,{visible:!0,name:"GeoJSON Layers"},react.createElement(LayerListItem.A,{layerComponent:react.createElement(MlGeoJsonLayer.A,{geojson:sample_1_namespaceObject}),visible:!0,configurable:!1,type:"layer",name:"GeoJSON Layer",key:"GeoJSONLayer"}),react.createElement(LayerListItem.A,{layerComponent:react.createElement(MlGeoJsonLayer.A,{geojson:sample_2_namespaceObject}),visible:!0,configurable:!0,type:"layer",name:"GeoJSON Layer 2",description:"A visualization of a GeoJSON LineString",key:"GeoJSONLayer2"})))))}.bind({});FolderExample.parameters={},FolderExample.args={};var VectortileExample=function VectortileTemplate(){var _useState4=_slicedToArray((0,react.useState)(!0),2),openSidebar=_useState4[0],setOpenSidebar=_useState4[1],_useState6=_slicedToArray((0,react.useState)({layerId:"openmaptiles",sourceOptions:{type:"vector",tiles:["https://wms.wheregroup.com/tileserver/tile/world-0-14/{z}/{x}/{y}.pbf"]},layers:_toConsumableArray(monokai.A.layers)}),2),layerState=_useState6[0],setLayerState=_useState6[1];return(0,react.useEffect)((function(){console.log(layerState)}),[layerState]),react.createElement(react.Fragment,null,react.createElement(TopToolbar.A,{unmovableButtons:react.createElement(Button.A,{variant:openSidebar?"contained":"outlined",onClick:function onClick(){return setOpenSidebar(!openSidebar)}},"Sidebar")}),react.createElement(Sidebar.A,{open:openSidebar,setOpen:setOpenSidebar,name:"Vector Tile Layer"},react.createElement(LayerList.A,null,react.createElement(LayerListItem.A,{layerComponent:react.createElement(MlVectorTileLayer.A,layerState),setLayerState,visible:!0,configurable:!1,type:"layer",name:"Vector style"}))))}.bind({});VectortileExample.parameters={},VectortileExample.args={};var WmsLayerExample=function WmsLayerTemplate(){var _useState8=_slicedToArray((0,react.useState)(!0),2),openSidebar=_useState8[0],setOpenSidebar=_useState8[1],_useState0=_slicedToArray((0,react.useState)({layerId:"openmaptiles",sourceOptions:{type:"vector",tiles:["https://wms.wheregroup.com/tileserver/tile/world-0-14/{z}/{x}/{y}.pbf"]},layers:_toConsumableArray(monokai.A.layers)}),2),layerState=_useState0[0],setLayerState=_useState0[1];return(0,react.useEffect)((function(){console.log(layerState)}),[layerState]),react.createElement(react.Fragment,null,react.createElement(TopToolbar.A,{unmovableButtons:react.createElement(Button.A,{variant:openSidebar?"contained":"outlined",onClick:function onClick(){return setOpenSidebar(!openSidebar)}},"Sidebar")}),react.createElement(Sidebar.A,{open:openSidebar,setOpen:setOpenSidebar,name:"Layer List"},react.createElement(LayerList.A,null,react.createElement(LayerListItem.A,{layerComponent:react.createElement(MlWmsLayer.A,{url:"https://www.wms.nrw.de/geobasis/wms_nw_uraufnahme",urlParameters:{layers:"nw_uraufnahme_rw"}}),setLayerState,visible:!0,configurable:!1,type:"layer",name:"WMS Layer"}))))}.bind({});WmsLayerExample.parameters={},WmsLayerExample.args={};var GeoJsonLayerExample=function GeoJsonLayerTemplate(){var _useState10=_slicedToArray((0,react.useState)(!0),2),openSidebar=_useState10[0],setOpenSidebar=_useState10[1];return react.createElement(react.Fragment,null,react.createElement(TopToolbar.A,{unmovableButtons:react.createElement(Button.A,{variant:openSidebar?"contained":"outlined",onClick:function onClick(){return setOpenSidebar(!openSidebar)}},"Sidebar")}),react.createElement(Sidebar.A,{open:openSidebar,setOpen:setOpenSidebar,name:"Layers"},react.createElement(LayerList.A,null,react.createElement(LayerListItem.A,{layerComponent:react.createElement(MlGeoJsonLayer.A,{geojson:sample_points_1_namespaceObject}),visible:!0,configurable:!0,type:"layer",name:"Point GeoJSON Layer"}),react.createElement(LayerListItem.A,{layerComponent:react.createElement(MlGeoJsonLayer.A,{geojson:sample_1_namespaceObject}),visible:!0,configurable:!0,type:"layer",name:"Line GeoJSON Layer"}),react.createElement(LayerListItem.A,{layerComponent:react.createElement(MlGeoJsonLayer.A,{geojson:sample_polygon_1}),visible:!0,configurable:!0,type:"layer",name:"Polygon GeoJSON Layer"}))))}.bind({});GeoJsonLayerExample.parameters={},GeoJsonLayerExample.args={};var ConfigurableExample=function ConfigurableTemplate(){var _useState12=_slicedToArray((0,react.useState)({geojson:sample_1_namespaceObject}),2),layerOneState=_useState12[0],setLayerOneState=_useState12[1],_useState14=_slicedToArray((0,react.useState)({geojson:sample_2_namespaceObject}),2),layerTwoState=_useState14[0],setLayerTwoState=_useState14[1],_useState16=_slicedToArray((0,react.useState)(!0),2),openSidebar=_useState16[0],setOpenSidebar=_useState16[1];return(0,react.useEffect)((function(){console.log(layerOneState,layerTwoState)}),[layerOneState,layerTwoState]),react.createElement(react.Fragment,null,react.createElement(TopToolbar.A,{unmovableButtons:react.createElement(Button.A,{variant:openSidebar?"contained":"outlined",onClick:function onClick(){return setOpenSidebar(!openSidebar)}},"Sidebar")}),react.createElement(Sidebar.A,{open:openSidebar,setOpen:setOpenSidebar,name:"Layers"},react.createElement(LayerList.A,null,react.createElement(LayerListItem.A,{layerComponent:react.createElement(MlGeoJsonLayer.A,layerOneState),setLayerState:setLayerOneState,visible:!0,configurable:!0,type:"layer",name:"GeoJSON Layer"}),react.createElement(LayerListItem.A,{layerComponent:react.createElement(MlGeoJsonLayer.A,layerTwoState),setLayerState:setLayerTwoState,visible:!0,configurable:!0,type:"layer",name:"configurable GeoJSON Layer",description:"A visualization of a GeoJSON LineString"}))))}.bind({});ConfigurableExample.parameters={},ConfigurableExample.args={};var LabelExample=function LabelTemplate(){var _useState18=_slicedToArray((0,react.useState)({geojson:sample_1_namespaceObject,type:"symbol",options:{layout:{"symbol-placement":"line","text-field":"{name}","text-justify":"auto","text-font":["Open Sans Regular"]},paint:{"text-color":"white"}}}),2),layerOneState=_useState18[0],setLayerOneState=_useState18[1],_useState20=_slicedToArray((0,react.useState)(!0),2),openSidebar=_useState20[0],setOpenSidebar=_useState20[1];return react.createElement(react.Fragment,null,react.createElement(TopToolbar.A,{unmovableButtons:react.createElement(Button.A,{variant:openSidebar?"contained":"outlined",onClick:function onClick(){return setOpenSidebar(!openSidebar)}},"Sidebar")}),react.createElement(Sidebar.A,{open:openSidebar,setOpen:setOpenSidebar,name:"Layers"},react.createElement(LayerList.A,null,react.createElement(LayerListItem.A,{layerComponent:react.createElement(MlGeoJsonLayer.A,layerOneState),setLayerState:setLayerOneState,visible:!0,configurable:!0,type:"layer",name:"GeoJSON Layer"}))))}.bind({});LabelExample.parameters={},LabelExample.args={};const __namedExportsOrder=["FolderExample","VectortileExample","WmsLayerExample","GeoJsonLayerExample","ConfigurableExample","LabelExample"]},"./src/ui_components/LayerList/assets/sample_polygon_1.json":module=>{module.exports=JSON.parse('{"type":"FeatureCollection","features":[{"type":"Feature","properties":{},"geometry":{"coordinates":[[[7.08646747303149,50.74485058672653],[7.084287513691095,50.74371917250187],[7.084437772332876,50.743610683782215],[7.084640903561933,50.743721758552354],[7.085805654941254,50.74293993704128],[7.087023278906713,50.74218320888983],[7.087791368229503,50.74258090834434],[7.088796806075749,50.743261830692745],[7.089275088452752,50.743701110992674],[7.088087117762917,50.74409411011173],[7.087662548338368,50.743784963165815],[7.087184330538875,50.7440368518605],[7.087233860417484,50.744077781245316],[7.08714938625954,50.744122118772154],[7.087057544749172,50.74427276821896],[7.087104984084277,50.744509715654885],[7.08646747303149,50.74485058672653]]],"type":"Polygon"}}]}')}}]);