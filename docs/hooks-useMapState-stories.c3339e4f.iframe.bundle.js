"use strict";(self.webpackChunk_mapcomponents_react_maplibre=self.webpackChunk_mapcomponents_react_maplibre||[]).push([[4478],{"./src/decorators/MapContextDecoratorHooks.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_index__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/index.ts"),_components_MapLibreMap_MapLibreMap__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/MapLibreMap/MapLibreMap.tsx"),_components_MlNavigationTools_MlNavigationTools__WEBPACK_IMPORTED_MODULE_4__=(__webpack_require__("./src/decorators/style.css"),__webpack_require__("./src/components/MlNavigationTools/MlNavigationTools.tsx")),_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/esm/styles/ThemeProvider.js"),_ui_components_MapcomponentsTheme__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/ui_components/MapcomponentsTheme.tsx");const __WEBPACK_DEFAULT_EXPORT__=[function(Story,context){var _context$globals2,theme=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((function(){var _context$globals;return(0,_ui_components_MapcomponentsTheme__WEBPACK_IMPORTED_MODULE_5__.A)(null==context||null===(_context$globals=context.globals)||void 0===_context$globals?void 0:_context$globals.theme)}),[null==context||null===(_context$globals2=context.globals)||void 0===_context$globals2?void 0:_context$globals2.theme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"fullscreen_map"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index__WEBPACK_IMPORTED_MODULE_1__.mO,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.A,{theme},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_MapLibreMap_MapLibreMap__WEBPACK_IMPORTED_MODULE_2__.A,{options:{zoom:14.5,style:"https://wms.wheregroup.com/tileserver/style/osm-bright.json",center:[7.0851268,50.73884]},mapId:"map_1"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_MlNavigationTools_MlNavigationTools__WEBPACK_IMPORTED_MODULE_4__.A,{showZoomButtons:!1,mapId:"map_1"}))))}]},"./src/hooks/useMapState.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{IncludeBaseLayers:()=>IncludeBaseLayers,MatchLayerIdRegexp:()=>MatchLayerIdRegexp,MatchLayerIdString:()=>MatchLayerIdString,NonBaseLayersOnly:()=>NonBaseLayersOnly,ViewportOnly:()=>ViewportOnly,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useMapState__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/useMapState.ts"),_decorators_MapContextDecoratorHooks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/decorators/MapContextDecoratorHooks.tsx");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const __WEBPACK_DEFAULT_EXPORT__={title:"Hooks/useMapState",component:_useMapState__WEBPACK_IMPORTED_MODULE_1__.A,argTypes:{},decorators:_decorators_MapContextDecoratorHooks__WEBPACK_IMPORTED_MODULE_2__.A};var Template=function Template(props){var mapState=(0,_useMapState__WEBPACK_IMPORTED_MODULE_1__.A)(function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({},props));return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){}),[mapState.layers]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{position:"fixed",zIndex:1e4,display:"flex",flexWrap:"wrap",top:0,left:0,right:0,bottom:0,maxHeight:"100VH",backgroundColor:"rgba(80,80,80,.8)",padding:"50px",fontSize:"20px",color:"#51ff09",overflow:"hidden",pointerEvents:"none"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre",null,JSON.stringify(mapState,null,"\t"))))},ViewportOnly=Template.bind({});ViewportOnly.parameters={},ViewportOnly.args={mapId:"map_1",watch:{viewport:!0,layers:!1,sources:!1}};var IncludeBaseLayers=Template.bind({});IncludeBaseLayers.parameters={},IncludeBaseLayers.args={mapId:"map_1",watch:{viewport:!1,layers:!0,sources:!1},filter:{includeBaseLayers:!0}};var MatchLayerIdString=Template.bind({});MatchLayerIdString.parameters={},MatchLayerIdString.args={mapId:"map_1",watch:{viewport:!1,layers:!0,sources:!1},filter:{includeBaseLayers:!0,matchLayerIds:"water"}};var MatchLayerIdRegexp=Template.bind({});MatchLayerIdRegexp.parameters={},MatchLayerIdRegexp.args={mapId:"map_1",watch:{viewport:!1,layers:!0,sources:!1},filter:{includeBaseLayers:!0,matchLayerIds:"water"}};var NonBaseLayersOnly=Template.bind({});NonBaseLayersOnly.parameters={},NonBaseLayersOnly.args={mapId:"map_1",watch:{viewport:!1,layers:!0,sources:!1},filter:{includeBaseLayers:!1}};const __namedExportsOrder=["ViewportOnly","IncludeBaseLayers","MatchLayerIdString","MatchLayerIdRegexp","NonBaseLayersOnly"];ViewportOnly.parameters={...ViewportOnly.parameters,docs:{...ViewportOnly.parameters?.docs,source:{originalSource:'props => {\n  const mapState = useMapState({\n    ...props\n  });\n  useEffect(() => {\n    // Your useEffect logic here\n  }, [mapState.layers]);\n  return <>\n            <div style={{\n      position: "fixed",\n      zIndex: 10000,\n      display: "flex",\n      flexWrap: "wrap",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      maxHeight: \'100VH\',\n      backgroundColor: "rgba(80,80,80,.8)",\n      padding: "50px",\n      fontSize: "20px",\n      color: "#51ff09",\n      overflow: \'hidden\',\n      pointerEvents: "none"\n    }}>\n                <pre>{JSON.stringify(mapState, null, "\\t")}</pre>\n            </div>\n        </>;\n}',...ViewportOnly.parameters?.docs?.source}}},IncludeBaseLayers.parameters={...IncludeBaseLayers.parameters,docs:{...IncludeBaseLayers.parameters?.docs,source:{originalSource:'props => {\n  const mapState = useMapState({\n    ...props\n  });\n  useEffect(() => {\n    // Your useEffect logic here\n  }, [mapState.layers]);\n  return <>\n            <div style={{\n      position: "fixed",\n      zIndex: 10000,\n      display: "flex",\n      flexWrap: "wrap",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      maxHeight: \'100VH\',\n      backgroundColor: "rgba(80,80,80,.8)",\n      padding: "50px",\n      fontSize: "20px",\n      color: "#51ff09",\n      overflow: \'hidden\',\n      pointerEvents: "none"\n    }}>\n                <pre>{JSON.stringify(mapState, null, "\\t")}</pre>\n            </div>\n        </>;\n}',...IncludeBaseLayers.parameters?.docs?.source}}},MatchLayerIdString.parameters={...MatchLayerIdString.parameters,docs:{...MatchLayerIdString.parameters?.docs,source:{originalSource:'props => {\n  const mapState = useMapState({\n    ...props\n  });\n  useEffect(() => {\n    // Your useEffect logic here\n  }, [mapState.layers]);\n  return <>\n            <div style={{\n      position: "fixed",\n      zIndex: 10000,\n      display: "flex",\n      flexWrap: "wrap",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      maxHeight: \'100VH\',\n      backgroundColor: "rgba(80,80,80,.8)",\n      padding: "50px",\n      fontSize: "20px",\n      color: "#51ff09",\n      overflow: \'hidden\',\n      pointerEvents: "none"\n    }}>\n                <pre>{JSON.stringify(mapState, null, "\\t")}</pre>\n            </div>\n        </>;\n}',...MatchLayerIdString.parameters?.docs?.source}}},MatchLayerIdRegexp.parameters={...MatchLayerIdRegexp.parameters,docs:{...MatchLayerIdRegexp.parameters?.docs,source:{originalSource:'props => {\n  const mapState = useMapState({\n    ...props\n  });\n  useEffect(() => {\n    // Your useEffect logic here\n  }, [mapState.layers]);\n  return <>\n            <div style={{\n      position: "fixed",\n      zIndex: 10000,\n      display: "flex",\n      flexWrap: "wrap",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      maxHeight: \'100VH\',\n      backgroundColor: "rgba(80,80,80,.8)",\n      padding: "50px",\n      fontSize: "20px",\n      color: "#51ff09",\n      overflow: \'hidden\',\n      pointerEvents: "none"\n    }}>\n                <pre>{JSON.stringify(mapState, null, "\\t")}</pre>\n            </div>\n        </>;\n}',...MatchLayerIdRegexp.parameters?.docs?.source}}},NonBaseLayersOnly.parameters={...NonBaseLayersOnly.parameters,docs:{...NonBaseLayersOnly.parameters?.docs,source:{originalSource:'props => {\n  const mapState = useMapState({\n    ...props\n  });\n  useEffect(() => {\n    // Your useEffect logic here\n  }, [mapState.layers]);\n  return <>\n            <div style={{\n      position: "fixed",\n      zIndex: 10000,\n      display: "flex",\n      flexWrap: "wrap",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      maxHeight: \'100VH\',\n      backgroundColor: "rgba(80,80,80,.8)",\n      padding: "50px",\n      fontSize: "20px",\n      color: "#51ff09",\n      overflow: \'hidden\',\n      pointerEvents: "none"\n    }}>\n                <pre>{JSON.stringify(mapState, null, "\\t")}</pre>\n            </div>\n        </>;\n}',...NonBaseLayersOnly.parameters?.docs?.source}}}}}]);