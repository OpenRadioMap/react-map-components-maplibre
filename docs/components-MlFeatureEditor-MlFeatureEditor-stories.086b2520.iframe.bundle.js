"use strict";(self.webpackChunk_mapcomponents_react_maplibre=self.webpackChunk_mapcomponents_react_maplibre||[]).push([[7876],{9024:(e,n,t)=>{t.r(n),t.d(n,{CatalogueDemo:()=>D,DrawLinestring:()=>S,DrawPoint:()=>M,DrawPolygon:()=>w,EditLinestring:()=>j,EditPoint:()=>h,EditPolygon:()=>P,__namedExportsOrder:()=>x,default:()=>y});var r=t(11504),o=t(68857),i=t(59476),s=t(45610),a=t(95316),l=t(93240),c=t(65112),u=t(27432),d=t(17624);function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function m(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?m(Object(t),!0).forEach((function(n){var r,o,i,s;r=e,o=n,i=t[n],s=function(e,n){if("object"!=g(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=g(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o),(o="symbol"==g(s)?s:String(s))in r?Object.defineProperty(r,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[o]=i})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function f(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(a.push(r.value),a.length!==n);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=t.return&&(s=t.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(e,n)||function(e,n){if(e){if("string"==typeof e)return b(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?b(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function b(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const y={title:"MapComponents/MlFeatureEditor",component:s.c,argTypes:{},decorators:a.c};var v={EditPolygon:"Edit Polygon",EditPoint:"Edit Point",EditLinestring:"Edit Linestring",DrawPolygon:"Draw Polygon",DrawPoint:"Draw Point",DrawLinestring:"Draw Linestring"},E=function(e){var n=f((0,r.useState)(!0),2),t=n[0],o=n[1];return(0,r.useEffect)((function(){!1===t&&setTimeout((function(){o(!0)}),750)}),[t]),(0,d.jsxs)(d.Fragment,{children:[t&&(0,d.jsx)(s.c,p(p({},e),{},{onChange:function(e){console.log(e)}})),";"]})},P=E.bind({});P.args={mode:"simple_select",geojson:{type:"Feature",properties:{},geometry:{coordinates:[[[7.0904979943736635,50.73948334574527],[7.087554458473562,50.73827346433987],[7.093562913197076,50.73723639825727],[7.096294028980594,50.7387727842636],[7.0904979943736635,50.73948334574527]]],type:"Polygon"}}};var h=E.bind({});h.args={mode:"simple_select",geojson:{type:"Feature",properties:{},geometry:{type:"Point",coordinates:[7.0851268,50.73884]}}};var j=E.bind({});j.args={mode:"simple_select",geojson:{type:"Feature",properties:{},geometry:{coordinates:[[7.0904979943736635,50.73948334574527],[7.087554458473562,50.73827346433987],[7.093562913197076,50.73723639825727],[7.096294028980594,50.7387727842636]],type:"LineString"}}};var w=E.bind({});w.args={mode:"draw_polygon"};var M=E.bind({});M.args={mode:"draw_point"};var S=E.bind({});S.args={mode:"draw_line_string"};var D=function(){var e=f((0,r.useState)(!0),2),n=e[0],t=e[1],s=f((0,r.useState)("EditPolygon"),2),a=s[0],g=s[1],m=f(r.useState(null),2),p=m[0],b=m[1],y=Boolean(p);return(0,r.useEffect)((function(){!1===n&&setTimeout((function(){t(!0)}),750)}),[n]),(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(l.c,{unmovableButtons:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(o.c,{variant:"h6",color:"ButtonText",marginRight:"20px",children:v[a]}),(0,d.jsx)(i.c,{id:"basic-button",variant:"contained","aria-controls":y?"basic-menu":void 0,"aria-haspopup":"true","aria-expanded":y?"true":void 0,onClick:function(e){b(e.currentTarget)},children:"Example Configs"}),(0,d.jsxs)(c.c,{id:"basic-menu",anchorEl:p,open:y,onClose:function(){b(null)},MenuListProps:{"aria-labelledby":"basic-button"},children:[(0,d.jsx)(u.c,{onClick:function(){return g("EditPolygon")},children:"Edit Polygon"}),(0,d.jsx)(u.c,{onClick:function(){return g("EditPoint")},children:"Edit Point"}),(0,d.jsx)(u.c,{onClick:function(){return g("EditLinestring")},children:"Edit Linestring"}),(0,d.jsx)(u.c,{onClick:function(){return g("DrawPolygon")},children:"Draw Polygon"}),(0,d.jsx)(u.c,{onClick:function(){return g("DrawPoint")},children:"Draw Point"}),(0,d.jsx)(u.c,{onClick:function(){return g("DrawLinestring")},children:"Draw Linestring"})]})]})}),"EditPolygon"===a&&(0,d.jsx)(E,{mode:P.args.mode,geojson:P.args.geojson}),"EditPoint"===a&&(0,d.jsx)(E,{mode:h.args.mode,geojson:h.args.geojson}),"EditLinestring"===a&&(0,d.jsx)(E,{mode:j.args.mode,geojson:j.args.geojson}),"DrawPolygon"===a&&(0,d.jsx)(E,{mode:w.args.mode}),"DrawPoint"===a&&(0,d.jsx)(E,{mode:M.args.mode}),"DrawLinestring"===a&&(0,d.jsx)(E,{mode:S.args.mode})]})}.bind({});D.parameters={},D.args={},P.parameters={...P.parameters,docs:{...P.parameters?.docs,source:{originalSource:"(args: useFeatureEditorProps) => {\n  const [visible, setVisible] = useState(true);\n  useEffect(() => {\n    if (visible === false) {\n      setTimeout(() => {\n        setVisible(true);\n      }, 750);\n    }\n  }, [visible]);\n  return <>\n            {visible && <MlFeatureEditor {...args} onChange={features => {\n      console.log(features);\n    }} />}\n            ;\n        </>;\n}",...P.parameters?.docs?.source}}},h.parameters={...h.parameters,docs:{...h.parameters?.docs,source:{originalSource:"(args: useFeatureEditorProps) => {\n  const [visible, setVisible] = useState(true);\n  useEffect(() => {\n    if (visible === false) {\n      setTimeout(() => {\n        setVisible(true);\n      }, 750);\n    }\n  }, [visible]);\n  return <>\n            {visible && <MlFeatureEditor {...args} onChange={features => {\n      console.log(features);\n    }} />}\n            ;\n        </>;\n}",...h.parameters?.docs?.source}}},j.parameters={...j.parameters,docs:{...j.parameters?.docs,source:{originalSource:"(args: useFeatureEditorProps) => {\n  const [visible, setVisible] = useState(true);\n  useEffect(() => {\n    if (visible === false) {\n      setTimeout(() => {\n        setVisible(true);\n      }, 750);\n    }\n  }, [visible]);\n  return <>\n            {visible && <MlFeatureEditor {...args} onChange={features => {\n      console.log(features);\n    }} />}\n            ;\n        </>;\n}",...j.parameters?.docs?.source}}},w.parameters={...w.parameters,docs:{...w.parameters?.docs,source:{originalSource:"(args: useFeatureEditorProps) => {\n  const [visible, setVisible] = useState(true);\n  useEffect(() => {\n    if (visible === false) {\n      setTimeout(() => {\n        setVisible(true);\n      }, 750);\n    }\n  }, [visible]);\n  return <>\n            {visible && <MlFeatureEditor {...args} onChange={features => {\n      console.log(features);\n    }} />}\n            ;\n        </>;\n}",...w.parameters?.docs?.source}}},M.parameters={...M.parameters,docs:{...M.parameters?.docs,source:{originalSource:"(args: useFeatureEditorProps) => {\n  const [visible, setVisible] = useState(true);\n  useEffect(() => {\n    if (visible === false) {\n      setTimeout(() => {\n        setVisible(true);\n      }, 750);\n    }\n  }, [visible]);\n  return <>\n            {visible && <MlFeatureEditor {...args} onChange={features => {\n      console.log(features);\n    }} />}\n            ;\n        </>;\n}",...M.parameters?.docs?.source}}},S.parameters={...S.parameters,docs:{...S.parameters?.docs,source:{originalSource:"(args: useFeatureEditorProps) => {\n  const [visible, setVisible] = useState(true);\n  useEffect(() => {\n    if (visible === false) {\n      setTimeout(() => {\n        setVisible(true);\n      }, 750);\n    }\n  }, [visible]);\n  return <>\n            {visible && <MlFeatureEditor {...args} onChange={features => {\n      console.log(features);\n    }} />}\n            ;\n        </>;\n}",...S.parameters?.docs?.source}}},D.parameters={...D.parameters,docs:{...D.parameters?.docs,source:{originalSource:"() => {\n  const [visible, setVisible] = useState(true);\n  const [selectedMode, setSelectedMode] = useState<string>('EditPolygon');\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  useEffect(() => {\n    if (visible === false) {\n      setTimeout(() => {\n        setVisible(true);\n      }, 750);\n    }\n  }, [visible]);\n  return <>\n            <TopToolbar unmovableButtons={<>\n                        <Typography variant=\"h6\" color={'ButtonText'} marginRight={'20px'}>\n                            {configTitles[selectedMode]}\n                        </Typography>\n                        <Button id=\"basic-button\" variant=\"contained\" aria-controls={open ? 'basic-menu' : undefined} aria-haspopup=\"true\" aria-expanded={open ? 'true' : undefined} onClick={handleClick}>\n                            Example Configs\n                        </Button>\n                        <Menu id=\"basic-menu\" anchorEl={anchorEl} open={open} onClose={handleClose} MenuListProps={{\n        'aria-labelledby': 'basic-button'\n      }}>\n                            <MenuItem onClick={() => setSelectedMode('EditPolygon')}>Edit Polygon</MenuItem>\n                            <MenuItem onClick={() => setSelectedMode('EditPoint')}>Edit Point</MenuItem>\n                            <MenuItem onClick={() => setSelectedMode('EditLinestring')}>Edit Linestring</MenuItem>\n                            <MenuItem onClick={() => setSelectedMode('DrawPolygon')}>Draw Polygon</MenuItem>\n                            <MenuItem onClick={() => setSelectedMode('DrawPoint')}>Draw Point</MenuItem>\n                            <MenuItem onClick={() => setSelectedMode('DrawLinestring')}>Draw Linestring</MenuItem>\n                        </Menu>\n                    </>} />\n            {selectedMode === 'EditPolygon' && <Template mode={EditPolygon.args.mode} geojson={EditPolygon.args.geojson} />}\n            {selectedMode === 'EditPoint' && <Template mode={EditPoint.args.mode} geojson={EditPoint.args.geojson} />}\n            {selectedMode === 'EditLinestring' && <Template mode={EditLinestring.args.mode} geojson={EditLinestring.args.geojson} />}\n            {selectedMode === 'DrawPolygon' && <Template mode={DrawPolygon.args.mode} />}\n            {selectedMode === 'DrawPoint' && <Template mode={DrawPoint.args.mode} />}\n            {selectedMode === 'DrawLinestring' && <Template mode={DrawLinestring.args.mode} />}\n        </>;\n}",...D.parameters?.docs?.source}}};const x=["EditPolygon","EditPoint","EditLinestring","DrawPolygon","DrawPoint","DrawLinestring","CatalogueDemo"]},95316:(e,n,t)=>{t.d(n,{c:()=>u});var r=t(11504),o=t(77288),i=t(24732),s=(t(47634),t(21200)),a=t(54656),l=t(76508),c=t(17624);const u=[function(e,n){var t,u=(0,r.useMemo)((function(){var e;return(0,l.c)(null==n||null===(e=n.globals)||void 0===e?void 0:e.theme)}),[null==n||null===(t=n.globals)||void 0===t?void 0:t.theme]);return(0,c.jsx)("div",{className:"fullscreen_map",children:(0,c.jsx)(o.y4,{children:(0,c.jsxs)(a.c,{theme:u,children:[(0,c.jsx)(e,{}),(0,c.jsx)(i.c,{options:{zoom:14.5,style:"https://wms.wheregroup.com/tileserver/style/osm-bright.json",center:[7.0851268,50.73884]},mapId:"map_1"}),(0,c.jsx)(s.c,{showZoomButtons:!1,mapId:"map_1"})]})})})}]}}]);