[{"/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/stories/MapLibreMap.stories.js":"1","/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/stories/CreatePdfButton.stories.js":"2","/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/stories/MapDrawTools.stories.js":"3","/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/components/MapDrawTools/MapDrawTools.js":"4","/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/components/MapDrawTools/custom-select-mode.js":"5","/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/components/MapDrawTools/custom-polygon-mode.js":"6","/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/components/MapDrawTools/lib/move_features.js":"7","/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/components/MapDrawTools/custom-direct-select-mode.js":"8","/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/components/MapDrawTools/lib/utils.js":"9","/home/tweber/projects/map-components/map-components-maplibre/src/components/MapLibreMap/MapLibreMap.stories.js":"10","/home/tweber/projects/map-components/map-components-maplibre/src/components/MlCreatePdfButton/MlCreatePdfButton.js":"11","/home/tweber/projects/map-components/map-components-maplibre/src/components/MlMapDrawTools/custom-direct-select-mode.js":"12","/home/tweber/projects/map-components/map-components-maplibre/src/components/MlMapDrawTools/lib/utils.js":"13","/home/tweber/projects/map-components/map-components-maplibre/src/components/MlCreatePdfButton/MlCreatePdfButton.stories.js":"14","/home/tweber/projects/map-components/map-components-maplibre/src/components/MlMapDrawTools/MlMapDrawTools.stories.js":"15","/home/tweber/projects/map-components/map-components-maplibre/src/components/MlCreatePdfButton/lib/createPdf.js":"16","/home/tweber/projects/map-components/map-components-maplibre/src/components/MlMapDrawTools/lib/move_features.js":"17","/home/tweber/projects/map-components/map-components-maplibre/src/components/MlCreatePdfButton/lib/nominatimMap.js":"18","/home/tweber/projects/map-components/map-components-maplibre/src/components/MapLibreMap/MapLibreMap.js":"19","/home/tweber/projects/map-components/map-components-maplibre/src/components/MlMapDrawTools/MlMapDrawTools.js":"20","/home/tweber/projects/map-components/map-components-maplibre/src/components/index.js":"21","/home/tweber/projects/map-components/map-components-maplibre/src/components/MlMapDrawTools/custom-polygon-mode.js":"22"},{"size":768,"mtime":1611920503233,"results":"23","hashOfConfig":"24"},{"size":989,"mtime":1611918558025,"results":"25","hashOfConfig":"24"},{"size":935,"mtime":1611924576711,"results":"26","hashOfConfig":"24"},{"size":6453,"mtime":1612349094511,"results":"27","hashOfConfig":"24"},{"size":12644,"mtime":1612349134588,"results":"28","hashOfConfig":"24"},{"size":5608,"mtime":1612349107639,"results":"29","hashOfConfig":"24"},{"size":1584,"mtime":1612283833217,"results":"30","hashOfConfig":"24"},{"size":9407,"mtime":1612349177496,"results":"31","hashOfConfig":"24"},{"size":1568,"mtime":1612349746161,"results":"32","hashOfConfig":"24"},{"size":738,"mtime":1614875597656,"results":"33","hashOfConfig":"34"},{"size":836,"mtime":1614875646092,"results":"35","hashOfConfig":"34"},{"size":9407,"mtime":1614849573914,"results":"36","hashOfConfig":"34"},{"size":1568,"mtime":1614849573914,"results":"37","hashOfConfig":"34"},{"size":1012,"mtime":1614874829555,"results":"38","hashOfConfig":"34"},{"size":901,"mtime":1614874839243,"results":"39","hashOfConfig":"34"},{"size":9151,"mtime":1614875101322,"results":"40","hashOfConfig":"34"},{"size":1584,"mtime":1614849573914,"results":"41","hashOfConfig":"34"},{"size":1092,"mtime":1614875159118,"results":"42","hashOfConfig":"34"},{"size":1685,"mtime":1614875735412,"results":"43","hashOfConfig":"34"},{"size":6459,"mtime":1614875658484,"results":"44","hashOfConfig":"34"},{"size":246,"mtime":1614874240593,"results":"45","hashOfConfig":"34"},{"size":5608,"mtime":1614849573914,"results":"46","hashOfConfig":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"b5n0xj",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"16v31o5",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/stories/MapLibreMap.stories.js",["102","103"],"import React from \"react\";\n\nimport { MapLibreMap, CreatePdfButton } from \"react-map-components-core\";\nimport { MapComponentsProvider } from \"react-map-components-core\";\nimport \"../App.css\";\n\nexport default {\n  title: \"Core/MapLibreMap\",\n  component: MapLibreMap,\n  argTypes: {\n    options: {\n      control: {\n        type: \"object\",\n      },\n    },\n  },\n};\n\nconst Template = (args) => (\n  <MapComponentsProvider>\n    <MapLibreMap options={args.options} />\n  </MapComponentsProvider>\n);\n\nexport const ExampleConfig = Template.bind({});\nExampleConfig.args = {\n  options: {\n    style: \"https://wms.wheregroup.com/tileserver/style/osm-bright.json\",\n    center: [8.607, 53.1409349],\n    maxBounds: [\n      [1.40625, 43.452919],\n      [17.797852, 55.973798],\n    ],\n  },\n};\n",["104","105"],"/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/stories/CreatePdfButton.stories.js",["106"],"import React from \"react\";\n\nimport { MapLibreMap, CreatePdfButton } from \"react-map-components-core\";\nimport { MapComponentsProvider } from \"react-map-components-core\";\nimport \"../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default {\n  title: \"MapComponents/CreatePdfButton\",\n  component: CreatePdfButton,\n  argTypes: {\n    colora: {\n      control: {\n        type: \"color\",\n      },\n    },\n    options: {\n      control: {\n        type: \"object\",\n      },\n    },\n  },\n};\n\nconst Template = (args) => (\n  <MapComponentsProvider>\n    <div className=\"navbar\">\n      <CreatePdfButton />\n    </div>\n    <MapLibreMap options={args.options} />\n  </MapComponentsProvider>\n);\n\nexport const ExampleConfig = Template.bind({});\nExampleConfig.args = {\n  colora: \"#ffffff\",\n  options: {\n    style: \"https://wms.wheregroup.com/tileserver/style/osm-bright.json\",\n    center: [8.607, 53.1409349],\n    maxBounds: [\n      [1.40625, 43.452919],\n      [17.797852, 55.973798],\n    ],\n  },\n};\n",["107","108"],"/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/stories/MapDrawTools.stories.js",["109"],"import React from \"react\";\n\nimport { MapLibreMap } from \"react-map-components-core\";\nimport { MapComponentsProvider } from \"react-map-components-core\";\nimport MapDrawTools from \"../components/MapDrawTools/MapDrawTools\";\n\nimport Nav from \"react-bootstrap/Nav\";\n\nimport \"../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default {\n  title: \"MapComponents/MapDrawTools\",\n  component: MapDrawTools,\n  argTypes: {},\n};\n\nconst Template = (args) => (\n  <MapComponentsProvider>\n    <Nav as=\"ul\" className=\"navbar\">\n      <MapDrawTools />\n    </Nav>\n    <MapLibreMap options={args.options} />\n  </MapComponentsProvider>\n);\n\nexport const ExampleConfig = Template.bind({});\nExampleConfig.args = {\n  colora: \"#ffffff\",\n  options: {\n    style: \"https://wms.wheregroup.com/tileserver/style/osm-bright.json\",\n    center: [8.607, 53.1409349],\n    maxBounds: [\n      [1.40625, 43.452919],\n      [17.797852, 55.973798],\n    ],\n  },\n};\n",["110","111"],"/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/components/MapDrawTools/MapDrawTools.js",["112","113"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport \"./MapDrawTools.css\";\n\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport CustomPolygonMode from \"./custom-polygon-mode\";\nimport CustomSelectMode from \"./custom-select-mode\";\nimport CustomDirectSelectMode from \"./custom-direct-select-mode\";\n\nimport { MapContext } from \"react-map-components-core\";\n\nimport Nav from \"react-bootstrap/Nav\";\n//import Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nfunction MapDrawTools() {\n  const draw = useRef(null);\n  const mapContext = useContext(MapContext);\n\n  const [firstLoad, setFirstLoad] = useState(true);\n  const [mouseUpTrigger, setMouseUpTrigger] = useState(false);\n\n  //const [groupCloseVertices, setGroupCloseVertices] = useState(false);\n\n  const [storedMapFeatures, setStoredMapFeatures] = useState(null);\n\n  const [drawnFeatures, setDrawnFeatures] = useState([]);\n  const [drawModeActive, setDrawModeActive] = useState(false);\n  const [currentDrawMode, setCurrentDrawMode] = useState(\"custom_select\");\n  const [selectedFeatureId, setSelectedFeatureId] = useState(\"\");\n\n  useEffect(() => {\n    // retrieve stored features from localstorage\n    let storedMapFeaturesStr = localStorage.getItem(\"storedMapFeatures\");\n\n    if (storedMapFeaturesStr) {\n      let storedMapFeaturesObj = JSON.parse(storedMapFeaturesStr);\n      setStoredMapFeatures(storedMapFeaturesObj);\n      setDrawnFeatures(storedMapFeaturesObj.features);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (mapContext.map && firstLoad) {\n      setFirstLoad(false);\n      if (\n        mapContext.map.getSource(\"mapbox-gl-draw-cold\") &&\n        window.MapboxDraw &&\n        typeof window.MapboxDraw.remove !== \"undefined\"\n      ) {\n        // remove old Mapbox-gl-Draw from Mapbox instance when hot-reloading this component during development\n        window.MapboxDraw.remove();\n      }\n      window.MapLibreObj = mapContext.map;\n\n      draw.current = new MapboxDraw({\n        displayControlsDefault: false,\n        defaultMode: \"custom_select\",\n        modes: Object.assign(\n          {\n            custom_polygon: CustomPolygonMode,\n            custom_select: CustomSelectMode,\n            custom_direct_select: CustomDirectSelectMode,\n          },\n          MapboxDraw.modes\n        ),\n      });\n\n      mapContext.map.on(\"draw.modechange\", (e) => {\n        console.log(\"modechange\");\n        setCurrentDrawMode(e.mode);\n      });\n\n      window.MapboxDraw = draw.current;\n\n      // sadly there is no featureAdd event available in MapLibre\n      mapContext.map.addControl(draw.current, \"top-left\");\n\n      mapContext.map.on(\"mouseup\", () => {\n        setMouseUpTrigger(Math.random());\n      });\n\n      if (storedMapFeatures) {\n        draw.current.set(storedMapFeatures);\n      }\n    }\n  }, [mapContext.map, drawnFeatures, firstLoad]);\n\n  useEffect(() => {\n    if (draw.current) {\n      // update drawnFeatures state object\n      let currentFeatureCollection = draw.current.getAll();\n      if (\n        currentDrawMode === \"custom_polygon\" ||\n        currentDrawMode === \"custom_select\"\n      ) {\n        setDrawnFeatures([...currentFeatureCollection.features]);\n\n        localStorage.setItem(\n          \"storedMapFeatures\",\n          JSON.stringify(currentFeatureCollection)\n        );\n      }\n\n      // update selected feature\n      let selectedFeature = draw.current.getSelected();\n      for (var i = 0; i < drawnFeatures.length; i++) {\n        if (\n          typeof selectedFeature.features[0] !== \"undefined\" &&\n          selectedFeature.features[0].id === drawnFeatures[i].id\n        ) {\n          setSelectedFeatureId(selectedFeature.features[0].id);\n        }\n      }\n    }\n  }, [mouseUpTrigger]);\n\n  useEffect(() => {\n    if (draw.current) {\n      switch (currentDrawMode) {\n        case \"custom_polygon\":\n          draw.current.changeMode(\"custom_polygon\");\n          break;\n        case \"custom_select\":\n        default:\n          draw.current.changeMode(\"custom_select\");\n          break;\n      }\n    }\n  }, [currentDrawMode]);\n\n  return (\n    <>\n      <Nav.Item as=\"li\" key={1}>\n        <Button\n          variant={drawModeActive ? \"warning\" : \"light\"}\n          onClick={() => setDrawModeActive(!drawModeActive)}\n        >\n          Draw\n        </Button>\n      </Nav.Item>\n      {drawModeActive && (\n        <>\n          <Nav.Item as=\"li\" key={2}>\n            <Button\n              variant={\n                currentDrawMode === \"custom_select\" ||\n                currentDrawMode === \"custom_direct_select\"\n                  ? \"warning\"\n                  : \"light\"\n              }\n              onClick={() => setCurrentDrawMode(\"custom_select\")}\n            >\n              Select\n            </Button>\n          </Nav.Item>\n          <Nav.Item as=\"li\" key={4}>\n            <Button\n              variant=\"light\"\n              onClick={() => {\n                localStorage.setItem(\"storedMapFeatures\", \"\");\n                setStoredMapFeatures(null);\n                setDrawnFeatures([]);\n                draw.current.deleteAll();\n              }}\n            >\n              Clear\n            </Button>\n          </Nav.Item>\n          <Nav.Item as=\"li\" key={3}>\n            <Button\n              variant={\n                currentDrawMode === \"custom_polygon\" ? \"warning\" : \"light\"\n              }\n              onClick={() =>\n                setCurrentDrawMode(\n                  currentDrawMode !== \"custom_polygon\"\n                    ? \"custom_polygon\"\n                    : \"custom_select\"\n                )\n              }\n            >\n              Polygon\n            </Button>\n          </Nav.Item>\n          <div\n            style={{\n              position: \"absolute\",\n              left: \"17px\",\n              top: \"60px\",\n              backgroundColor: \"#f8f9fa\",\n              borderRadius: \"4px\",\n              width: \"150px\",\n              height: \"200px\",\n            }}\n          >\n            <ListGroup>\n              {drawnFeatures.map((feature, id) => (\n                <ListGroup.Item\n                  key={id}\n                  active={selectedFeatureId === feature.id}\n                >\n                  {feature.type} {id}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default MapDrawTools;\n","/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/components/MapDrawTools/custom-select-mode.js",["114"],"/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/components/MapDrawTools/custom-polygon-mode.js",[],"/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/components/MapDrawTools/lib/move_features.js",[],"/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/components/MapDrawTools/custom-direct-select-mode.js",[],"/home/tweber/projects/react_map_components/documentation_trial/react-map-components-maplibre/src/components/MapDrawTools/lib/utils.js",[],"/home/tweber/projects/map-components/map-components-maplibre/src/components/MapLibreMap/MapLibreMap.stories.js",["115"],"/home/tweber/projects/map-components/map-components-maplibre/src/components/MlCreatePdfButton/MlCreatePdfButton.js",[],"/home/tweber/projects/map-components/map-components-maplibre/src/components/MlMapDrawTools/custom-direct-select-mode.js",[],"/home/tweber/projects/map-components/map-components-maplibre/src/components/MlMapDrawTools/lib/utils.js",[],"/home/tweber/projects/map-components/map-components-maplibre/src/components/MlCreatePdfButton/MlCreatePdfButton.stories.js",["116"],"import React from \"react\";\n\nimport { MapLibreMap } from \"../\";\nimport MlCreatePdfButton from \"./MlCreatePdfButton\";\nimport { MapComponentsProvider } from \"react-map-components-core\";\nimport \"../../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default {\n  title: \"MapComponents/MlCreatePdfButton\",\n  component: MlCreatePdfButton,\n  argTypes: {\n    colora: {\n      control: {\n        type: \"color\",\n      },\n    },\n    options: {\n      control: {\n        type: \"object\",\n      },\n    },\n  },\n};\n\nconst Template = (args) => (\n  <MapComponentsProvider>\n    <div className=\"navbar\">\n      <MlCreatePdfButton />\n    </div>\n    <MapLibreMap options={args.options} />\n  </MapComponentsProvider>\n);\n\nexport const ExampleConfig = Template.bind({});\nExampleConfig.args = {\n  colora: \"#ffffff\",\n  options: {\n    style: \"https://wms.wheregroup.com/tileserver/style/osm-bright.json\",\n    center: [8.607, 53.1409349],\n    maxBounds: [\n      [1.40625, 43.452919],\n      [17.797852, 55.973798],\n    ],\n  },\n};\n",["117","118"],"/home/tweber/projects/map-components/map-components-maplibre/src/components/MlMapDrawTools/MlMapDrawTools.stories.js",["119"],"import React from \"react\";\n\nimport { MapLibreMap } from \"../\";\nimport { MapComponentsProvider } from \"react-map-components-core\";\nimport MlMapDrawTools from \"./MlMapDrawTools\";\n\nimport Nav from \"react-bootstrap/Nav\";\n\nimport \"../../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default {\n  title: \"MapComponents/MlMapDrawTools\",\n  component: MlMapDrawTools,\n  argTypes: {},\n};\n\nconst Template = (args) => (\n  <MapComponentsProvider>\n    <Nav as=\"ul\" className=\"navbar\">\n      <MlMapDrawTools />\n    </Nav>\n    <MapLibreMap options={args.options} />\n  </MapComponentsProvider>\n);\n\nexport const ExampleConfig = Template.bind({});\nExampleConfig.args = {\n  colora: \"#ffffff\",\n  options: {\n    style: \"https://wms.wheregroup.com/tileserver/style/osm-bright.json\",\n    center: [8.607, 53.1409349],\n    maxBounds: [\n      [1.40625, 43.452919],\n      [17.797852, 55.973798],\n    ],\n  },\n};\n",["120","121"],"/home/tweber/projects/map-components/map-components-maplibre/src/components/MlCreatePdfButton/lib/createPdf.js",[],"/home/tweber/projects/map-components/map-components-maplibre/src/components/MlMapDrawTools/lib/move_features.js",[],"/home/tweber/projects/map-components/map-components-maplibre/src/components/MlCreatePdfButton/lib/nominatimMap.js",["122","123"],"/home/tweber/projects/map-components/map-components-maplibre/src/components/MapLibreMap/MapLibreMap.js",["124"],"/home/tweber/projects/map-components/map-components-maplibre/src/components/MlMapDrawTools/MlMapDrawTools.js",["125","126"],"/home/tweber/projects/map-components/map-components-maplibre/src/components/index.js",[],"/home/tweber/projects/map-components/map-components-maplibre/src/components/MlMapDrawTools/custom-polygon-mode.js",[],{"ruleId":"127","severity":1,"message":"128","line":3,"column":23,"nodeType":"129","messageId":"130","endLine":3,"endColumn":38},{"ruleId":"131","severity":1,"message":"132","line":7,"column":1,"nodeType":"133","endLine":17,"endColumn":3},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"131","severity":1,"message":"132","line":8,"column":1,"nodeType":"133","endLine":23,"endColumn":3},{"ruleId":"134","replacedBy":"138"},{"ruleId":"136","replacedBy":"139"},{"ruleId":"131","severity":1,"message":"132","line":12,"column":1,"nodeType":"133","endLine":16,"endColumn":3},{"ruleId":"134","replacedBy":"140"},{"ruleId":"136","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":88,"column":6,"nodeType":"144","endLine":88,"endColumn":48,"suggestions":"145"},{"ruleId":"142","severity":1,"message":"146","line":117,"column":6,"nodeType":"144","endLine":117,"endColumn":22,"suggestions":"147"},{"ruleId":"127","severity":1,"message":"148","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":17},{"ruleId":"131","severity":1,"message":"132","line":7,"column":1,"nodeType":"133","endLine":17,"endColumn":3},{"ruleId":"131","severity":1,"message":"132","line":9,"column":1,"nodeType":"133","endLine":24,"endColumn":3},{"ruleId":"134","replacedBy":"149"},{"ruleId":"136","replacedBy":"150"},{"ruleId":"131","severity":1,"message":"132","line":12,"column":1,"nodeType":"133","endLine":16,"endColumn":3},{"ruleId":"134","replacedBy":"151"},{"ruleId":"136","replacedBy":"152"},{"ruleId":"127","severity":1,"message":"153","line":46,"column":15,"nodeType":"129","messageId":"130","endLine":46,"endColumn":18},{"ruleId":"154","severity":1,"message":"155","line":47,"column":26,"nodeType":"156","messageId":"157","endLine":47,"endColumn":28},{"ruleId":"142","severity":1,"message":"158","line":42,"column":6,"nodeType":"144","endLine":42,"endColumn":8,"suggestions":"159"},{"ruleId":"142","severity":1,"message":"143","line":88,"column":6,"nodeType":"144","endLine":88,"endColumn":48,"suggestions":"160"},{"ruleId":"142","severity":1,"message":"146","line":117,"column":6,"nodeType":"144","endLine":117,"endColumn":22,"suggestions":"161"},"no-unused-vars","'CreatePdfButton' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["162"],"no-negated-in-lhs",["163"],["162"],["163"],["162"],["163"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storedMapFeatures'. Either include it or remove the dependency array.","ArrayExpression",["164"],"React Hook useEffect has missing dependencies: 'currentDrawMode' and 'drawnFeatures'. Either include them or remove the dependency array.",["165"],"'drawUtils' is defined but never used.",["162"],["163"],["162"],["163"],"'key' is assigned a value but never used.","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'mapContext' and 'mapOptions'. Either include them or remove the dependency array.",["166"],["167"],["168"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"169","fix":"175"},{"desc":"171","fix":"176"},"Update the dependencies array to be: [mapContext.map, drawnFeatures, firstLoad, storedMapFeatures]",{"range":"177","text":"178"},"Update the dependencies array to be: [currentDrawMode, drawnFeatures, mouseUpTrigger]",{"range":"179","text":"180"},"Update the dependencies array to be: [mapContext, mapOptions]",{"range":"181","text":"182"},{"range":"183","text":"178"},{"range":"184","text":"180"},[2919,2961],"[mapContext.map, drawnFeatures, firstLoad, storedMapFeatures]",[3815,3831],"[currentDrawMode, drawnFeatures, mouseUpTrigger]",[1526,1528],"[mapContext, mapOptions]",[2923,2965],[3819,3835]]